/*! lazysizes - v5.2.0 */
!(function (a, b) { const c = b(a, a.document, Date); a.lazySizes = c, typeof module === 'object' && module.exports && (module.exports = c); }(typeof window !== 'undefined' ? window : {}, (a, b, c) => {
  let d; let e; if ((function () {
    let b; const c = {
      lazyClass: 'lazyload', loadedClass: 'lazyloaded', loadingClass: 'lazyloading', preloadClass: 'lazypreload', errorClass: 'lazyerror', autosizesClass: 'lazyautosizes', srcAttr: 'data-src', srcsetAttr: 'data-srcset', sizesAttr: 'data-sizes', minSize: 40, customMedia: {}, init: !0, expFactor: 1.5, hFac: 0.8, loadMode: 2, loadHidden: !0, ricTimeout: 0, throttleDelay: 125,
    }; e = a.lazySizesConfig || a.lazysizesConfig || {}; for (b in c)b in e || (e[b] = c[b]);
  }()), !b || !b.getElementsByClassName) return { init() {}, cfg: e, noSupport: !0 }; const f = b.documentElement; const g = a.HTMLPictureElement; const h = 'addEventListener'; const i = 'getAttribute'; const j = a[h].bind(a); const k = a.setTimeout; const l = a.requestAnimationFrame || k; const m = a.requestIdleCallback; const n = /^picture$/i; const o = ['load', 'error', 'lazyincluded', '_lazyloaded']; const p = {}; const q = Array.prototype.forEach; const r = function (a, b) { return p[b] || (p[b] = new RegExp(`(\\s|^)${b}(\\s|$)`)), p[b].test(a[i]('class') || '') && p[b]; }; const s = function (a, b) { r(a, b) || a.setAttribute('class', `${(a[i]('class') || '').trim()} ${b}`); }; const t = function (a, b) { let c; (c = r(a, b)) && a.setAttribute('class', (a[i]('class') || '').replace(c, ' ')); }; var u = function (a, b, c) { const d = c ? h : 'removeEventListener'; c && u(a, b), o.forEach((c) => { a[d](c, b); }); }; const v = function (a, c, e, f, g) { const h = b.createEvent('Event'); return e || (e = {}), e.instance = d, h.initEvent(c, !f, !g), h.detail = e, a.dispatchEvent(h), h; }; const w = function (b, c) { let d; !g && (d = a.picturefill || e.pf) ? (c && c.src && !b[i]('srcset') && b.setAttribute('srcset', c.src), d({ reevaluate: !0, elements: [b] })) : c && c.src && (b.src = c.src); }; const x = function (a, b) { return (getComputedStyle(a, null) || {})[b]; }; const y = function (a, b, c) { for (c = c || a.offsetWidth; c < e.minSize && b && !a._lazysizesWidth;)c = b.offsetWidth, b = b.parentNode; return c; }; const z = (function () { let a; let c; const d = []; const e = []; let f = d; const g = function () { const b = f; for (f = d.length ? e : d, a = !0, c = !1; b.length;)b.shift()(); a = !1; }; const h = function (d, e) { a && !e ? d.apply(this, arguments) : (f.push(d), c || (c = !0, (b.hidden ? k : l)(g))); }; return h._lsFlush = g, h; }()); const A = function (a, b) { return b ? function () { z(a); } : function () { const b = this; const c = arguments; z(() => { a.apply(b, c); }); }; }; const B = function (a) { let b; let d = 0; const f = e.throttleDelay; let g = e.ricTimeout; const h = function () { b = !1, d = c.now(), a(); }; const i = m && g > 49 ? function () { m(h, { timeout: g }), g !== e.ricTimeout && (g = e.ricTimeout); } : A(() => { k(h); }, !0); return function (a) { let e; (a = !0 === a) && (g = 33), b || (b = !0, e = f - (c.now() - d), e < 0 && (e = 0), a || e < 9 ? i() : k(i, e)); }; }; const C = function (a) { let b; let d; const e = 99; const f = function () { b = null, a(); }; var g = function () { const a = c.now() - d; a < e ? k(g, e - a) : (m || f)(f); }; return function () { d = c.now(), b || (b = k(g, e)); }; }; const D = (function () {
    let g; let m; let o; let p; let y; let D; let F; let G; let H; let I; let J; let K; const L = /^img$/i; const M = /^iframe$/i; const N = 'onscroll' in a && !/(gle|ing)bot/.test(navigator.userAgent); const O = 0; let P = 0; let Q = 0; let R = -1; const S = function (a) { Q--, (!a || Q < 0 || !a.target) && (Q = 0); }; const T = function (a) { return K == null && (K = x(b.body, 'visibility') == 'hidden'), K || !(x(a.parentNode, 'visibility') == 'hidden' && x(a, 'visibility') == 'hidden'); }; const U = function (a, c) { let d; let e = a; let g = T(a); for (G -= c, J += c, H -= c, I += c; g && (e = e.offsetParent) && e != b.body && e != f;)(g = (x(e, 'opacity') || 1) > 0) && x(e, 'overflow') != 'visible' && (d = e.getBoundingClientRect(), g = I > d.left && H < d.right && J > d.top - 1 && G < d.bottom + 1); return g; }; const V = function () { let a; let c; let h; let j; let k; let l; let n; let o; let q; let r; let s; let t; const u = d.elements; if ((p = e.loadMode) && Q < 8 && (a = u.length)) { for (c = 0, R++; c < a; c++) if (u[c] && !u[c]._lazyRace) if (!N || d.prematureUnveil && d.prematureUnveil(u[c]))ba(u[c]); else if ((o = u[c][i]('data-expand')) && (l = 1 * o) || (l = P), r || (r = !e.expand || e.expand < 1 ? f.clientHeight > 500 && f.clientWidth > 500 ? 500 : 370 : e.expand, d._defEx = r, s = r * e.expFactor, t = e.hFac, K = null, P < s && Q < 1 && R > 2 && p > 2 && !b.hidden ? (P = s, R = 0) : P = p > 1 && R > 1 && Q < 6 ? r : O), q !== l && (D = innerWidth + l * t, F = innerHeight + l, n = -1 * l, q = l), h = u[c].getBoundingClientRect(), (J = h.bottom) >= n && (G = h.top) <= F && (I = h.right) >= n * t && (H = h.left) <= D && (J || I || H || G) && (e.loadHidden || T(u[c])) && (m && Q < 3 && !o && (p < 3 || R < 4) || U(u[c], l))) { if (ba(u[c]), k = !0, Q > 9) break; } else !k && m && !j && Q < 4 && R < 4 && p > 2 && (g[0] || e.preloadAfterLoad) && (g[0] || !o && (J || I || H || G || u[c][i](e.sizesAttr) != 'auto')) && (j = g[0] || u[c]); j && !k && ba(j); } }; const W = B(V); const X = function (a) { const b = a.target; if (b._lazyCache) return void delete b._lazyCache; S(a), s(b, e.loadedClass), t(b, e.loadingClass), u(b, Z), v(b, 'lazyloaded'); }; const Y = A(X); var Z = function (a) { Y({ target: a.target }); }; const $ = function (a, b) { try { a.contentWindow.location.replace(b); } catch (c) { a.src = b; } }; const _ = function (a) { let b; const c = a[i](e.srcsetAttr); (b = e.customMedia[a[i]('data-media') || a[i]('media')]) && a.setAttribute('media', b), c && a.setAttribute('srcset', c); }; const aa = A((a, b, c, d, f) => { let g; let h; let j; let l; let m; let p; (m = v(a, 'lazybeforeunveil', b)).defaultPrevented || (d && (c ? s(a, e.autosizesClass) : a.setAttribute('sizes', d)), h = a[i](e.srcsetAttr), g = a[i](e.srcAttr), f && (j = a.parentNode, l = j && n.test(j.nodeName || '')), p = b.firesLoad || 'src' in a && (h || g || l), m = { target: a }, s(a, e.loadingClass), p && (clearTimeout(o), o = k(S, 2500), u(a, Z, !0)), l && q.call(j.getElementsByTagName('source'), _), h ? a.setAttribute('srcset', h) : g && !l && (M.test(a.nodeName) ? $(a, g) : a.src = g), f && (h || l) && w(a, { src: g })), a._lazyRace && delete a._lazyRace, t(a, e.lazyClass), z(() => { const b = a.complete && a.naturalWidth > 1; p && !b || (b && s(a, 'ls-is-cached'), X(m), a._lazyCache = !0, k(() => { '_lazyCache' in a && delete a._lazyCache; }, 9)), a.loading == 'lazy' && Q--; }, !0); }); var ba = function (a) { if (!a._lazyRace) { let b; const c = L.test(a.nodeName); const d = c && (a[i](e.sizesAttr) || a[i]('sizes')); const f = d == 'auto'; (!f && m || !c || !a[i]('src') && !a.srcset || a.complete || r(a, e.errorClass) || !r(a, e.lazyClass)) && (b = v(a, 'lazyunveilread').detail, f && E.updateElem(a, !0, a.offsetWidth), a._lazyRace = !0, Q++, aa(a, b, f, d, c)); } }; const ca = C(() => { e.loadMode = 3, W(); }); const da = function () { e.loadMode == 3 && (e.loadMode = 2), ca(); }; var ea = function () { if (!m) { if (c.now() - y < 999) return void k(ea, 999); m = !0, e.loadMode = 3, W(), j('scroll', da, !0); } }; return {
      _() { y = c.now(), d.elements = b.getElementsByClassName(e.lazyClass), g = b.getElementsByClassName(`${e.lazyClass} ${e.preloadClass}`), j('scroll', W, !0), j('resize', W, !0), j('pageshow', (a) => { if (a.persisted) { const c = b.querySelectorAll(`.${e.loadingClass}`); c.length && c.forEach && l(() => { c.forEach((a) => { a.complete && ba(a); }); }); } }), a.MutationObserver ? new MutationObserver(W).observe(f, { childList: !0, subtree: !0, attributes: !0 }) : (f[h]('DOMNodeInserted', W, !0), f[h]('DOMAttrModified', W, !0), setInterval(W, 999)), j('hashchange', W, !0), ['focus', 'mouseover', 'click', 'load', 'transitionend', 'animationend'].forEach((a) => { b[h](a, W, !0); }), /d$|^c/.test(b.readyState) ? ea() : (j('load', ea), b[h]('DOMContentLoaded', W), k(ea, 2e4)), d.elements.length ? (V(), z._lsFlush()) : W(); }, checkElems: W, unveil: ba, _aLSL: da,
    };
  }()); var E = (function () { let a; const c = A((a, b, c, d) => { let e; let f; let g; if (a._lazysizesWidth = d, d += 'px', a.setAttribute('sizes', d), n.test(b.nodeName || '')) for (e = b.getElementsByTagName('source'), f = 0, g = e.length; f < g; f++)e[f].setAttribute('sizes', d); c.detail.dataAttr || w(a, c.detail); }); const d = function (a, b, d) { let e; const f = a.parentNode; f && (d = y(a, f, d), e = v(a, 'lazybeforesizes', { width: d, dataAttr: !!b }), e.defaultPrevented || (d = e.detail.width) && d !== a._lazysizesWidth && c(a, f, e, d)); }; const f = function () { let b; const c = a.length; if (c) for (b = 0; b < c; b++)d(a[b]); }; const g = C(f); return { _() { a = b.getElementsByClassName(e.autosizesClass), j('resize', g); }, checkElems: g, updateElem: d }; }()); var F = function () { !F.i && b.getElementsByClassName && (F.i = !0, E._(), D._()); }; return k(() => { e.init && F(); }), d = {
    cfg: e, autoSizer: E, loader: D, init: F, uP: w, aC: s, rC: t, hC: r, fire: v, gW: y, rAF: z,
  };
}));
