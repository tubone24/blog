{"componentChunkName":"component---src-templates-index-tsx","path":"/pages/7","result":{"pageContext":{"totalCount":110,"group":[{"node":{"id":"5c69a232-d855-5816-a7ce-5077713eccf8","html":"<p>すすめられたので使ってみた。</p>\n<p>以前、<a href=\"https://blog.tubone-project24.xyz/2019-09-12-particles-js\" target=\"_blank\" rel=\"noopener noreferrer\">particles.jsをVue.jsで使ってかっこいいページを作る</a>という記事を書いたところ、記事にコメントがありました。</p>\n<p><a href=\"https://github.com/lindelof\" target=\"_blank\" rel=\"noopener noreferrer\">lindelof</a>さんというOSS作者さんからでparticleをVue.jsのBackgroundに当てたいなら<a href=\"https://github.com/lindelof/particles-bg-vue\" target=\"_blank\" rel=\"noopener noreferrer\">indelof/particles-bg-vue</a>がいいよ～と紹介されましたので早速使ってみました。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#particles-bg-vue%E3%81%A8%E3%81%AF\">particles-bg-vueとは？</a></p>\n</li>\n<li>\n<p><a href=\"#nuxtjs%E3%81%A7%E3%81%AE%E5%88%A9%E7%94%A8%E6%B3%95\">Nuxt.jsでの利用法</a></p>\n<ul>\n<li><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">インストール</a></li>\n<li><a href=\"#plugins%E3%81%A7vue-use%E3%81%99%E3%82%8B\">pluginsでVue useする</a></li>\n<li><a href=\"#layouts%E3%81%A7%E5%85%B1%E9%80%9A%E7%9A%84%E3%81%ABparticle%E3%82%92%E5%BD%93%E3%81%A6%E3%82%8B\">layoutsで共通的にparticleを当てる</a></li>\n<li><a href=\"#layouts%E3%82%92%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%80\">layoutsを読み込む</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E7%B5%90%E8%AB%96\">結論</a></p>\n</li>\n<li>\n<p><a href=\"#%E8%BF%BD%E8%A8%98particle%E3%81%AEcanvas%E3%81%AEstyle%E3%82%92%E5%A4%89%E3%81%88%E3%81%9F%E3%81%84\">追記(particleのcanvasのstyleを変えたい！)</a></p>\n<ul>\n<li><a href=\"#canvasobject%E3%81%AE%E4%BD%9C%E6%88%90\">canvasObjectの作成</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"particles-bg-vueとは\" style=\"position:relative;\"><a href=\"#particles-bg-vue%E3%81%A8%E3%81%AF\" aria-label=\"particles bg vueとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>particles-bg-vueとは？</h2>\n<p>particles.js以上にかっちょいいparticleをVueで使うためのOSSぽいです。少しコードを読んでみましたが、<a href=\"https://github.com/a-jie/Proton\" target=\"_blank\" rel=\"noopener noreferrer\">Proton</a>という軽量particleライブラリがあり、そちらを背景にセットするComponentのようです。</p>\n<p>仕上がりはこんな感じ！　(READMEから引用)</p>\n<p><img src=\"https://raw.githubusercontent.com/lindelof/particles-bg-vue/master/images/01.jpg\" alt=\"img\"></p>\n<p><img src=\"https://raw.githubusercontent.com/lindelof/particles-bg/master/image/07.jpg\" alt=\"img\"></p>\n<p><img src=\"https://raw.githubusercontent.com/lindelof/particles-bg-vue/master/images/03.jpg\" alt=\"img\"></p>\n<p>Vue.js版だけでなく、<a href=\"https://github.com/lindelof/particles-bg\" target=\"_blank\" rel=\"noopener noreferrer\">React版</a>もあります。</p>\n<p>細かいことはともかく早速使ってみます。</p>\n<h2 id=\"nuxtjsでの利用法\" style=\"position:relative;\"><a href=\"#nuxtjs%E3%81%A7%E3%81%AE%E5%88%A9%E7%94%A8%E6%B3%95\" aria-label=\"nuxtjsでの利用法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nuxt.jsでの利用法</h2>\n<p>ただ、particles-bg-vueをVue.jsで使うだけなら、<a href=\"https://github.com/lindelof/particles-bg-vue/blob/master/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">README</a>を読みましょうというだけなので、Nuxt.jsでの利用法を確認していきます。</p>\n<h3 id=\"インストール\" style=\"position:relative;\"><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" aria-label=\"インストール permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>インストール</h3>\n<p>インストールはnpmまたはyarnを使います。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save particles-bg-vue</code></pre></div>\n<p>簡単ですね。</p>\n<h3 id=\"pluginsでvue-useする\" style=\"position:relative;\"><a href=\"#plugins%E3%81%A7vue-use%E3%81%99%E3%82%8B\" aria-label=\"pluginsでvue useする permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pluginsでVue useする</h3>\n<p>Nuxt.jsでVue useする一番簡単な方法は<a href=\"https://ja.nuxtjs.org/guide/plugins/\" target=\"_blank\" rel=\"noopener noreferrer\">plugins</a>として読み込むことです。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// plugins/particles.ts</span>\n\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> VueParticlesBg <span class=\"token keyword\">from</span> <span class=\"token string\">\"particles-bg-vue\"</span><span class=\"token punctuation\">;</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>VueParticlesBg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nuxt.jsで上記のpluginsを読み込むために <code class=\"language-text\">nuxt.config.ts</code> のコンフィグを変更します。</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token comment\">// nuxt.config.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'spa'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">env</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">head</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>npm_package_name <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">meta</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">charset</span><span class=\"token operator\">:</span> <span class=\"token string\">\"utf-8\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"viewport\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">\"width=device-width, initial-scale=1\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">hid</span><span class=\"token operator\">:</span> <span class=\"token string\">\"description\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"description\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>npm_package_description <span class=\"token operator\">||</span> <span class=\"token string\">''</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">link</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">rel</span><span class=\"token operator\">:</span> <span class=\"token string\">\"icon\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/x-icon\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">href</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/favicon.ico\"</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">loading</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#3B8070\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">css</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@/plugins/compositionAPI'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@/plugins/particles'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//読み込む</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"layoutsで共通的にparticleを当てる\" style=\"position:relative;\"><a href=\"#layouts%E3%81%A7%E5%85%B1%E9%80%9A%E7%9A%84%E3%81%ABparticle%E3%82%92%E5%BD%93%E3%81%A6%E3%82%8B\" aria-label=\"layoutsで共通的にparticleを当てる permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>layoutsで共通的にparticleを当てる</h3>\n<p>Nuxt.js共通的にレイアウトを当てるときは、<a href=\"https://ja.nuxtjs.org/api/pages-layout/\" target=\"_blank\" rel=\"noopener noreferrer\">layouts</a>に宣言し、各ページで利用します。</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token comment\">//layouts/default.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"app\"</span><span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">&lt;</span>particles<span class=\"token operator\">-</span>bg type<span class=\"token operator\">=</span><span class=\"token string\">\"circle\"</span> <span class=\"token operator\">:</span>bg<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token comment\">// templateでparticles-bgを利用</span></span>    <span class=\"token operator\">&lt;</span>nuxt<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>typeに設定する内容については、<a href=\"https://github.com/lindelof/particles-bg-vue/blob/master/README.md#parameter-description\" target=\"_blank\" rel=\"noopener noreferrer\">particles-bg-vueのREADME: Parameter Description</a>をご確認ください。</p>\n<h3 id=\"layoutsを読み込む\" style=\"position:relative;\"><a href=\"#layouts%E3%82%92%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%80\" aria-label=\"layoutsを読み込む permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>layoutsを読み込む</h3>\n<p>particleを当てたいページに対しては上記で作成したlayoutsを読み込みます。</p>\n<p>今回は最新のVue.jsのAPI <a href=\"https://vue-composition-api-rfc.netlify.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Vue Composition API</a>を例に使ってみます。</p>\n<p>たとえばトップページ(index)に当てたい場合</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>section <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"section\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>hoge  prop<span class=\"token operator\">=</span><span class=\"token string\">\"hogeeee!!\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>section<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    createComponent<span class=\"token punctuation\">,</span>\n    reactive<span class=\"token punctuation\">,</span>\n    onMounted<span class=\"token punctuation\">,</span>\n    computed<span class=\"token punctuation\">,</span>\n    ref\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@vue/composition-api'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> FileList <span class=\"token keyword\">from</span> <span class=\"token string\">'@/components/hoge.vue'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">createComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">layout</span><span class=\"token operator\">:</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// createComponentでlayoutを呼ぶ</span></span>    <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      hoge\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>とすると適用できます。</p>\n<p><img src=\"https://i.imgur.com/IAstOlF.png\" alt=\"img\"></p>\n<p>簡単ですね!!</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>Nuxt.jsに入門したばかりですが、こんなに簡単にかっこいいページが作れるとは！という感動です。</p>\n<p>Thanks! <a href=\"https://github.com/lindelof\" target=\"_blank\" rel=\"noopener noreferrer\">lindelof</a>-san</p>\n<h2 id=\"追記particleのcanvasのstyleを変えたい\" style=\"position:relative;\"><a href=\"#%E8%BF%BD%E8%A8%98particle%E3%81%AEcanvas%E3%81%AEstyle%E3%82%92%E5%A4%89%E3%81%88%E3%81%9F%E3%81%84\" aria-label=\"追記particleのcanvasのstyleを変えたい permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>追記(particleのcanvasのstyleを変えたい！)</h2>\n<p><a href=\"https://github.com/lindelof/particles-bg-vue\" target=\"_blank\" rel=\"noopener noreferrer\">indelof/particles-bg-vue</a>をしばらく使い続け、ちょっとした悩みがでてきました。</p>\n<p><img src=\"https://i.imgur.com/FhOet7R.png\" alt=\"img\"></p>\n<p>ブラウザの拡大率を上げた場合、particleのcanvasがそれに追従せず、きれいなparticleのcanvasからはみ出る・・・。</p>\n<p>ということで、なにかできないか確認したところ[particles-bg-vueのREADME: Parameter Description](<a href=\"https://github.com/lindelof/particles-bg-vue/blob/master/README.md#parameter-description\" target=\"_blank\" rel=\"noopener noreferrer\">particles-bg-vueのREADME: Parameter Description</a>)に書いてありました。</p>\n<p>とはいったものの、ちょっと記載がわかりにくいのでここに追記します。</p>\n<h3 id=\"canvasobjectの作成\" style=\"position:relative;\"><a href=\"#canvasobject%E3%81%AE%E4%BD%9C%E6%88%90\" aria-label=\"canvasobjectの作成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>canvasObjectの作成</h3>\n<p>F12(開発者ツール)などで、particle部分のElementsを確認すると、canvasタグでparticleを表現していることがわかります。</p>\n<p><img src=\"https://i.imgur.com/hw6bydF.png\" alt=\"img\"></p>\n<p>こちらのcanvasのstyleはcanvasObjectというObjectをparticle-bgのpropsに渡すと変更が実現できます。</p>\n<p>さらに、Vue.jsの新しいAPI、CompositionAPIでは、templateに渡す変数はreactive、reactiveじゃないに関わらずsetup()のreturnで渡す必要があります。</p>\n<p>なので</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"app\"</span><span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">&lt;</span>particles<span class=\"token operator\">-</span>bg type<span class=\"token operator\">=</span><span class=\"token string\">\"circle\"</span> <span class=\"token operator\">:</span>bg<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> <span class=\"token operator\">:</span>canvas<span class=\"token operator\">=</span><span class=\"token string\">\"canvasObject\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token comment\">//propsでcanvasObject渡す</span></span>    <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"nav\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>nuxt<span class=\"token operator\">-</span>link to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nuxt<span class=\"token operator\">-</span>link<span class=\"token operator\">></span> <span class=\"token operator\">|</span>\n      <span class=\"token operator\">&lt;</span>nuxt<span class=\"token operator\">-</span>link to<span class=\"token operator\">=</span><span class=\"token string\">\"/sample\"</span><span class=\"token operator\">></span>sample<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nuxt<span class=\"token operator\">-</span>link<span class=\"token operator\">></span> <span class=\"token operator\">|</span>\n      <span class=\"token operator\">&lt;</span>nuxt<span class=\"token operator\">-</span>link to<span class=\"token operator\">=</span><span class=\"token string\">\"/list\"</span><span class=\"token operator\">></span>list<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nuxt<span class=\"token operator\">-</span>link<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>nuxt<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">'ts'</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    createComponent<span class=\"token punctuation\">,</span>\n    reactive<span class=\"token punctuation\">,</span>\n    onBeforeMount<span class=\"token punctuation\">,</span>\n    onUpdated<span class=\"token punctuation\">,</span>\n    onMounted<span class=\"token punctuation\">,</span>\n    computed<span class=\"token punctuation\">,</span>\n    watch<span class=\"token punctuation\">,</span>\n    ref\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@vue/composition-api'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> canvasObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\">//canvasObject宣言</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token string\">'120%'</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span>  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">createComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token function\">setup</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">        canvasObject  <span class=\"token comment\">//templateで使うのでreturn</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>とやってみると</p>\n<p><img src=\"https://i.imgur.com/ct8mkR2.png\" alt=\"img\"></p>\n<p>正しくstyleが変更され、</p>\n<p><img src=\"https://i.imgur.com/0rTlW56.png\" alt=\"img\"></p>\n<p>期待通りのcanvasができました！</p>","fields":{"slug":"2019/12/02/particles-bg-vue"},"frontmatter":{"tags":["JavaScript","TypeScript","Nuxt.js","Vue.js","particles-bg-vue","particle","Proton","particles.js"],"templateKey":"blog-post","slug":"2019/12/02/particles-bg-vue","id":null,"title":"Nuxt.jsでparticles-bg-vueを使う","url":"2019/12/02/particles-bg-vue","date":"2019-12-01T23:44:00.665Z","description":"Nuxt.jsでparticles-bg-vueを使う記事です。","headerImage":"https://i.imgur.com/IAstOlF.png","year":"2019","month":"12"}}},{"node":{"id":"55d2b742-4668-5119-8d89-639240aac11f","html":"<p>かわいい!!!、いやかわいくない。</p>\n<p>みなさん、Hadoopライフをお過ごしですか？</p>\n<p>本業のなかでHadoop ecosystemでびっくりするような仕様を見つけて<strong>アバアバ</strong>してしまった帰り道にふと</p>\n<p><img src=\"https://i.imgur.com/l7yJoBP.jpg\" alt=\"img\"></p>\n<p>帰り道のビルのショーウィンドウに<strong>かわいいゾウ</strong>がいるではありませんか!!</p>\n<p><strong>かわいい!!</strong></p>\n<p>どうやら<a href=\"https://www.nichibil.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ニチビル</strong></a>という会社さんのマスコットらしいですね。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#%E3%81%8D%E3%81%84%E3%82%8D%E3%81%84%E3%82%BE%E3%82%A6%E3%81%86%E3%81%A3%E9%A0%AD%E3%81%8C\">きいろいゾウ…　うっ頭が!!</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%81%AA%E3%81%9Chadoop%E3%81%AE%E3%83%9E%E3%82%B9%E3%82%B3%E3%83%83%E3%83%88%E3%82%AD%E3%83%A3%E3%83%A9%E3%81%AF%E3%81%8B%E3%82%8F%E3%81%84%E3%81%8F%E3%81%AA%E3%81%84%E3%81%AE%E3%81%8B\">なぜHadoopのマスコットキャラはかわいくないのか？</a></p>\n<ul>\n<li><a href=\"#hadoop%E3%81%AE%E5%90%8D%E5%89%8D%E3%81%AE%E7%94%B1%E6%9D%A5\">Hadoopの名前の由来</a></li>\n<li><a href=\"#hadoop%E3%81%9D%E3%82%8C%E3%81%AF%E5%BD%BC%E3%81%AE%E6%84%9B%E3%81%99%E3%82%8B%E9%BB%84%E8%89%B2%E3%81%84%E3%82%BE%E3%82%A6%E3%81%AE%E3%81%AC%E3%81%84%E3%81%90%E3%82%8B%E3%81%BF\">Hadoop、それは彼の愛する黄色いゾウのぬいぐるみ</a></li>\n<li><a href=\"#hadoop-the-elephant%E3%81%AE%E9%81%8B%E5%91%BD\">Hadoop the elephantの運命</a></li>\n<li><a href=\"#hadoop%E3%81%AE%E4%BB%8A\">Hadoopの今</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E7%B5%90%E8%AB%96\">結論</a></p>\n</li>\n<li>\n<p><a href=\"#%E8%BF%BD%E8%A8%98\">追記</a></p>\n</li>\n</ul>\n</div>\n<h2 id=\"きいろいゾウうっ頭が\" style=\"position:relative;\"><a href=\"#%E3%81%8D%E3%81%84%E3%82%8D%E3%81%84%E3%82%BE%E3%82%A6%E3%81%86%E3%81%A3%E9%A0%AD%E3%81%8C\" aria-label=\"きいろいゾウうっ頭が permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>きいろいゾウ…　うっ頭が!!</h2>\n<p>この業界にある程度勤めていると目にする耳にすることのある<strong>Hadoop</strong>という単語。</p>\n<p>私も例外ではなく本業でみない日はありません。</p>\n<p>正確に言えば素のHadoopを使ったのは入社2年目、SplunkというBIツールの裏側をHadoopにするという（<strong>Hunk</strong>）マニアック案件でHadoop初体験、その後はAWS関係で<strong>EMR</strong>と<strong>Athena</strong>というサービスでエコシステムに触りました。(EMRはSpark, Athenaは裏側PrestoでどちらもHadoopエコシステム)</p>\n<p>ビッグデータ時代にはもはや欠かすことのできなくなったHadoopですが、<strong>マスコットキャラ</strong>をご存じでしょうか？</p>\n<p><img src=\"https://i.imgur.com/0mCh1HQ.png\" alt=\"img\"></p>\n<p><strong>かわいくない!!!！</strong></p>\n<p>きいろいゾウ…、<strong>かわいくない!!!</strong></p>\n<p>ニチビルのきいろいゾウ、<strong>かわいい!!!</strong></p>\n<h2 id=\"なぜhadoopのマスコットキャラはかわいくないのか\" style=\"position:relative;\"><a href=\"#%E3%81%AA%E3%81%9Chadoop%E3%81%AE%E3%83%9E%E3%82%B9%E3%82%B3%E3%83%83%E3%83%88%E3%82%AD%E3%83%A3%E3%83%A9%E3%81%AF%E3%81%8B%E3%82%8F%E3%81%84%E3%81%8F%E3%81%AA%E3%81%84%E3%81%AE%E3%81%8B\" aria-label=\"なぜhadoopのマスコットキャラはかわいくないのか permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>なぜHadoopのマスコットキャラはかわいくないのか？</h2>\n<p>以前社内でAWSの先生的なことをしてたことがあったのですが、そのとき気になって実はこのかわいくないゾウについて調べてました。</p>\n<p>ちなみにその内容含め、分析に使えるサービスを丁寧にパワポにしたのですが、元締めの人が抜けて研修が崩壊したので研修はお蔵入りになった経緯があり、腹が立ったのでパワポだけ社外秘抜いてアップしてます。</p>\n<iframe loading=\"lazy\" src=\"https://www.slideshare.net/slideshow/embed_code/key/NHXLYrZWDscfa\" width=\"427\" height=\"356\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe> <div style=\"margin-bottom:5px\"> <strong> <a href=\"https://www.slideshare.net/tubone24/aws-158992259\" title=\"AWSで作る分析基盤\" target=\"_blank\">AWSで作る分析基盤</a> </strong> from <strong><a href=\"https://www.slideshare.net/tubone24\" target=\"_blank\">Yu Otsubo</a></strong> </div>\n\n\n<h3 id=\"hadoopの名前の由来\" style=\"position:relative;\"><a href=\"#hadoop%E3%81%AE%E5%90%8D%E5%89%8D%E3%81%AE%E7%94%B1%E6%9D%A5\" aria-label=\"hadoopの名前の由来 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hadoopの名前の由来</h3>\n<p>Hadoopの名前の由来について調べていくと<strong>CNBC</strong>の記事が見つけられました。</p>\n<p>この記事はHadoopの産みの親<strong>Doug Cutting</strong>さんのインタビュー動画が放送されてから書かれた特集記事です。</p>\n<p>(CNBCとはアメリカのビジネスニュース専門チャンネルです)</p>\n<p><a href=\"https://www.cnbc.com/id/100769719\" target=\"_blank\" rel=\"noopener noreferrer\">Hadoop: Toddler Talk Provides Big Data Name</a></p>\n<p>ひとつひとつ確認していきます。</p>\n<p>以降の記事は画像も含め<a href=\"https://www.cnbc.com/id/100769719\" target=\"_blank\" rel=\"noopener noreferrer\">Hadoop: Toddler Talk Provides Big Data Name</a>から引用しています。</p>\n<h3 id=\"hadoopそれは彼の愛する黄色いゾウのぬいぐるみ\" style=\"position:relative;\"><a href=\"#hadoop%E3%81%9D%E3%82%8C%E3%81%AF%E5%BD%BC%E3%81%AE%E6%84%9B%E3%81%99%E3%82%8B%E9%BB%84%E8%89%B2%E3%81%84%E3%82%BE%E3%82%A6%E3%81%AE%E3%81%AC%E3%81%84%E3%81%90%E3%82%8B%E3%81%BF\" aria-label=\"hadoopそれは彼の愛する黄色いゾウのぬいぐるみ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hadoop、それは彼の愛する黄色いゾウのぬいぐるみ</h3>\n<p>以下原文です。</p>\n<blockquote>\n<p>The name, on the other hand, is a homey story going back 10 years—into the realm of a toddler's experimentation with old-fashioned human language.</p>\n</blockquote>\n<blockquote>\n<p>Cutting's son, then 2, was just beginning to talk and called his beloved stuffed yellow elephant \"Hadoop\" (with the stress on the first syllable).</p>\n</blockquote>\n<blockquote>\n<p>\"Being a guy in the software business, we're always looking for names,\" Cutting said. \"I'd been saving it for the right time.\"</p>\n</blockquote>\n<p>なるほど。Cuttingさんの息子さんが当時2歳だったころに<strong>可愛がっていたゾウのぬいぐるみ</strong>の名前だったんですね。</p>\n<p>知らなかったのはハ<strong>ドゥ</strong>ープではなく<strong>ハ</strong>ドゥープだったんですね。</p>\n<p>子どもの考えることって型にハマらなくていいですよね。</p>\n<p><del>かくなる私も小さい頃可愛がっていたオコジョのぬいぐるみにムームーと名前をつけていたと聞きます。</del></p>\n<p><img src=\"https://fm.cnbc.com/applications/cnbc.com/resources/img/editorial/2013/05/23/100762110-hadoop.1910x1000.jpg?v=1369757080\" alt=\"img\"></p>\n<h3 id=\"hadoop-the-elephantの運命\" style=\"position:relative;\"><a href=\"#hadoop-the-elephant%E3%81%AE%E9%81%8B%E5%91%BD\" aria-label=\"hadoop the elephantの運命 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hadoop the elephantの運命</h3>\n<p>さらに記事を読み進めていくと衝撃の事実が判明します。</p>\n<blockquote>\n<p>As work began and Cutting considered finally using the name he had been guarding, he noticed the toy was being crammed inside a toilet paper roll and shot across the back yard.</p>\n</blockquote>\n<blockquote>\n<p>That's when Hadoop was retired from his son's collection of playthings.</p>\n</blockquote>\n<p><strong>トイレットペーパーロール</strong>に詰め込まれて・・・・</p>\n<p>裏庭に放って・・</p>\n<p>悲しすぎる。</p>\n<h3 id=\"hadoopの今\" style=\"position:relative;\"><a href=\"#hadoop%E3%81%AE%E4%BB%8A\" aria-label=\"hadoopの今 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hadoopの今</h3>\n<p>さらに原文を読んでいくと、</p>\n<blockquote>\n<p>Today, Hadoop the toy lives not on a shelf or in a case but in Cutting's sock drawer—a rather ignominious home for a company's namesake.</p>\n</blockquote>\n<blockquote>\n<p>Cutting lets it out occasionally, bringing it to conferences or appearances, where fans of the software pose with the cuddly yellow elephant.</p>\n</blockquote>\n<p>今ではソックスケース引き出しに住みながら、たまに出かけて会社を代表する愛されるキャラクターとして活躍されているんですね！</p>\n<p>よかったー。</p>\n<p><img src=\"https://fm.cnbc.com/applications/cnbc.com/resources/img/editorial/2013/05/23/100762543-Hadoop-at-Cloudera-ITPT2-Dinner.1910x1000.jpg?v=1418397661\" alt=\"img\"></p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>Hadoopのロゴイラストのゾウがあまりにもかわいくないのでどうしたものかと思っていましたが、本物のHadoopのぬいぐるみはニチビルのゾウに負けじとかわいかったですね！</p>\n<p>なぜ、ロゴだけかわいくないかは結局わかりませんでした・・</p>\n<h2 id=\"追記\" style=\"position:relative;\"><a href=\"#%E8%BF%BD%E8%A8%98\" aria-label=\"追記 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>追記</h2>\n<p>あまりにもニチビルのゾウさんが可愛かったので翌日朝に再度撮ってみました。</p>\n<p><img src=\"https://i.imgur.com/bv4uVSx.jpg\" alt=\"img\"></p>\n<p>めっちゃいっぱいいる!!</p>\n<p><img src=\"https://i.imgur.com/xYQ8GfZ.jpg\" alt=\"img\"></p>\n<p>みんな椅子に座ってますねーー!!</p>\n<p><img src=\"https://i.imgur.com/YIWW0XM.jpg\" alt=\"img\"></p>\n<p>「<a href=\"https://www.nichibil.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ニチビル</strong></a>ならなんでもできるゾウ！」</p>\n<p>🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘🐘</p>","fields":{"slug":"2019/11/28/hadoop-elephant"},"frontmatter":{"tags":["Hadoop","ぼやき","ゾウ"],"templateKey":"blog-post","slug":"2019/11/28/hadoop-elephant","id":null,"title":"Hadoopゾウさんについて本気出して考えてみた","url":"2019/11/28/hadoop-elephant","date":"2019-11-28T11:35:20.044Z","description":"Hadoopのマスコットキャラのあの黄色いゾウ（かわいくない）について本気出して考えてみた記事です。","headerImage":"https://i.imgur.com/0mCh1HQ.png","year":"2019","month":"11"}}},{"node":{"id":"cc95c6f2-51a1-5df6-8175-66b241fda738","html":"<p>やらねば。（風立ちぬ）</p>\n<p>案件で<strong>Go</strong>を使った開発にシフトしつつあるので必死こいて勉強してるわけですが、<strong>AWS Lambda</strong>を<strong>Go</strong>で実装したことがなかったのでちょっと触ってみました、というお話。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#aws-lambda%E3%81%8Cgo%E3%81%A7%E5%8B%95%E3%81%8F%E3%81%93%E3%81%A8%E3%82%92%E7%9F%A5%E3%81%A3%E3%81%A6%E3%81%BE%E3%81%99%E3%81%8B\">AWS LambdaがGoで動くことを知ってますか？</a></p>\n</li>\n<li>\n<p><a href=\"#%E4%BB%8A%E5%9B%9E%E3%81%AE%E9%96%8B%E7%99%BA%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%97\">今回の開発スコープ</a></p>\n<ul>\n<li><a href=\"#%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8\">やること</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%81%A8%E3%82%8A%E3%81%82%E3%81%88%E3%81%9A%E3%82%B3%E3%83%BC%E3%83%89\">とりあえずコード</a></p>\n</li>\n<li>\n<p><a href=\"#graphql%E3%82%92go%E3%81%A7%E5%8F%A9%E3%81%8F\">GraphQLをGoで叩く</a></p>\n</li>\n<li>\n<p><a href=\"#lambda%E3%81%A7go%E3%82%92%E4%BD%BF%E3%81%86%E3%81%A8%E3%81%8D\">LambdaでGoを使うとき</a></p>\n</li>\n<li>\n<p><a href=\"#aws-lambda%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%99%E3%82%8B\">AWS Lambdaにデプロイする</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%AE%9F%E8%A1%8C\">実行</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91\">おまけ</a></p>\n</li>\n<li>\n<p><a href=\"#%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%A6%E3%81%AE%E6%84%9F%E6%83%B3\">使ってみての感想</a></p>\n</li>\n</ul>\n</div>\n<h2 id=\"aws-lambdaがgoで動くことを知ってますか\" style=\"position:relative;\"><a href=\"#aws-lambda%E3%81%8Cgo%E3%81%A7%E5%8B%95%E3%81%8F%E3%81%93%E3%81%A8%E3%82%92%E7%9F%A5%E3%81%A3%E3%81%A6%E3%81%BE%E3%81%99%E3%81%8B\" aria-label=\"aws lambdaがgoで動くことを知ってますか permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS LambdaがGoで動くことを知ってますか？</h2>\n<p><img src=\"https://i.imgur.com/h1EK5QS.png\" alt=\"img\"></p>\n<p>知っている人も多いと思いますが、2017年のre:Invent 2017(AWSのカンファレンスイベント)でLambdaに関するアップデートのなかでGoで動くようになったよ～というのがありました。<a href=\"https://www.publickey1.jp/blog/17/aws_lambdanetgoaws_reinvent_2017.html\" target=\"_blank\" rel=\"noopener noreferrer\">［速報］AWS Lambdaが機能強化。.NETとGo言語をサポート、サーバレスアプリケーションのリポジトリも登場。AWS re:Invent 2017\n</a></p>\n<p><img src=\"https://www.publickey1.jp/2017/lambda01.gif\" alt=\"img\"></p>\n<p>Lambda自体は、裏側の基盤に<a href=\"https://aws.amazon.com/jp/blogs/news/firecracker-lightweight-virtualization-for-serverless-computing/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Firecracker</a>を導入したことがきっかけで、集約化と安全性がめちゃんこあがったので、タイムアウトが長くなったり、カスタムランタイムに対応したりと一気に進化したイメージがありましたが、いまだにPythonか、Node.jsで書くかしかして無かったです。（怠け）</p>\n<p><del>どこかでFirecrackerをいじりたいですね。</del></p>\n<p>仕事上使う機会に恵まれたので今回Go Lambdaを初めて触ることにしました。</p>\n<h2 id=\"今回の開発スコープ\" style=\"position:relative;\"><a href=\"#%E4%BB%8A%E5%9B%9E%E3%81%AE%E9%96%8B%E7%99%BA%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%97\" aria-label=\"今回の開発スコープ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>今回の開発スコープ</h2>\n<p>今回はお勉強というか、感触をつかむためにやるだけなのでちゃんとしたサービスは作りません。</p>\n<p>別件で**GitHub API（GraphQL）**を触る必要もあったのでまとめてやってしまいます。</p>\n<h3 id=\"やること\" style=\"position:relative;\"><a href=\"#%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8\" aria-label=\"やること permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>やること</h3>\n<ul>\n<li>\n<p>main.goのみ</p>\n<ul>\n<li>RepositoryとかModelとかUsecaseとかそういうのは作らないよ</li>\n</ul>\n</li>\n<li>\n<p>GitHub APIv4 GraphQLを使うよ</p>\n<ul>\n<li>とりあえず自分の公開されてるレポジトリの使用言語を一覧取るよ</li>\n</ul>\n</li>\n<li>\n<p>手でビルドし、手でデプロイするよ</p>\n</li>\n</ul>\n<h2 id=\"とりあえずコード\" style=\"position:relative;\"><a href=\"#%E3%81%A8%E3%82%8A%E3%81%82%E3%81%88%E3%81%9A%E3%82%B3%E3%83%BC%E3%83%89\" aria-label=\"とりあえずコード permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>とりあえずコード</h2>\n<p>これが作ったショボコードです。追って解説します。</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"context\"</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"github.com/shurcooL/githubv4\"</span>\n\t<span class=\"token string\">\"golang.org/x/oauth2\"</span>\n\t<span class=\"token string\">\"github.com/deckarep/golang-set\"</span>\n\t<span class=\"token string\">\"github.com/aws/aws-lambda-go/lambda\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">type</span> Language <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tName  <span class=\"token builtin\">string</span>\n\tColor <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> Repository <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tName <span class=\"token builtin\">string</span>\n\tLanguages <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\t\tNodes <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\t\t\tLanguage <span class=\"token string\">`graphql:\"... on Language\"`</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token string\">`graphql:\"languages(first: 100)\"`</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> query <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tSearch <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\t\tNodes <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\t\t\tRepository <span class=\"token string\">`graphql:\"... on Repository\"`</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token string\">`graphql:\"search(first: 100, query: $q, type: $searchType)\"`</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">func</span> getLangList <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>mapset<span class=\"token punctuation\">.</span>Set<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsrc <span class=\"token operator\">:=</span> oauth2<span class=\"token punctuation\">.</span><span class=\"token function\">StaticTokenSource</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token operator\">&amp;</span>oauth2<span class=\"token punctuation\">.</span>Token<span class=\"token punctuation\">{</span>AccessToken<span class=\"token punctuation\">:</span> <span class=\"token string\">\"7xxxxxxxxxxxxxxxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">)</span>\n\thttpClient <span class=\"token operator\">:=</span> oauth2<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">)</span>\n\n\tclient <span class=\"token operator\">:=</span> githubv4<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span>httpClient<span class=\"token punctuation\">)</span>\n\n\tlanglist <span class=\"token operator\">:=</span> mapset<span class=\"token punctuation\">.</span><span class=\"token function\">NewSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\tvariables <span class=\"token operator\">:=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">\"q\"</span><span class=\"token punctuation\">:</span> githubv4<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user:tubone24\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//検索するuser名</span>\n\t\t<span class=\"token string\">\"searchType\"</span><span class=\"token punctuation\">:</span>  githubv4<span class=\"token punctuation\">.</span>SearchTypeRepository<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\terr <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>query<span class=\"token punctuation\">,</span> variables<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Handle error.</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> repo <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> query<span class=\"token punctuation\">.</span>Search<span class=\"token punctuation\">.</span>Nodes <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"---------\"</span><span class=\"token punctuation\">)</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>repo<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> lang <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> repo<span class=\"token punctuation\">.</span>Languages<span class=\"token punctuation\">.</span>Nodes <span class=\"token punctuation\">{</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>lang<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n\t\t\tlanglist<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>lang<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> langlist\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> LambdaHandler <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tresult <span class=\"token operator\">:=</span> <span class=\"token function\">getLangList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprint</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tlambda<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>LambdaHandler<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"graphqlをgoで叩く\" style=\"position:relative;\"><a href=\"#graphql%E3%82%92go%E3%81%A7%E5%8F%A9%E3%81%8F\" aria-label=\"graphqlをgoで叩く permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQLをGoで叩く</h2>\n<p>Goはまぎれもなくサーバーサイドな言語なのでどちらかというと関心事がGraphQLのサーバーサイド実装でBFFたくさん作るのめんどくさいからまとめてGraphQLで返したい！という感じのモチベーションの記事が多めではありますが、ちゃんと<strong>GraphQLクライアント</strong>みつけました。</p>\n<p><a href=\"shurcooL/graphql\">shurcooL/graphql</a></p>\n<p>さらに、<strong>GitHubAPIv4専用のクライアント</strong>も見つけましたのでこっちを使うことにします。</p>\n<p><a href=\"https://github.com/shurcooL/githubv4\" target=\"_blank\" rel=\"noopener noreferrer\">shurcooL/githubv4</a></p>\n<p>話は逸れますがGitHubAPIv4はGitHubの<strong>Personal access tokens</strong>\nで<strong>Access Token</strong>を発行する必要があります。</p>\n<p><a href=\"https://github.com/settings/tokens/new\" target=\"_blank\" rel=\"noopener noreferrer\">New personal access token</a>から発行できます。発行しておきましょう。shurcooL/githubv4でも使います。</p>\n<p><img src=\"https://i.imgur.com/k926T60.png\" alt=\"img\"></p>\n<p>shurcooL/githubv4自体の使い方はそこまで難しくなく、HttpClientやAuthをすませた後、<strong>GraphQLのクエリ</strong>を<strong>Goの構造体</strong>として定義して投げつければよいです。</p>\n<p>このようなGraphQLなら・・</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  search(query<span class=\"token operator\">:</span> <span class=\"token string\">\"user:tubone24\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> REPOSITORY<span class=\"token punctuation\">,</span> first<span class=\"token operator\">:</span> <span class=\"token number\">100</span>) <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        ... on Repository <span class=\"token punctuation\">{</span>\n          name\n          languages(first<span class=\"token operator\">:</span> <span class=\"token number\">100</span>) <span class=\"token punctuation\">{</span>\n            edges <span class=\"token punctuation\">{</span>\n              node <span class=\"token punctuation\">{</span>\n                name\n                color\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>下記のようにすれば取得できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">//main.go</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"context\"</span>\n\t<span class=\"token string\">\"fmt\"</span>\n        <span class=\"token string\">\"golang.org/x/oauth2\"</span>\n\t<span class=\"token string\">\"github.com/shurcooL/githubv4\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 構造体でGraphQL定義</span>\n\n<span class=\"token keyword\">type</span> Language <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tName  <span class=\"token builtin\">string</span>\n\tColor <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> Repository <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tName <span class=\"token builtin\">string</span>\n\tLanguages <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\t\tNodes <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\t\t\tLanguage <span class=\"token string\">`graphql:\"... on Language\"`</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token string\">`graphql:\"languages(first: 100)\"`</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> query <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tSearch <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\t\tNodes <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\t\t\tRepository <span class=\"token string\">`graphql:\"... on Repository\"`</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token string\">`graphql:\"search(first: 100, query: $q, type: $searchType)\"`</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">func</span> hoge <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tsrc <span class=\"token operator\">:=</span> oauth2<span class=\"token punctuation\">.</span><span class=\"token function\">StaticTokenSource</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token operator\">&amp;</span>oauth2<span class=\"token punctuation\">.</span>Token<span class=\"token punctuation\">{</span>AccessToken<span class=\"token punctuation\">:</span> <span class=\"token string\">\"7xxxxxxxxxxxxxxxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">)</span> <span class=\"token comment\">//AccessTokenを設定</span>\n\n\thttpClient <span class=\"token operator\">:=</span> oauth2<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">)</span> <span class=\"token comment\">//AccessTokenをhttpClientに設定</span>\n\n\tclient <span class=\"token operator\">:=</span> githubv4<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span>httpClient<span class=\"token punctuation\">)</span> <span class=\"token comment\">//先ほど作ったhttpClient使ってclientを作成</span>\n\n\tvariables <span class=\"token operator\">:=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">\"q\"</span><span class=\"token punctuation\">:</span> githubv4<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user:tubone24\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//検索するuser名</span>\n\t\t<span class=\"token string\">\"searchType\"</span><span class=\"token punctuation\">:</span>  githubv4<span class=\"token punctuation\">.</span>SearchTypeRepository<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\terr <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>query<span class=\"token punctuation\">,</span> variables<span class=\"token punctuation\">)</span> <span class=\"token comment\">//client.Queryで実行。エラーのみが戻りで実行結果は咲くほど定義した構造体に格納</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Handle error.</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> repo <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> query<span class=\"token punctuation\">.</span>Search<span class=\"token punctuation\">.</span>Nodes <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"---------\"</span><span class=\"token punctuation\">)</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>repo<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> lang <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> repo<span class=\"token punctuation\">.</span>Languages<span class=\"token punctuation\">.</span>Nodes <span class=\"token punctuation\">{</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>lang<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n                        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>lang<span class=\"token punctuation\">.</span>Color<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><strong>あらまぁ、簡単！<strong>と思ったものの、上記のように</strong>Nodes</strong>は取得できたのですが、<strong>Edgesに定義された値</strong>がどうやってもとれない。。</p>\n<p>例えば・・</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"json\"><pre style=\"counter-reset: linenumber 0\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  search(query<span class=\"token operator\">:</span> <span class=\"token string\">\"user:tubone24\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> REPOSITORY<span class=\"token punctuation\">,</span> first<span class=\"token operator\">:</span> <span class=\"token number\">100</span>) <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        ... on Repository <span class=\"token punctuation\">{</span>\n          name\n          languages(first<span class=\"token operator\">:</span> <span class=\"token number\">100</span>) <span class=\"token punctuation\">{</span>\n            edges <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">              size</span>              node <span class=\"token punctuation\">{</span>\n                name\n                color\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>のようにedgesに項目がありnodeを取りたい場合</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"go\"><pre style=\"counter-reset: linenumber 0\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">type</span> Language <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tName  <span class=\"token builtin\">string</span>\n\tColor <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> Repository <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tName <span class=\"token builtin\">string</span>\n\tLanguages <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">            Edges <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">\t\tNode <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">\t\t\tLanguage <span class=\"token string\">`graphql:\"... on Language\"`</span></span><span class=\"gatsby-highlight-code-line\">\t\t<span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">            <span class=\"token punctuation\">}</span></span>\t<span class=\"token punctuation\">}</span> <span class=\"token string\">`graphql:\"languages(first: 100)\"`</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> query <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tSearch <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\t\tNodes <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\t\t\tRepository <span class=\"token string\">`graphql:\"... on Repository\"`</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token string\">`graphql:\"search(first: 100, query: $q, type: $searchType)\"`</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>とやってもエラーになってしまう・・。</p>\n<p><a href=\"https://github.com/shurcooL/githubv4/issues/30\" target=\"_blank\" rel=\"noopener noreferrer\">こちらのPR</a>の通りEdgesは構造体のスライスで宣言してね～というのも試したのですがうまくいかず。。</p>\n<p>使用言語のサイズが取りたいだけなんですよ…。</p>\n<p><a href=\"https://developer.github.com/v4/object/languageedge/\" target=\"_blank\" rel=\"noopener noreferrer\">取りたい項目</a></p>\n<p>今回は趣旨から反するのでいったん塩漬け。。</p>\n<h2 id=\"lambdaでgoを使うとき\" style=\"position:relative;\"><a href=\"#lambda%E3%81%A7go%E3%82%92%E4%BD%BF%E3%81%86%E3%81%A8%E3%81%8D\" aria-label=\"lambdaでgoを使うとき permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LambdaでGoを使うとき</h2>\n<p>main関数にはAWSが用意している <code class=\"language-text\">github.com/aws/aws-lambda-go/lambda</code> からロジックを\nInvokeさせないと問答無用でLambdaでエラーになってしまいます。</p>\n<p>そこで <code class=\"language-text\">github.com/aws/aws-lambda-go/lambda</code> の <code class=\"language-text\">lambda.Start</code> を使って動かします。</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"go\"><pre style=\"counter-reset: linenumber 0\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">func</span> LambdaHandler <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tresult <span class=\"token operator\">:=</span> <span class=\"token function\">hoge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//login</span>\n\t<span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprint</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">\tlambda<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>LambdaHandler<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span>\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"aws-lambdaにデプロイする\" style=\"position:relative;\"><a href=\"#aws-lambda%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%99%E3%82%8B\" aria-label=\"aws lambdaにデプロイする permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS Lambdaにデプロイする</h2>\n<p>GoをLambdaにデプロイするときは、<strong>実行ファイルにBuild</strong>したものを<strong>ZIPで固めて</strong>あげます。</p>\n<p>Lambda画面のCloud9から編集できないんですね・・・</p>\n<p>実行ファイル、ということはビルドするプラットフォーム(OSとか)に依存してしまうのでは？と思ったのですが、 ベストプラクティスとして <code class=\"language-text\">GOOS=linux</code> をgo build時につけることでLinux互換な実行ファイルになるみたいです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ GOOS=linux go build main.go</code></pre></div>\n<p>あとは実行ファイルをZIPで固めて、Lambda作ってアップロードして保存すれば終わりです。</p>\n<h2 id=\"実行\" style=\"position:relative;\"><a href=\"#%E5%AE%9F%E8%A1%8C\" aria-label=\"実行 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>実行</h2>\n<p>Lambdaのテスト実行をしてみます。</p>\n<p><img src=\"https://i.imgur.com/HBHjuZk.png\" alt=\"img\"></p>\n<p>無事、GitHubの私のレポジトリ群の言語一覧が取れました。</p>\n<p>printしているものはCloudwatchにも出てきていました。(goのlogを使ってもきちんとCWにログ出るそうです。)</p>\n<p><img src=\"https://i.imgur.com/DDLSLo4.png\" alt=\"img\"></p>\n<p>ひとまず完成っぽいです。</p>\n<h2 id=\"おまけ\" style=\"position:relative;\"><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91\" aria-label=\"おまけ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>おまけ</h2>\n<p>上記のコードでは、レポジトリ群に重複した言語があった場合は重複を避ける形で出力しています。</p>\n<p>PythonではSetという便利なものがあるのですが、Goではあるのでしょうか・・・。</p>\n<p>ありました。</p>\n<p><a href=\"https://github.com/deckarep/golang-set\" target=\"_blank\" rel=\"noopener noreferrer\">deckarep/golang-set</a></p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"go\"><pre style=\"counter-reset: linenumber 0\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"gatsby-highlight-code-line\">\t<span class=\"token string\">\"github.com/deckarep/golang-set\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 中略・・</span>\n\n<span class=\"token keyword\">func</span> main <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">\tlanglist <span class=\"token operator\">:=</span> mapset<span class=\"token punctuation\">.</span><span class=\"token function\">NewSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// setを作る</span></span>        <span class=\"token comment\">// 中略</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> repo <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> query<span class=\"token punctuation\">.</span>Search<span class=\"token punctuation\">.</span>Nodes <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"---------\"</span><span class=\"token punctuation\">)</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>repo<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> lang <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> repo<span class=\"token punctuation\">.</span>Languages<span class=\"token punctuation\">.</span>Nodes <span class=\"token punctuation\">{</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>lang<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">\t\t\tlanglist<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>lang<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span> <span class=\"token comment\">//setにAddする</span></span>\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> langlist <span class=\"token comment\">// set{hoge, fuga} 重複がないsetが返る</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>便利！</p>\n<p>こういう便利なもの、もっと作っていきたいですね。</p>\n<h2 id=\"使ってみての感想\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%A6%E3%81%AE%E6%84%9F%E6%83%B3\" aria-label=\"使ってみての感想 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使ってみての感想</h2>\n<p>GoでLambdaを組んでみての感想は</p>\n<ul>\n<li>Cloud9で直接Lambda編集したいなぁ…</li>\n<li>lambda.startにラッピングする必要があるのでローカルで確認しにくいなぁ\n<ul>\n<li>こちら解決する方法は次回考えます</li>\n</ul>\n</li>\n<li>果たして早くなったのか？\n<ul>\n<li>わからん。調べたい</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"2019/11/26/go-lambda"},"frontmatter":{"tags":["Go","Lambda","AWS","GraphQL","GitHub"],"templateKey":"blog-post","slug":"2019/11/26/go-lambda","id":null,"title":"GoでAWS Lambdaを動かして、GitHubAPIv4(GraphQL)を叩いてみた感想","url":"2019/11/26/go-lambda","date":"2019-11-26T11:31:35.438Z","description":"急遽Goで開発することになったので慌てて技術検証の巻","headerImage":"https://i.imgur.com/h1EK5QS.png","year":"2019","month":"11"}}},{"node":{"id":"d522992d-da9f-5b4b-b80c-b74d4d7c5310","html":"<p>ついに90日突破</p>\n<p>GitHubへのコントリビュートをすることをいわゆる草といいますが90日生やし続けてたので振り返りがてら感想を書きます。</p>\n<p><img src=\"https://i.imgur.com/am1DJ7O.png\" alt=\"img\"></p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#%E3%81%AA%E3%82%93%E3%81%A7%E3%82%84%E3%81%A3%E3%81%9F%E3%81%AE\">なんで？やったの？</a></p>\n</li>\n<li>\n<p><a href=\"#90%E6%97%A5%E9%96%93%E3%82%92%E6%8C%AF%E3%82%8A%E8%BF%94%E3%81%A3%E3%81%A6\">90日間を振り返って</a></p>\n<ul>\n<li><a href=\"#%E5%AF%9D%E4%B8%8D%E8%B6%B3%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\">寝不足について</a></li>\n<li><a href=\"#%E3%82%A2%E3%83%8B%E3%83%A1%E3%81%BF%E3%82%8B%E6%99%82%E9%96%93%E3%81%AA%E3%81%84\">アニメみる時間ない</a></li>\n<li><a href=\"#%E3%82%AE%E3%82%BF%E3%83%BC%E3%82%92%E5%BC%BE%E3%81%8F%E6%99%82%E9%96%93%E3%81%8C%E3%81%AA%E3%81%84\">ギターを弾く時間がない</a></li>\n<li><a href=\"#%E4%BD%93%E3%82%92%E5%8B%95%E3%81%8B%E3%81%95%E3%81%AA%E3%81%84%E3%81%AE%E3%81%A7%E3%83%87%E3%83%96%E3%81%AB%E3%81%AA%E3%82%8B\">体を動かさないのでデブになる</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E6%9E%9C%E3%81%9F%E3%81%97%E3%81%A6%E6%82%AA%E3%81%84%E3%81%93%E3%81%A8%E3%81%B0%E3%81%8B%E3%82%8A%E3%81%AA%E3%81%AE%E3%81%8B\">果たして悪いことばかりなのか？</a></p>\n<ul>\n<li><a href=\"#%E7%89%B9%E3%81%ABci%E3%81%AE%E5%AE%9F%E8%A3%85%E3%81%8C%E3%82%81%E3%81%A1%E3%82%83%E3%82%93%E3%81%93%E3%81%82%E3%81%8C%E3%81%A3%E3%81%9F\">特にCIの実装がめちゃんこあがった。</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%81%AA%E3%81%9C%E3%81%9D%E3%81%93%E3%81%BE%E3%81%A7%E3%81%A4%E3%82%89%E3%81%84%E6%80%9D%E3%81%84%E3%82%92%E3%81%97%E3%81%A6%E3%82%84%E3%81%A3%E3%81%A6%E3%82%8B%E3%81%AE%E3%81%8B\">なぜそこまでつらい思いをしてやってるのか</a></p>\n</li>\n</ul>\n</div>\n<h2 id=\"なんでやったの\" style=\"position:relative;\"><a href=\"#%E3%81%AA%E3%82%93%E3%81%A7%E3%82%84%E3%81%A3%E3%81%9F%E3%81%AE\" aria-label=\"なんでやったの permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>なんで？やったの？</h2>\n<p>理由は過去記事<a href=\"https://blog.tubone-project24.xyz/2019/09/27/github-weed\" target=\"_blank\" rel=\"noopener noreferrer\">GitHubに30日間草を生やし続けた感想</a>を御確認ください。</p>\n<h2 id=\"90日間を振り返って\" style=\"position:relative;\"><a href=\"#90%E6%97%A5%E9%96%93%E3%82%92%E6%8C%AF%E3%82%8A%E8%BF%94%E3%81%A3%E3%81%A6\" aria-label=\"90日間を振り返って permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>90日間を振り返って</h2>\n<ul>\n<li>モチベーションの維持が大変\n<ul>\n<li>とりあえず<strong>なんでもいいから</strong>プッシュが多くなった。</li>\n</ul>\n</li>\n<li>作りたいものがない\n<ul>\n<li>新しい言語を覚えるために<strong>移植案件</strong>を多くやった</li>\n<li>Goは<strong>echo</strong>, <strong>Nim</strong>, <strong>Julia</strong>にもチャレンジ</li>\n</ul>\n</li>\n<li>ブログ続かない\n<ul>\n<li><strong>ラーメン</strong>食ってアップ</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"寝不足について\" style=\"position:relative;\"><a href=\"#%E5%AF%9D%E4%B8%8D%E8%B6%B3%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\" aria-label=\"寝不足について permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>寝不足について</h3>\n<p>遅くまで仕事してから、帰ってコードを書くので、\n<strong>寝不足問題</strong>が深刻になりつつあります。</p>\n<p>過労で倒れるのではないかと思う日々ですが、なんとか続けてきました…。</p>\n<p>コードを書くスピードが遅いとか、生産性が低いとか、そんな意見が出そうですが頑張ってそれっぽくやります。</p>\n<p>(このブログを書いている時点でも眠い)</p>\n<h3 id=\"アニメみる時間ない\" style=\"position:relative;\"><a href=\"#%E3%82%A2%E3%83%8B%E3%83%A1%E3%81%BF%E3%82%8B%E6%99%82%E9%96%93%E3%81%AA%E3%81%84\" aria-label=\"アニメみる時間ない permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>アニメみる時間ない</h3>\n<p>これはガチです。</p>\n<p><strong>今期はなにも見てません。</strong></p>\n<p>まずいと思ってますが、コードを書かなければという思いが強いのでアニメをみる気力がわきません。</p>\n<p>デベロッパーとして実力を上げるのはいいのですが、こんな人生でいいのだろうかと思ってるこのごろです。</p>\n<h3 id=\"ギターを弾く時間がない\" style=\"position:relative;\"><a href=\"#%E3%82%AE%E3%82%BF%E3%83%BC%E3%82%92%E5%BC%BE%E3%81%8F%E6%99%82%E9%96%93%E3%81%8C%E3%81%AA%E3%81%84\" aria-label=\"ギターを弾く時間がない permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ギターを弾く時間がない</h3>\n<p>これも非常に問題です。</p>\n<p><del>本業はむしろ、ギターなのですから・・・。</del></p>\n<p>あまり関係ないのかもしれませんが、昔に比べ作曲のスピードは明らかに下がったように思います。</p>\n<p>プログラマ35歳定年説なんかより、<strong>DTMer30歳定年説</strong>のほうがあり得る気がする。（作曲って、出産ほどは行かないですが、産みの苦しみが半端ないです。体力が持たない。）</p>\n<h3 id=\"体を動かさないのでデブになる\" style=\"position:relative;\"><a href=\"#%E4%BD%93%E3%82%92%E5%8B%95%E3%81%8B%E3%81%95%E3%81%AA%E3%81%84%E3%81%AE%E3%81%A7%E3%83%87%E3%83%96%E3%81%AB%E3%81%AA%E3%82%8B\" aria-label=\"体を動かさないのでデブになる permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>体を動かさないのでデブになる</h3>\n<p>なりました。</p>\n<p>ストレスも相まって5キロくらい太りました。</p>\n<p>アイドルなら<strong>激太り</strong>と報道されるレベルです。</p>\n<h2 id=\"果たして悪いことばかりなのか\" style=\"position:relative;\"><a href=\"#%E6%9E%9C%E3%81%9F%E3%81%97%E3%81%A6%E6%82%AA%E3%81%84%E3%81%93%E3%81%A8%E3%81%B0%E3%81%8B%E3%82%8A%E3%81%AA%E3%81%AE%E3%81%8B\" aria-label=\"果たして悪いことばかりなのか permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>果たして悪いことばかりなのか？</h2>\n<p>そうとも言い切れないところもあります。</p>\n<p>90日間を振り返って思ったのは、たしかに<strong>実装のスピードが上がった</strong>ことです。</p>\n<p>と言ってもタイピングスピードは上がっていないので、ドキュメントからあたりをつけて実装して確認する、までのサイクルが早くなったのではないかと思います。</p>\n<p>まだまだ世間的には実装のスピードは遅いほうですが、成長を感じられる瞬間だったと思います。</p>\n<h3 id=\"特にciの実装がめちゃんこあがった\" style=\"position:relative;\"><a href=\"#%E7%89%B9%E3%81%ABci%E3%81%AE%E5%AE%9F%E8%A3%85%E3%81%8C%E3%82%81%E3%81%A1%E3%82%83%E3%82%93%E3%81%93%E3%81%82%E3%81%8C%E3%81%A3%E3%81%9F\" aria-label=\"特にciの実装がめちゃんこあがった permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>特にCIの実装がめちゃんこあがった。</h3>\n<p>これは、まぁ書けば書くだけわかってくるので当たり前といえば当たり前ですが、CIに乗っけるところまでプライベートでやることは大きな価値があるんだなぁと思いました。</p>\n<h2 id=\"なぜそこまでつらい思いをしてやってるのか\" style=\"position:relative;\"><a href=\"#%E3%81%AA%E3%81%9C%E3%81%9D%E3%81%93%E3%81%BE%E3%81%A7%E3%81%A4%E3%82%89%E3%81%84%E6%80%9D%E3%81%84%E3%82%92%E3%81%97%E3%81%A6%E3%82%84%E3%81%A3%E3%81%A6%E3%82%8B%E3%81%AE%E3%81%8B\" aria-label=\"なぜそこまでつらい思いをしてやってるのか permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>なぜそこまでつらい思いをしてやってるのか</h2>\n<p>結論からいうと焦りです。</p>\n<p>元からですが、自分の技術力が社内で通用しなくなりつつあるので、必死に追いつこうとしてるわけです。</p>\n<p>毎日、というのは言い過ぎですが、度々「こんなんじゃ甘いよ…」という声が聞こえてくる気がしてなりません。</p>\n<p>不安を消すにはひたすらに練習あるのみです。それでしかカバーできなかったりします。</p>\n<p>元プロ野球選手の里崎さんも言ってました。</p>\n<p>プロは練習、<strong>質も量もすごい</strong>と。</p>\n<iframe loading=\"lazy\" width=\"200\" height=\"113\" src=\"https://www.youtube.com/embed/guDWmY7wJOg?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"【一流になる方法】量より質じゃない！里崎智也が教える練習術とは！？\"></iframe>\n<p>とりあえず、4ヶ月目も頑張ります…</p>","fields":{"slug":"2019/11/25/github"},"frontmatter":{"tags":["ぼやき","GitHub","Write Code Every Day"],"templateKey":"blog-post","slug":"2019/11/25/github","id":null,"title":"GitHubに草を生やし続け90日が経ったので感想を書く","url":"2019/11/25/github","date":"2019-11-24T23:31:20.450Z","description":"GitHubに草を生やし続け、90日を越えたのでここまでの感想と今後のお話。","headerImage":"https://i.imgur.com/am1DJ7O.png","year":"2019","month":"11"}}},{"node":{"id":"f9aea728-3f10-521c-b035-89e0a41d2fd9","html":"<p>うまい！もう一杯！</p>\n<p>最近、あっさりラーメンにハマっております。</p>\n<p>前回（リンク）は纏というラーメン屋でしたが、今回は<a href=\"https://www.google.com/amp/s/s.tabelog.com/tokyo/A1308/A130802/13212916/top_amp/\" target=\"_blank\" rel=\"noopener noreferrer\">利尻昆布ラーメン くろおび</a>というラーメン屋をご紹介します。</p>\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3241.376486049529!2d139.749979114211!3d35.66773073832172!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x60188bc75e6295dd%3A0xa3f66882794d0de7!2z5Yip5bC75piG5biD44Op44O844Oh44OzIOOBj-OCjeOBiuOBsw!5e0!3m2!1sja!2sjp!4v1574341768475!5m2!1sja!2sjp\" width=\"800\" height=\"600\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\"></iframe>\n<h2 id=\"くろおびラーメン塩\" style=\"position:relative;\"><a href=\"#%E3%81%8F%E3%82%8D%E3%81%8A%E3%81%B3%E3%83%A9%E3%83%BC%E3%83%A1%E3%83%B3%E5%A1%A9\" aria-label=\"くろおびラーメン塩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>くろおびラーメン塩</h2>\n<p><img src=\"https://i.imgur.com/TsiKWJM.jpg\" alt=\"img\"></p>\n<p>うっ！うまい～!!</p>\n<p>スープを啜ったときに優しく甘みのある豊かな出汁な感じが伝わってきて思わず頷く。</p>\n<p>これが昆布か～</p>\n<p>チャーシュー、たまごのクオリティーも高い！</p>\n<p>完飲してしまいました。</p>\n<h2 id=\"くろおびラーメン醤油\" style=\"position:relative;\"><a href=\"#%E3%81%8F%E3%82%8D%E3%81%8A%E3%81%B3%E3%83%A9%E3%83%BC%E3%83%A1%E3%83%B3%E9%86%A4%E6%B2%B9\" aria-label=\"くろおびラーメン醤油 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>くろおびラーメン醤油</h2>\n<p><img src=\"https://i.imgur.com/7agAEdF.jpg\" alt=\"img\"></p>\n<p>続いて醤油。</p>\n<p>塩ほどの感動はないものの、高いクオリティなのは間違いなし。</p>\n<p>醤油になると、若干昆布っぽさが薄れるので、やっぱり僕は塩ですかね。</p>\n<h3 id=\"餃子\" style=\"position:relative;\"><a href=\"#%E9%A4%83%E5%AD%90\" aria-label=\"餃子 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>餃子</h3>\n<p>思わず頼んでしまいました。</p>\n<p>ラーメンとは対照的でパンチの効いた味わい。</p>\n<p>ビールにぴったりな一品でした。</p>\n<h2 id=\"ラーメン塩\" style=\"position:relative;\"><a href=\"#%E3%83%A9%E3%83%BC%E3%83%A1%E3%83%B3%E5%A1%A9\" aria-label=\"ラーメン塩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ラーメン塩</h2>\n<p><img src=\"https://i.imgur.com/TA3Ln56.jpg\" alt=\"img\"></p>\n<p>くろおびは1000円超えるなぁ・・と思ったらこちら。</p>\n<p>くおおびじゃなくてもらーめんスープは変わらないのでこっちもおいしかった!!</p>","fields":{"slug":"2019/11/21/ramen"},"frontmatter":{"tags":["ぼやき","ラーメン","昆布","デブ活"],"templateKey":"blog-post","slug":"2019/11/21/ramen","id":null,"title":"スープの衝撃！ここまでうまいスープはあるのか！？なラーメン","url":"2019/11/21/ramen","date":"2019-11-20T23:20:48.143Z","description":"最近ハマっているくろおびラーメンについての紹介","headerImage":"https://i.imgur.com/TsiKWJM.jpg","year":"2019","month":"11"}}},{"node":{"id":"893e646d-2473-58b4-93ca-82ac118a0984","html":"<p>めっちゃ便利じゃんアゼルバイジャン</p>\n<p>Pythonで結構有名なdocoptがNimという言語でも使えたので喜びのあまり記事を書く運びになりました。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#%E3%81%9D%E3%82%82%E3%81%9D%E3%82%82nim%E3%81%A8%E3%81%AF\">そもそもNimとは？</a></p>\n<ul>\n<li><a href=\"#%E6%97%A9%E3%81%84\">早い</a></li>\n<li><a href=\"#%E4%B8%80%E9%83%A8%E3%81%AE%E4%BA%BA%E3%81%AB%E4%BA%BA%E6%B0%97%E3%81%8C%E3%81%82%E3%82%8B\">一部の人に人気がある</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%81%98%E3%82%83%E3%81%82%E3%81%A8%E3%82%8A%E3%81%82%E3%81%88%E3%81%9A%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\">じゃあとりあえず使ってみる</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%81%9D%E3%81%93%E3%81%A7%E5%83%95%E3%81%AFdocopt\">そこで僕はdocopt</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%B5%90%E8%AB%96\">結論</a></p>\n</li>\n</ul>\n</div>\n<h2 id=\"そもそもnimとは\" style=\"position:relative;\"><a href=\"#%E3%81%9D%E3%82%82%E3%81%9D%E3%82%82nim%E3%81%A8%E3%81%AF\" aria-label=\"そもそもnimとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>そもそもNimとは？</h2>\n<p><img src=\"https://i.imgur.com/kYsjLcW.png\" alt=\"img\"></p>\n<p>Nimとは、公式Doc <a href=\"https://nim-lang.org/\" target=\"_blank\" rel=\"noopener noreferrer\">https://nim-lang.org/</a>  によると、静的型付なコンパイラ言語でPython, Ada, modulaなどの成熟した言語のいいとこ取りをした<strong>能率的</strong>で、<strong>表現力豊か</strong>で、<strong>エレガント</strong>な言語とのこと。</p>\n<p><strong>大手化粧品メーカー</strong>ばりにうたい文句が多いですが、私なりに触っての特徴をお伝えしますと…</p>\n<h3 id=\"早い\" style=\"position:relative;\"><a href=\"#%E6%97%A9%E3%81%84\" aria-label=\"早い permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>早い</h3>\n<p>Nimはスクリプト言語でもVM上で動くわけでもなく、ネイティブな実行ファイルにコンパイルされます。</p>\n<p>よく、Pythonは遅い～的な小言をいう人にはこの手の言語が合ってると思いますが、そういう人に限って<strong>Go</strong>がいいと言ったりします。</p>\n<p><del>（私は<strong>Go大好き</strong>です!!ただ、世の中Goだけじゃないよ～と言いたいのと、<strong>社内に優秀なGoエンジニアが何名か居るので</strong>社内では<strong>Rust信者</strong>として今は活動中。。）</del></p>\n<p>Goとの優位差を見せつけるには、<strong>Nimのコンパイラ</strong>の優秀さを示すことかと思います。</p>\n<p>（構文が楽とかPythonライクで書きやすいとかそういった優位差を示す記事もありますが、個人的にはGoもNimもそんなに難しさは変わらないと思います。<del>Rustは難しいけど書いてて楽しいです。</del>）</p>\n<p>自分で検証してないので完全に他人の受け売りですが、<a href=\"http://h-miyako.hatenablog.com/entry/2015/01/23/060000\" target=\"_blank\" rel=\"noopener noreferrer\">こちらの記事</a>を確認すると、最適化オプションをがちゃがちゃしたC(いわゆる -O3オプション)には負けましたが、それでも他の言語と比較すると<strong>圧倒的に早い</strong>。</p>\n<p>(ちょっと古めの記事なので最新はわからん。)</p>\n<table>\n<thead>\n<tr>\n<th><strong>Language</strong></th>\n<th>sec(exec)</th>\n<th>sec(compile)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>c</td>\n<td>3.993</td>\n<td>0.02</td>\n</tr>\n<tr>\n<td>c (optimized -o2)</td>\n<td>2.062</td>\n<td>0.29</td>\n</tr>\n<tr>\n<td>go</td>\n<td>3.795</td>\n<td>0.313</td>\n</tr>\n<tr>\n<td>nim</td>\n<td>25.996</td>\n<td>0.795</td>\n</tr>\n<tr>\n<td><strong>nim(optimized)</strong></td>\n<td><strong>1.625</strong></td>\n<td>1.4</td>\n</tr>\n<tr>\n<td>rust</td>\n<td>4.692</td>\n<td>0.29</td>\n</tr>\n<tr>\n<td>rust(optimized)</td>\n<td>3.602</td>\n<td>0.303</td>\n</tr>\n</tbody>\n</table>\n<p>(引用: [この頃流行りの言語たち（他）でベンチマーク（Dart, Go, Julia, Nim, Python, Rust他）](<a href=\"http://h-miyako.hatenablog.com/entry/2015/01/23/060000\" target=\"_blank\" rel=\"noopener noreferrer\">http://h-miyako.hatenablog.com/entry/2015/01/23/060000</a>))</p>\n<p>詳しいことはわからないのですが、-o3オプションって、いいイメージないんですよね…。昔、-o3オプションで爆速な実行ファイルを作成しようとしたら、コンパイルは問題なく完了するのにいざ実行しようとするとコアダンプ吐いて落ちまくったんですよね。。</p>\n<p>そんな危険なオプションに匹敵するスピードがあるのはすごい。</p>\n<p>というのもNim自体がCを通してコンパイルするいわゆるトランスパイルな言語なのでまぁ相性がいいんでしょうね。</p>\n<p>（ちなみに、C++/Objective-C/JavaScriptなんかにもトランスパイルできるらしい。C言語からの実行ファイルビルドのためLinux,Mac,Windowsだけでなく、<a href=\"https://github.com/nim-lang/Nim/pull/8069\" target=\"_blank\" rel=\"noopener noreferrer\">Nitendo Switchでも動く実行ファイルを作れるみたいです。</a>作ったことないけど。）</p>\n<h3 id=\"一部の人に人気がある\" style=\"position:relative;\"><a href=\"#%E4%B8%80%E9%83%A8%E3%81%AE%E4%BA%BA%E3%81%AB%E4%BA%BA%E6%B0%97%E3%81%8C%E3%81%82%E3%82%8B\" aria-label=\"一部の人に人気がある permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一部の人に人気がある</h3>\n<p>気がする、という感じですがNimの記事書いていてNimの悪口言っている人をあまり見ません。</p>\n<p>構文がエレガントという意見は個人的にはよくわかんなかったです・・・。~~クラスもまさにCの構造体チックだし。。~~が、悪い感じはしませんでした。<strong>マクロはやはり便利だよね</strong>という印象です。</p>\n<h2 id=\"じゃあとりあえず使ってみる\" style=\"position:relative;\"><a href=\"#%E3%81%98%E3%82%83%E3%81%82%E3%81%A8%E3%82%8A%E3%81%82%E3%81%88%E3%81%9A%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\" aria-label=\"じゃあとりあえず使ってみる permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>じゃあとりあえず使ってみる</h2>\n<p>ということで早速使ってみます。</p>\n<p>今回は毎回おなじみ<a href=\"https://github.com/tubone24/ebook_homebrew\" target=\"_blank\" rel=\"noopener noreferrer\">Ebook-homebrew</a>のクライアントCLIを作ってみます。</p>\n<p>CLIなので、コマンドラインから引数を受け取らなければなりません。</p>\n<p>ちょっと調べて出てきた <strong>parseopt</strong> がよいと思いこちらで実装進めてましたが、思いのほか新しい言語の学習コストと相まってめんどくさくてやる気がなくなりレポジトリをほったらかしにしてました。</p>\n<p>parseoptを使うとこんな感じです。</p>\n<div class=\"gatsby-highlight\" data-language=\"nim\"><pre class=\"language-nim\"><code class=\"language-nim\"><span class=\"token keyword\">import</span> parseopt2\n\n<span class=\"token keyword\">when</span> isMainModule<span class=\"token operator\">:</span>\n  <span class=\"token keyword\">for</span> kind<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> val <span class=\"token operator\">in</span> <span class=\"token function\">getopt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> kind\n    <span class=\"token operator\">of</span> cmdArgument<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">if</span> key <span class=\"token operator\">==</span> <span class=\"token string\">\"status\"</span><span class=\"token operator\">:</span>\n        <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> key <span class=\"token operator\">==</span> <span class=\"token string\">\"upload\"</span><span class=\"token operator\">:</span>\n        <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"upload\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">of</span> cmdLongOption<span class=\"token punctuation\">,</span> cmdShortOption<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">if</span> key <span class=\"token operator\">==</span> <span class=\"token string\">\"h\"</span> <span class=\"token operator\">or</span> key <span class=\"token operator\">==</span> <span class=\"token string\">\"help\"</span><span class=\"token operator\">:</span>\n        <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"help\"</span><span class=\"token punctuation\">)</span>\n      echo <span class=\"token string\">\"Options > \"</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">,</span><span class=\"token string\">\"=\"</span> <span class=\"token punctuation\">,</span>val\n    <span class=\"token operator\">of</span> cmdEnd<span class=\"token operator\">:</span>\n      echo <span class=\"token string\">\"end\"</span></code></pre></div>\n<p>直感的じゃない・・・。</p>\n<ul>\n<li>getoptからkind, key, valを逐次取り、それぞれ<strong>cmdArgument</strong>, <strong>cmdLongOption</strong>, <strong>cmdShortOption</strong>ごとにif文で判定して・・・。</li>\n</ul>\n<p>オプションが入っているときの位置引数の値をとりたい！みたいなときどないすんねんと・・。</p>\n<h2 id=\"そこで僕はdocopt\" style=\"position:relative;\"><a href=\"#%E3%81%9D%E3%81%93%E3%81%A7%E5%83%95%E3%81%AFdocopt\" aria-label=\"そこで僕はdocopt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>そこで僕はdocopt</h2>\n<p>Nimでも見つけちゃいました。</p>\n<p><img src=\"https://i.imgur.com/FeDnyEc.jpg\" alt=\"img\"></p>\n<p><a href=\"http://docopt.org/\" target=\"_blank\" rel=\"noopener noreferrer\">docopt</a>はPythonで使ったことがあるのですが、CLIのUsageを書くだけでコマンドラインパーサーとして動く優れもの。</p>\n<p>Pythonだとこんな感じ、<a href=\"https://github.com/tubone24/ebook_homebrew/blob/master/examples/use_rest_api/src/main.py\" target=\"_blank\" rel=\"noopener noreferrer\">Client App with ebook-homebrew's rest API\n</a></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">\"\"\"\nOverview:\n  Client App with ebook-homebrew's rest API\nUsage:\n  main.py [-h|--help] [-v|--version]\n  main.py upload &lt;directory> &lt;extension> [--host &lt;host>] [--port &lt;port>]\n  main.py convert &lt;id> &lt;extension> [--host &lt;host>] [--port &lt;port>]\n  main.py download &lt;id> &lt;file> [--host &lt;host>] [--port &lt;port>]\nOptions:\n  upload         : upload\n  convert        : convert\n  &lt;directory>    : directory\n  &lt;extension>    : extension\n  &lt;id>           : upload_id\n  &lt;file>         : filename\n  -h, --help     : show this help message and exit\n  -v, --version  : show version\n  --host         : API server host\n  --port         : API server port\n\"\"\"</span>\n\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> glob\n<span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">from</span> docopt <span class=\"token keyword\">import</span> docopt\n\n__version__ <span class=\"token operator\">=</span> <span class=\"token string\">\"2.0.0\"</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Call submodules\"\"\"</span>\n\n    <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">\"upload\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        upload<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">\"convert\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        convert<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">\"download\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        download<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">\"--version\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        show_version<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>モジュールの先頭で文字列としてUsage書いてますね。</p>\n<p>Nimで使うとこんな感じになります。</p>\n<div class=\"gatsby-highlight\" data-language=\"nim\"><pre class=\"language-nim\"><code class=\"language-nim\"><span class=\"token keyword\">const</span> doc <span class=\"token operator\">=</span> <span class=\"token string\">\"\"\"\nOverview:\n  Client App with ebook-homebrew's rest API for Nim\nUsage:\n  ebook_homebrew_nim_client status\n  ebook_homebrew_nim_client convert &lt;directory> &lt;contentType> [-o|--output=&lt;outputFile>]\nOptions:\n  status                Check API Status\n  convert               Upload Images, convert to PDF and download result.pdf\n  &lt;directory>           Specify directory with in images\n  &lt;contentType>         Image content Type such as \"image/jpeg\"\n  -o, --output=&lt;outputFile> Output Filename [default: result.pdf]\n\"\"\"</span>\n\n<span class=\"token keyword\">import</span> docopt\n<span class=\"token keyword\">import</span> ebook_homebrew_nim_clientpkg<span class=\"token operator\">/</span>submodule\n\n<span class=\"token keyword\">proc</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span>\n  <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> <span class=\"token function\">docopt</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">,</span> version <span class=\"token operator\">=</span> <span class=\"token string\">\"0.1.0\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span>\n    echo <span class=\"token function\">getStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">\"convert\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">let</span> uploadId <span class=\"token operator\">=</span> <span class=\"token function\">extractUploadId</span><span class=\"token punctuation\">(</span><span class=\"token function\">uploadImgSeq</span><span class=\"token punctuation\">(</span><span class=\"token function\">listImgFiles</span><span class=\"token punctuation\">(</span><span class=\"token operator\">$</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">\"&lt;directory>\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">$</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">\"&lt;contentType>\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">discard</span> <span class=\"token function\">convertImg</span><span class=\"token punctuation\">(</span>uploadId<span class=\"token punctuation\">,</span> <span class=\"token operator\">$</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">\"&lt;contentType>\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">\"--output\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span>\n      <span class=\"token function\">convertPdfDownload</span><span class=\"token punctuation\">(</span>uploadId<span class=\"token punctuation\">,</span> <span class=\"token operator\">$</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">\"--output\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n      <span class=\"token function\">convertPdfDownload</span><span class=\"token punctuation\">(</span>uploadId<span class=\"token punctuation\">,</span> <span class=\"token string\">\"result.pdf\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">when</span> isMainModule<span class=\"token operator\">:</span>\n  <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>先頭で <strong>const doc</strong> として、Overview, Usage, Optionsを書きます。</p>\n<p>よく見かける書き方ですね。</p>\n<ul>\n<li>サブコマンドは<strong>status</strong>, <strong>convert</strong> のように直接指定します。</li>\n<li>位置引数は<hoge> と&#x3C;>カッコで囲みます。位置引数は特性上必須パラメーターと任意パラメーター(後述しますが[]で囲む)を併用する場合は必須パラメーターを先に書かなければなりません。</li>\n<li>オプションは --hogeとします。また、[]で囲むことで任意なパラメーターになります。また、ショートオプション（-h）とロングオプション両方使いたい場合は**|**(パイプ)を使います。</li>\n<li>-h, --helpもしくは間違ったパラメータ指定の場合はconst docの内容を出力します。(help表示)</li>\n</ul>\n<p>引数の取り出しかたは、</p>\n<ul>\n<li>let args = docopt(doc) する</li>\n<li>args[\"hoge\"]でサブコマンド取得(Bool)</li>\n<li>args[\"<hoge>\"]で位置引数の有無取得 **$**で文字列化され値が取得可能に</li>\n<li>args[\"--output\"]でオプションの判定、 **$**で文字列化されオプション設定時の位置引数値が取得可能</li>\n</ul>\n<p>わーお簡単。</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>んで出来上がったものがこちら<a href=\"https://github.com/tubone24/ebook-homebrew-nim-client\" target=\"_blank\" rel=\"noopener noreferrer\">ebook-homebrew-nim-client\n</a></p>\n<p>ちゃっかり上記レポジトリはGitHub ActionでCI化してます。(参考: <a href=\"https://qiita.com/jiro4989/items/809f2a520c2e40d65bd3\" target=\"_blank\" rel=\"noopener noreferrer\">Nim用のGitHub Actionsを作ってみた\n</a>)</p>\n<p>docoptのおかげでNimが好きになったような気がします。</p>\n<p>NimはほかにもGUIフレームワークのnimx, WebフレームワークのJester, Nimで書かれたカーネルのnimkernelなど触ってみたいものがたくさんあります。</p>\n<p>時間を見つけて少しずつ触っていきたいですね。</p>","fields":{"slug":"2019/11/20/docopt-nim"},"frontmatter":{"tags":["Nim","docopt","GitHub Action","CLI"],"templateKey":"blog-post","slug":"2019/11/20/docopt-nim","id":null,"title":"docoptはNimでも使えたのお話","url":"2019/11/20/docopt-nim","date":"2019-11-20T11:55:00.000Z","description":"Pythonですごい便利なdocoptはNimでも使えるという発見をした人のぼやき。","headerImage":"https://i.imgur.com/FeDnyEc.jpg","year":"2019","month":"11"}}},{"node":{"id":"a15af5a4-0ecd-55b5-94a4-40593685ad76","html":"<p>うまい！もう一杯</p>\n<p>ラーメン食べました。</p>\n<p>今日の一杯は</p>\n<p><a href=\"https://tabelog.com/tokyo/A1301/A130103/13156937/\" target=\"_blank\" rel=\"noopener noreferrer\">纏</a></p>\n<p>お品書きから <strong>特製平子煮干しそば</strong> を食べます。</p>\n<p><img src=\"https://i.imgur.com/nw3Mf5X.jpg\" alt=\"img\"></p>\n<p>纏といえばこち亀ですが、上品であっさり、でも主張のしっかりしたお味でした。</p>\n<p><img src=\"https://i.imgur.com/WtqaANF.jpg\" alt=\"img\"></p>\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3241.4558149052705!2d139.7540854147706!3d35.66577693842776!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x60188bea35890595%3A0x122e05e9a6a9ce62!2z5paw5qmLIOe6jw!5e0!3m2!1sja!2sjp!4v1573828271931!5m2!1sja!2sjp\" width=\"800\" height=\"600\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\"></iframe>\n<p>美味しいお味でした。（仕事しろ）</p>","fields":{"slug":"2019/11/16/ramen"},"frontmatter":{"tags":["ぼやき","ラーメン"],"templateKey":"blog-post","slug":"2019/11/16/ramen","id":null,"title":"珠玉の一杯。たくさん残業した日はこのラーメンを食べろ！","url":"2019/11/16/ramen","date":"2019-11-15T12:53:51.065Z","description":"ラーメンブログになりつつありますが、ラーメン語ってしまいます。","headerImage":"https://i.imgur.com/WtqaANF.jpg","year":"2019","month":"11"}}},{"node":{"id":"4db084d4-ef9a-50e9-86be-8e5c52e190ce","html":"<p>昔ながらのラーメン</p>\n<p>食べたいですよね。</p>\n<p>最近食べておいしかったのは、</p>\n<p><img src=\"https://i.imgur.com/N0Vkj2U.jpg\" alt=\"img\"></p>\n<p>こちらのラーメン。</p>\n<p><a href=\"https://tabelog.com/tokyo/A1308/A130802/13024487/\" target=\"_blank\" rel=\"noopener noreferrer\">南雲</a></p>\n<p>共同通信会館というビルの地下。いい雰囲気</p>\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d12965.283684211874!2d139.7445434!3d35.6690992!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0xf87a6d51dce26de8!2z5YWx5ZCM6YCa5L-h5Lya6aSo!5e0!3m2!1sja!2sjp!4v1573747714894!5m2!1sja!2sjp\" width=\"600\" height=\"450\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\"></iframe>\n<p>是非、皆さんも行ってみては？</p>","fields":{"slug":"2019/11/15/ramen"},"frontmatter":{"tags":["ぼやき","ラーメン","デブ活"],"templateKey":"blog-post","slug":"2019/11/15/ramen","id":null,"title":"昔ながらのラーメンたべたい","url":"2019/11/15/ramen","date":"2019-11-14T16:02:42.432Z","description":"ラーメンたべたい","headerImage":"https://i.imgur.com/N0Vkj2U.jpg","year":"2019","month":"11"}}},{"node":{"id":"cea5eae7-c177-5f93-83e3-9dfce91a7d0e","html":"<p>くっそみたいな陰キャのつぶやきです!!</p>\n<p>渋谷のえちえちイベントへは赴かず、GitHubと向き合っていたら、<strong>草</strong>の色が変わっていた。</p>\n<p><img src=\"https://i.imgur.com/hXMlB1n.png\" alt=\"img\"></p>\n<p>こういうところにも気が付けるので毎日GitHubに向き合うのはいいことですね（涙）</p>","fields":{"slug":"2019/10/31/halloween-github"},"frontmatter":{"tags":["ぼやき","ハロウィーン","GitHub"],"templateKey":"blog-post","slug":"2019/10/31/halloween-github","id":null,"title":"ハロウィーンはえちえちでチンパンジーなイベントじゃない。GitHubと向き合うイベントだ","url":"2019/10/31/halloween-github","date":"2019-11-05T16:09:12.044Z","description":"くっそみたいな陰キャのつぶやきです。","headerImage":"https://i.imgur.com/hXMlB1n.png","year":"2019","month":"11"}}},{"node":{"id":"77f84cb6-5b84-50fb-acdc-d4d28fcb7215","html":"<p>タイトル長い</p>\n<p>くっそ長いタイトルで恐縮ですが、Google Apps Script(GAS)とAPI FLASHとSlackAPIをClaspとJestとGitHub Actionで調理して定期的にWebページのスクリーンショットを撮っていきたいと思います。</p>\n<p>作成したコード <a href=\"https://github.com/tubone24/web-screenshot-to-slack-gas\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>はこちらとなります。</p>\n<p>GASへの詳しい設定方法は拙作コードの<a href=\"https://github.com/tubone24/web-screenshot-to-slack-gas/blob/master/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">Readme</a>をご参照いただければと思います。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#google-apps-scriptgas%E3%81%A8%E3%81%AF\">Google Apps Script(GAS)とは？</a></p>\n</li>\n<li>\n<p><a href=\"#javascript%E3%81%AFjavascript%E3%81%AA%E3%82%93%E3%81%A0%E3%81%91%E3%81%A9%E3%81%95\">JavaScriptはJavaScriptなんだけどさ</a></p>\n</li>\n<li>\n<p><a href=\"#%E6%82%B2%E3%81%97%E3%81%84%E4%B8%96%E7%95%8C%E3%81%AB%E3%81%AF%E7%BE%8E%E3%81%97%E3%81%84%E8%8A%B1%E3%81%8C%E5%92%B2%E3%81%8F\">悲しい世界には美しい花が咲く</a></p>\n</li>\n<li>\n<p><a href=\"#api-flash-%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E5%B1%A4%E4%BD%9C%E6%88%90\">API FLASH のサービス層作成</a></p>\n<ul>\n<li><a href=\"#api-flash%E3%81%A8%E3%81%AF\">API FLASHとは</a></li>\n<li><a href=\"#%E5%AE%9F%E9%9A%9B%E3%81%A7%E3%81%8D%E3%81%82%E3%81%8C%E3%81%A3%E3%81%9F%E3%82%B3%E3%83%BC%E3%83%89\">実際できあがったコード</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#slack%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E5%B1%A4\">Slackのサービス層</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%83%86%E3%82%B9%E3%83%88\">テスト</a></p>\n</li>\n<li>\n<p><a href=\"#build%E3%81%A8deploy\">Buildとdeploy</a></p>\n</li>\n<li>\n<p><a href=\"#github-action%E3%81%A7%E8%87%AA%E5%8B%95%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%95%E3%81%9B%E3%82%8B\">GitHub Actionで自動デプロイさせる</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%AE%8C%E6%88%90\">完成！</a></p>\n</li>\n</ul>\n</div>\n<h2 id=\"google-apps-scriptgasとは\" style=\"position:relative;\"><a href=\"#google-apps-scriptgas%E3%81%A8%E3%81%AF\" aria-label=\"google apps scriptgasとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Google Apps Script(GAS)とは？</h2>\n<p>Google Driveをご存じでしょうか？</p>\n<p>スプレッドシートやらプレゼンテーションと呼ばれる某ExcelやPowerPointの基本機能がWeb画面で扱えるアレです。</p>\n<p>Google Apps Scriptはそれのマクロだと思っていただけるとイメージがつきやすいかと思います。</p>\n<p>ExcelやPowerPointだとVBAがマクロ言語ですが、Google Apps ScriptはJavaScriptが言語です。</p>\n<p>さすがGoogle公式言語。</p>\n<p>またGoogle Apps Scriptのことを省略してGASとか言ったりするそうです。</p>\n<p>ｶﾞｽｶﾞｽ</p>\n<p>GAS専用のマクロ用関数がある程度用意されてるのでマクロを組むのも簡単ですし、時間で関数をキックするトリガー機能もあるので、簡単なFaaS（Function as a Service）として\n利用することもできます。</p>\n<p>今回は後者の使い方が中心となります。</p>\n<h2 id=\"javascriptはjavascriptなんだけどさ\" style=\"position:relative;\"><a href=\"#javascript%E3%81%AFjavascript%E3%81%AA%E3%82%93%E3%81%A0%E3%81%91%E3%81%A9%E3%81%95\" aria-label=\"javascriptはjavascriptなんだけどさ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScriptはJavaScriptなんだけどさ</h2>\n<p>さきほど書いたとおり、ほとんどGASはJavaScriptなのですが、ES6な記法ではないので、JavaScriptとは恐れ多くても言えないというのが実状です。</p>\n<p>なので上記と合わせ素のGASを使うと下記のような悲しいことがおきます。</p>\n<ul>\n<li>古くさいJavaScriptを書く</li>\n<li>テストできない</li>\n<li>CIに乗っけられない（手デプロイ）</li>\n</ul>\n<p>これは悲しいですね。</p>\n<h2 id=\"悲しい世界には美しい花が咲く\" style=\"position:relative;\"><a href=\"#%E6%82%B2%E3%81%97%E3%81%84%E4%B8%96%E7%95%8C%E3%81%AB%E3%81%AF%E7%BE%8E%E3%81%97%E3%81%84%E8%8A%B1%E3%81%8C%E5%92%B2%E3%81%8F\" aria-label=\"悲しい世界には美しい花が咲く permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>悲しい世界には美しい花が咲く</h2>\n<p>と悲しい気持ちになってるところで見つけたのがclaspです。</p>\n<p>claspはGoogle謹製のGASデプロイツールなのですが、勇者が\n<a href=\"https://github.com/howdy39/gas-clasp-starter\" target=\"_blank\" rel=\"noopener noreferrer\">Claspを使ったTypeSciptテンプレートを作ってました。</a>天才かよ。</p>\n<p>今回はこちらのテンプレートを借りて開発を進めたいとおもいます。</p>\n<h2 id=\"api-flash-のサービス層作成\" style=\"position:relative;\"><a href=\"#api-flash-%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E5%B1%A4%E4%BD%9C%E6%88%90\" aria-label=\"api flash のサービス層作成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API FLASH のサービス層作成</h2>\n<p>今回のGASの目的は、<strong>WEBページのスクリーンショットを撮る</strong>ということですので、スクリーンショットを簡単に取得する方法としてAPI FLASHを使います、</p>\n<h3 id=\"api-flashとは\" style=\"position:relative;\"><a href=\"#api-flash%E3%81%A8%E3%81%AF\" aria-label=\"api flashとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API FLASHとは</h3>\n<p><a href=\"https://apiflash.com/\" target=\"_blank\" rel=\"noopener noreferrer\">API FLASH</a>とは、<strong>Chrome</strong>ベースのWebscreenshotAPI提供サービスです。</p>\n<p>API FLASH自体はAWS Lambdaを使ってるらしく、スケーラビリティが高いと主張してます。</p>\n<p>おそらく、<a href=\"https://github.com/adieuadieu/serverless-chrome\" target=\"_blank\" rel=\"noopener noreferrer\">Serverless-chrome</a>をLambdaで実行しているものと思われます。</p>\n<p>Chromeベースのキャプチャリングなので、レンダリングも正確で非対応ページがすくないのもうれしいところです。</p>\n<p>さらに、うれしい機能として遅延キャプチャリング機能があり、ページのレンダリングを待ってからキャプチャを撮ることも可能です。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://api.apiflash.com/v1/urltoimage?access_key=hoge&amp;url=hoge&amp;delay=10</code></pre></div>\n<p>のようなURLでHttp Getをするだけでキャプチャが撮れるんです、すごいですね。</p>\n<p>ちなみに、無料版には1ヶ月あたりの利用制限がありますのでご注意を。</p>\n<h3 id=\"実際できあがったコード\" style=\"position:relative;\"><a href=\"#%E5%AE%9F%E9%9A%9B%E3%81%A7%E3%81%8D%E3%81%82%E3%81%8C%E3%81%A3%E3%81%9F%E3%82%B3%E3%83%BC%E3%83%89\" aria-label=\"実際できあがったコード permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>実際できあがったコード</h3>\n<p>TypeSciptでこんな感じのサービス層を作りました。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ApiFlashService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> captureWebPage <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    accessKey<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    width<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    height<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    delay<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  <span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> GoogleAppsScript<span class=\"token punctuation\">.</span>Base<span class=\"token punctuation\">.</span>Blob <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> captureUrl <span class=\"token operator\">=</span> ApiFlashService<span class=\"token punctuation\">.</span><span class=\"token function\">createChaptureUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> accessKey<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> responseData <span class=\"token operator\">=</span> UrlFetchApp<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>captureUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> responseData<span class=\"token punctuation\">.</span><span class=\"token function\">getBlob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> createChaptureUrl <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    accessKey<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    width<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    height<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    delay<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  <span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://api.apiflash.com/v1/urltoimage?access_key=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>accessKey<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;url=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;width=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>width<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;height=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>height<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;delay=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>delay<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;fresh=true</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>GASの場合APIのコールには<strong>URLFetchApp</strong>が利用できます。</p>\n<p><code class=\"language-text\">UrlFetchApp.fetch(url)</code> とするだけでAPIがコールできます。</p>\n<p>URLFetchAppはもちろんGAS専用のAPIですが、TypeSciptのLintがちゃんと利くのが何気にすごいと思いました。</p>\n<p><img src=\"https://i.imgur.com/gul9s4W.png\" alt=\"img\"></p>\n<h2 id=\"slackのサービス層\" style=\"position:relative;\"><a href=\"#slack%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E5%B1%A4\" aria-label=\"slackのサービス層 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Slackのサービス層</h2>\n<p>コードは省略しますが上と同じ要領でURLFetchを使って、Slackコール部も作ります。</p>\n<h2 id=\"テスト\" style=\"position:relative;\"><a href=\"#%E3%83%86%E3%82%B9%E3%83%88\" aria-label=\"テスト permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>テスト</h2>\n<p>テストはJestで作ります。</p>\n<p>ポイントは先ほどから利用しているURLFetchをMock化する必要があることです。</p>\n<p>Jestのグローバル変数定義であらかじめURLFetchを作り、JestのMock関数をテストケースごとにfetch関数と置き換えることで実現できます。</p>\n<p>package.jsonに</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"jest\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"verbose\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"globals\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"UrlFetchApp\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>とすることでグローバルにUrlFetchAppができますので、テストコードで</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> mockFetch <span class=\"token operator\">=</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nUrlFetchApp<span class=\"token punctuation\">.</span>fetch <span class=\"token operator\">=</span> mockFetch<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sendSlackServiceOK'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sendImage'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> actual <span class=\"token operator\">=</span> SendSlackService<span class=\"token punctuation\">.</span><span class=\"token function\">sendImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test-token'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test-image'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test-title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> expectedOption <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      method<span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span>\n      payload<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> token<span class=\"token operator\">:</span> <span class=\"token string\">'test-token'</span><span class=\"token punctuation\">,</span> file<span class=\"token operator\">:</span> <span class=\"token string\">'test-image'</span><span class=\"token punctuation\">,</span> channels<span class=\"token operator\">:</span> <span class=\"token string\">'#test'</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'test-title'</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>mockFetch<span class=\"token punctuation\">.</span>mock<span class=\"token punctuation\">.</span>calls<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://slack.com/api/files.upload'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>mockFetch<span class=\"token punctuation\">.</span>mock<span class=\"token punctuation\">.</span>calls<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>expectedOption<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>actual<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>とすることでfetch関数がmockに置き換わり、テスト可能です。</p>\n<p>mock関数をあらかじめ作成しておくと、コールのassertも可能です。</p>\n<h2 id=\"buildとdeploy\" style=\"position:relative;\"><a href=\"#build%E3%81%A8deploy\" aria-label=\"buildとdeploy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Buildとdeploy</h2>\n<p>StarterではWebpackを使ってTypeSciptのGAS化を実行しているようです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run build</code></pre></div>\n<p>とすることで、dist配下にGASのコードが配置されました。</p>\n<p>デプロイは、claspを利用します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">clasp login\nclasp push</code></pre></div>\n<p>とするだけでデプロイできちゃいます。</p>\n<h2 id=\"github-actionで自動デプロイさせる\" style=\"position:relative;\"><a href=\"#github-action%E3%81%A7%E8%87%AA%E5%8B%95%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%95%E3%81%9B%E3%82%8B\" aria-label=\"github actionで自動デプロイさせる permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Actionで自動デプロイさせる</h2>\n<p>ここまできたらあとはCIに乗っけるだけです。</p>\n<p>clasp loginをローカル上で実施したときに取得できるトークンがclasprc.jsonに出力されているので、こちらをGitHub ActionのSecret機能で渡してあげます。</p>\n<p><img src=\"https://i.imgur.com/ogQ4ILr.png\" alt=\"img\"></p>\n<p>あとは、testが通ったらclasp loginして、build, deployする定義をかけばよいです。</p>\n<p>GitHub ActionのSecretにはこのようにアクセスします。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">echo \"${{ secrets.CLASPRC_JSON }}\" > ~/.clasprc.json</code></pre></div>\n<h2 id=\"完成\" style=\"position:relative;\"><a href=\"#%E5%AE%8C%E6%88%90\" aria-label=\"完成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>完成！</h2>\n<p>GASにデプロイできたらcronでトリガーさせてあげれば定期的にキャプチャをとります。</p>\n<p>やったー!!</p>\n<p>無事にSlackへキャプチャが送られてきました！</p>\n<p><img src=\"https://raw.githubusercontent.com/tubone24/web-screenshot-to-slack-gas/master/docs/images/slack-preview.png\" alt=\"Img\"></p>","fields":{"slug":"2019/10/24/gas-webscreenshot"},"frontmatter":{"tags":["JavaScript","TypeScript","Google Apps Script","API FLASH","SlackAPI","Clasp","GitHub Action","Jest","自動テスト","Unit Test"],"templateKey":"blog-post","slug":"2019/10/24/gas-webscreenshot","id":null,"title":"Google Apps Script(GAS)とAPI FLASHとSlackAPIをClaspとJestとGitHub Actionで調理して定期的にWebページのスクリーンショットを撮る","url":"2019/10/24/gas-webscreenshot","date":"2019-10-23T22:22:00.000Z","description":"Google Apps Script(GAS)とAPI FLASHとSlackAPIをClaspとJestとGitHub Actionで調理して定期的にWebページのスクリーンショットを撮る","headerImage":"https://i.imgur.com/QCjxEBN.png","year":"2019","month":"10"}}}],"pathPrefix":"pages","first":false,"last":false,"index":7,"pageCount":11,"additionalContext":{"totalCount":110}}},"staticQueryHashes":["2959249232"]}