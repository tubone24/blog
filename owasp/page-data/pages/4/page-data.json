{"componentChunkName":"component---src-templates-index-tsx","path":"/pages/4","result":{"pageContext":{"totalCount":110,"group":[{"node":{"id":"0a117939-3603-5d3a-bb1b-8bf5f89d684f","html":"<p>4連休、StayHomeが叫ばれる中、ラーメンが食べたくなったので、LINEBOTを含めたラーメンソリューションを作ってみました。</p>\n<p><img src=\"https://i.imgur.com/aFfsvoe.gif\" alt=\"img\"></p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#stayhome%E3%81%A8%E3%81%AF\">StayHomeとは？</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%B8%9B%E3%82%8A%E3%83%97%E3%83%AC%E3%82%A4\">縛りプレイ</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%85%A8%E4%BD%93%E6%A7%8B%E6%88%90\">全体構成</a></p>\n<ul>\n<li><a href=\"#%E3%83%AF%E3%82%A4%E3%83%A4%E3%83%BC%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0\">ワイヤーフレーム</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E7%84%A1%E6%96%99%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%83%AC%E3%82%B9%E3%81%A8%E3%81%84%E3%81%88%E3%81%B0gas\">無料&#x26;サーバーレスといえばGAS</a></p>\n</li>\n<li>\n<p><a href=\"#gas%E3%81%A7%E8%A9%B0%E3%81%BE%E3%81%A3%E3%81%9F%E3%81%A8%E3%81%93%E3%82%8D\">GASで詰まったところ</a></p>\n<ul>\n<li><a href=\"#%E8%BF%91%E3%81%8F%E3%81%AE%E3%83%A9%E3%83%BC%E3%83%A1%E3%83%B3%E6%83%85%E5%A0%B1%E3%81%AE%E5%8F%96%E5%BE%97%E6%96%B9%E6%B3%95\">近くのラーメン情報の取得方法</a></li>\n<li><a href=\"#%E4%B8%80%E5%BA%A6%E3%81%AB%E9%80%81%E3%82%8C%E3%82%8B%E3%82%AB%E3%83%AB%E3%83%BC%E3%82%BB%E3%83%AB%E3%81%AF10%E5%80%8B5%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%BE%E3%81%A7\">一度に送れるカルーセルは10個×5メッセージまで</a></li>\n<li><a href=\"#firebase%E3%81%B8%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9\">Firebaseへのアクセス</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E7%B5%90%E8%AB%96\">結論</a></p>\n</li>\n</ul>\n</div>\n<h2 id=\"stayhomeとは\" style=\"position:relative;\"><a href=\"#stayhome%E3%81%A8%E3%81%AF\" aria-label=\"stayhomeとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StayHomeとは？</h2>\n<p>StayHomeとは、<strong>COVID-19</strong>の感染拡大を防止するために、**「人に会うのを可能な限り避ける」**取り組みのなかで、**みんなお家にいようね！**という標語のようなものです。</p>\n<p>多くの芸能人が呼びかけていて、あの<strong>星野源</strong>さんが歌いながらさまざまなことにチャレンジする動画作成がミームになってましたね。</p>\n<p>個人的には、</p>\n<iframe loading=\"lazy\" width=\"200\" height=\"113\" src=\"https://www.youtube.com/embed/Lk3MZrxXswY?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"麻雀を打つ黒川検事長\"></iframe>\n<p>がもはや星野源さん関係ないけど笑ってしまいました。天和上がったよって顔がまたなんとも...。</p>\n<p>さて、StayHomeですが残念ながら独身生活もこう長くなってくると、人と接しなくてもストレスなく生きられてしまうので、全然StayHome OKマンな私です。ただのんびりDアニメストアでアニメを見ながら、きのこの山を食べて、ゴロゴロしているのも4連休のお休みを作ってくださった神様(政府)に申し訳ないので、ためになることをしようと思いました。</p>\n<p><strong>「StayHomeでCOVではなくDEVしよう」</strong></p>\n<h2 id=\"縛りプレイ\" style=\"position:relative;\"><a href=\"#%E7%B8%9B%E3%82%8A%E3%83%97%E3%83%AC%E3%82%A4\" aria-label=\"縛りプレイ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>縛りプレイ</h2>\n<p>ただ闇雲に開発するだけでは面白くないので今回も縛りプレイを実施していこうと思います。</p>\n<ul>\n<li>貧乏なのでオールフリー(無料)</li>\n<li>できる限りサーバーレス</li>\n<li>LINEを絡める</li>\n</ul>\n<p>特にLINEを絡めた開発をするのには理由がありまして、最近本業の開発で隣のチームがLINEのメッセージレイアウトがどうとか言っているのを聞いていて、ちょっとでも話題に入れるようにしたいという下心があるわけです。</p>\n<h2 id=\"全体構成\" style=\"position:relative;\"><a href=\"#%E5%85%A8%E4%BD%93%E6%A7%8B%E6%88%90\" aria-label=\"全体構成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>全体構成</h2>\n<p>今回のアプリケーションは<strong>LINEの位置情報から近くのラーメン屋を探す</strong>サービスにしたいと思います。</p>\n<p>お友達にヒアリングしてみると、<strong>食べたラーメンを登録したい</strong>、 <strong>食べたラーメンを共有したい</strong>などのご意見があったので<strong>ライフログ</strong>機能もつけます。</p>\n<h3 id=\"ワイヤーフレーム\" style=\"position:relative;\"><a href=\"#%E3%83%AF%E3%82%A4%E3%83%A4%E3%83%BC%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0\" aria-label=\"ワイヤーフレーム permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ワイヤーフレーム</h3>\n<p><img src=\"https://i.imgur.com/KUqm5Qs.png\" alt=\"img\"></p>\n<p>雑ですが作ってみました。位置情報を送ると、近くのラーメン屋を検索してカルーセルで紹介します。</p>\n<p>また、ラーメン評価ボタンを付けて、クリックするとFirebaseで作ったフロントに飛んで星をつけることができます。</p>\n<p><img src=\"https://i.imgur.com/ibZirgX.png\" alt=\"img\"></p>\n<p>なので、LINEBOTを基軸にサービスを組みますが、今回はバックエンド処理がLINEの<a href=\"https://developers.line.biz/ja/reference/messaging-api/\" target=\"_blank\" rel=\"noopener noreferrer\">MessagingAPI</a>のWebhookで起動し、返信を返す機能なのでBOT部分はGASのdoPostを使って作ります。</p>\n<p>ラーメン登録画面などはさすがにGASで作り切るのはしんどいので、Firebaseを使います。フロント自体はある程度実装経験があるNuxt.jsを使います。</p>\n<h2 id=\"無料サーバーレスといえばgas\" style=\"position:relative;\"><a href=\"#%E7%84%A1%E6%96%99%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%83%AC%E3%82%B9%E3%81%A8%E3%81%84%E3%81%88%E3%81%B0gas\" aria-label=\"無料サーバーレスといえばgas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>無料&#x26;サーバーレスといえばGAS</h2>\n<p>さて、GASが今回も出てきました。GAS大好きすぎるマンですね。すみません。</p>\n<p>GASとはGoogle Apps Scriptsのことで詳しくは過去ブログ<a href=\"https://blog.tubone-project24.xyz/2019/10/24/gas-webscreenshot#google-apps-scriptgas%E3%81%A8%E3%81%AF%EF%BC%9F\" target=\"_blank\" rel=\"noopener noreferrer\">Google Apps Script(GAS)とAPI FLASHとSlackAPIをClaspとJestとGitHub Actionで調理して定期的にWebページのスクリーンショットを撮る\n</a>をご確認いただければと思います。</p>\n<p>今回もTypeScript + Claspで開発していき、GitHub Actionsでデプロイまで完了するCI/CDを構築していきたいと思います。</p>\n<h2 id=\"gasで詰まったところ\" style=\"position:relative;\"><a href=\"#gas%E3%81%A7%E8%A9%B0%E3%81%BE%E3%81%A3%E3%81%9F%E3%81%A8%E3%81%93%E3%82%8D\" aria-label=\"gasで詰まったところ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GASで詰まったところ</h2>\n<h3 id=\"近くのラーメン情報の取得方法\" style=\"position:relative;\"><a href=\"#%E8%BF%91%E3%81%8F%E3%81%AE%E3%83%A9%E3%83%BC%E3%83%A1%E3%83%B3%E6%83%85%E5%A0%B1%E3%81%AE%E5%8F%96%E5%BE%97%E6%96%B9%E6%B3%95\" aria-label=\"近くのラーメン情報の取得方法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>近くのラーメン情報の取得方法</h3>\n<p>LINEのMessagingAPIではユーザーが位置情報を送ると、設定したWebhookに対して緯度経度が送られます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  \"replyToken\": \"nHuyWiB7yP5Zw52FIkcQobQuGDXCTA\",\n  \"type\": \"message\",\n  \"mode\": \"active\",\n  \"timestamp\": 1462629479859,\n  \"source\": {\n    \"type\": \"user\",\n    \"userId\": \"U4af4980629...\"\n  },\n  \"message\": {\n    \"id\": \"325708\",\n    \"type\": \"location\",\n    \"title\": \"my location\",\n    \"address\": \"〒150-0002 東京都渋谷区渋谷２丁目２１−１\",\n    \"latitude\": 35.65910807942215,\n    \"longitude\": 139.70372892916203\n  }\n}</code></pre></div>\n<p><a href=\"https://developers.line.biz/ja/reference/messaging-api/#wh-location\" target=\"_blank\" rel=\"noopener noreferrer\">https://developers.line.biz/ja/reference/messaging-api/#wh-location</a></p>\n<p>そこで、送られた緯度経度を使って、近くのラーメン屋情報を取得するのですが、取得に使ったAPIが、</p>\n<p><a href=\"https://api.gnavi.co.jp/api/manual/restsearch/\" target=\"_blank\" rel=\"noopener noreferrer\">ぐるなびレストラン検索API\n</a>でした。</p>\n<p>登録も簡単で、緯度経度をフィルターで使えるので、結構便利に使えそうだったので選びました。</p>\n<p>位置情報を緯度経度で指定し、ラーメン屋のカテゴリコード(RSFST08008,RSFST08009,RSFST08012,RSFST08013)を指定し、緯度経度を設定するだけでこんな結果が返ってきます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    \"@attributes\": {\n        \"api_version\": \"v3\"\n    },\n    \"total_hit_count\": 10,\n    \"hit_per_page\": 1,\n    \"page_offset\": 1,\n    \"rest\": [\n        {\n            \"@attributes\": {\n                \"order\": 0\n            },\n            \"id\": \"gf8f400\",\n            \"update_date\": \"2020-03-31T14:49:10+09:00\",\n            \"name\": \"創作麺工房 鳴龍\",\n            \"name_kana\": \"ソウサクメンコウボウナキリュウ\",\n            \"latitude\": \"35.728676\",\n            \"longitude\": \"139.730343\",\n            \"category\": \"ラーメン、つけ麺\",\n            \"url\": \"https://r.gnavi.co.jp/akadann10000/?ak=UKutMOVrMfs3qHtpT1euv06MXqPjNZyGW51PnE3qUOk%3D\",\n            \"url_mobile\": \"http://mobile.gnavi.co.jp/shop/gf8f400/?ak=UKutMOVrMfs3qHtpT1euv06MXqPjNZyGW51PnE3qUOk%3D\",\n            \"coupon_url\": {\n                \"pc\": \"\",\n                \"mobile\": \"\"\n            },\n            \"image_url\": {\n                \"shop_image1\": \"https://rimage.gnst.jp/rest/img/akadann10000/t_0n6v.jpg\",\n                \"shop_image2\": \"\",\n                \"qrcode\": \"https://c-r.gnst.jp/tool/qr/?id=gf8f400&amp;q=6\"\n            },\n            \"address\": \"〒170-0005 東京都豊島区南大塚2-34-4 SKY南大塚1F\",\n            \"tel\": \"050-3461-5239\",\n            \"tel_sub\": \"03-6304-1811\",\n            \"fax\": \"03-6304-1811\",\n            \"opentime\": \"月 ランチ：11:30～15:00\\n水～日 ランチ：11:30～15:00\\n水～日 ディナー：18:00～21:00\",\n            \"holiday\": \"毎週火曜日\\n※※スープがなくなり次第終了することがございます。詳細はお電話でお問い合わせ下さい。\",\n            \"access\": {\n                \"line\": \"ＪＲ\",\n                \"station\": \"大塚駅\",\n                \"station_exit\": \"南口\",\n                \"walk\": \"4\",\n                \"note\": \"\"\n            },\n            \"parking_lots\": \"\",\n            \"pr\": {\n                \"pr_short\": \"丸鶏、牛骨、生牡蠣の旨みあふれるスープと小麦の風味ただよう自家製麺。店主のこだわりを一杯に昇華。\",\n                \"pr_long\": \"国内外の名店で腕を磨いた店主が、満を持して2012年に開店。「自分の食べたいものしか出さない」という店主渾身のスープと自家製麺から成る、担担麺、拉麺、つけ麺は、いずれもうまみ豊かでコク深い逸品ぞろい。タレや調味料も手作りにこだわっている。ボリュームたっぷりの自家製チャーシューや海老ワンタンなどのアラカルトも人気で、多くのファンを惹きつけている。ミシュランガイド東京2018 一つ星\"\n            },\n            \"code\": {\n                \"areacode\": \"AREA110\",\n                \"areaname\": \"関東\",\n                \"prefcode\": \"PREF13\",\n                \"prefname\": \"東京都\",\n                \"areacode_s\": \"AREAS2160\",\n                \"areaname_s\": \"大塚\",\n                \"category_code_l\": [\n                    \"RSFST08000\",\n                    \"RSFST08000\"\n                ],\n                \"category_name_l\": [\n                    \"ラーメン・麺料理\",\n                    \"ラーメン・麺料理\"\n                ],\n                \"category_code_s\": [\n                    \"RSFST08008\",\n                    \"RSFST08012\"\n                ],\n                \"category_name_s\": [\n                    \"ラーメン\",\n                    \"担々麺\"\n                ]\n            },\n            \"budget\": 1000,\n            \"party\": \"\",\n            \"lunch\": 900,\n            \"credit_card\": \"\",\n            \"e_money\": \"\",\n            \"flags\": {\n                \"mobile_site\": 1,\n                \"mobile_coupon\": 0,\n                \"pc_coupon\": 0\n            }\n        }\n    ]\n}</code></pre></div>\n<p>色々返ってきますが、今回必要なのは<strong>店名</strong>、<strong>場所情報</strong>、<strong>写真</strong>、<strong>電話番号</strong>です。</p>\n<p>ただ、この例ではお店の写真が<strong>shop_image1</strong>に設定されているのですが、ほとんどの検索結果で画像がありませんでした。</p>\n<p>画像がないとカルーセルがしょぼくなってしまいます。</p>\n<p>一応画像がない場合はいらすとやさんにあった、</p>\n<p><img src=\"https://i.imgur.com/DxiGaAr.jpg\" alt=\"img\"></p>\n<p>で置き換えるようにしましたがそれにしても悲しいので、少し工夫したいと思います。</p>\n<p><a href=\"https://webservice.recruit.co.jp/doc/hotpepper/reference.html\" target=\"_blank\" rel=\"noopener noreferrer\">ホットペッパーグルメサーチAPI</a>を併用して、同名のお店がヒットしたらホットペッパー側の画像(こっちのほうが画像は充実している)を採用するように変更しました。</p>\n<p>ホットペッパーグルメサーチAPIのレスポンスはこんなかんじです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    \"results\": {\n        \"api_version\": \"1.26\",\n        \"results_available\": 4,\n        \"results_returned\": \"4\",\n        \"results_start\": 1,\n        \"shop\": [\n            {\n                \"access\": \"山手線　大塚駅より徒歩5分\",\n                \"address\": \"東京都豊島区北大塚２－８－８　北大塚ビル１F\",\n                \"band\": \"不可\",\n                \"barrier_free\": \"なし\",\n                \"budget\": {\n                    \"average\": \"1000円\",\n                    \"code\": \"B001\",\n                    \"name\": \"1501～2000円\"\n                },\n                \"budget_memo\": \"お通し代なし\",\n                \"capacity\": 20,\n                \"card\": \"利用不可\",\n                \"catch\": \"太陽のラーメンとは？ ♪めがねの日♪\",\n                \"charter\": \"貸切不可\",\n                \"child\": \"お子様連れ歓迎\",\n                \"close\": \"月\",\n                \"coupon_urls\": {\n                    \"pc\": \"https://www.hotpepper.jp/strJ000732789/map/?vos=nhppalsa000016\",\n                    \"sp\": \"https://www.hotpepper.jp/strJ000732789/scoupon/?vos=nhppalsa000016\"\n                },\n                \"course\": \"なし\",\n                \"english\": \"なし\",\n                \"free_drink\": \"なし\",\n                \"free_food\": \"なし\",\n                \"genre\": {\n                    \"catch\": \"おいしくてヘルシー！フレッシュなラーメン\",\n                    \"code\": \"G013\",\n                    \"name\": \"ラーメン\"\n                },\n                \"horigotatsu\": \"なし\",\n                \"id\": \"J000732789\",\n                \"karaoke\": \"なし\",\n                \"ktai_coupon\": 1,\n                \"large_area\": {\n                    \"code\": \"Z011\",\n                    \"name\": \"東京\"\n                },\n                \"large_service_area\": {\n                    \"code\": \"SS10\",\n                    \"name\": \"関東\"\n                },\n                \"lat\": 35.733611638,\n                \"lng\": 139.726689431,\n                \"logo_image\": \"https://imgfp.hotp.jp/IMGH/30/84/P010113084/P010113084_69.jpg\",\n                \"lunch\": \"あり\",\n                \"middle_area\": {\n                    \"code\": \"Y057\",\n                    \"name\": \"巣鴨・大塚・駒込\"\n                },\n                \"midnight\": \"営業している\",\n                \"mobile_access\": \"山手線 大塚駅より徒歩5分\",\n                \"name\": \"太陽のトマト麺 大塚北口支店\",\n                \"name_kana\": \"たいようのとまとめん　おおつかきたぐちしてん\",\n                \"non_smoking\": \"全面禁煙\",\n                \"open\": \"火～土、祝前日: 11:00～翌1:00 （料理L.O. 翌0:30 ドリンクL.O. 翌0:30）日、祝日: 11:00～翌0:00 （料理L.O. 23:30 ドリンクL.O. 23:30）\",\n                \"other_memo\": \"\",\n                \"parking\": \"なし\",\n                \"party_capacity\": \"\",\n                \"pet\": \"不可\",\n                \"photo\": {\n                    \"mobile\": {\n                        \"l\": \"https://imgfp.hotp.jp/IMGH/67/80/P019506780/P019506780_168.jpg\",\n                        \"s\": \"https://imgfp.hotp.jp/IMGH/67/80/P019506780/P019506780_100.jpg\"\n                    },\n                    \"pc\": {\n                        \"l\": \"https://imgfp.hotp.jp/IMGH/67/80/P019506780/P019506780_238.jpg\",\n                        \"m\": \"https://imgfp.hotp.jp/IMGH/67/80/P019506780/P019506780_168.jpg\",\n                        \"s\": \"https://imgfp.hotp.jp/IMGH/67/80/P019506780/P019506780_58_s.jpg\"\n                    }\n                },\n                \"private_room\": \"なし\",\n                \"service_area\": {\n                    \"code\": \"SA11\",\n                    \"name\": \"東京\"\n                },\n                \"shop_detail_memo\": \"\",\n                \"show\": \"なし\",\n                \"small_area\": {\n                    \"code\": \"X142\",\n                    \"name\": \"大塚\"\n                },\n                \"station_name\": \"大塚\",\n                \"tatami\": \"なし\",\n                \"tv\": \"なし\",\n                \"urls\": {\n                    \"pc\": \"https://www.hotpepper.jp/strJ000732789/?vos=nhppalsa000016\"\n                },\n                \"wedding\": \"\",\n                \"wifi\": \"あり\"\n            }\n        ]\n    }\n}</code></pre></div>\n<p>↑<strong>photo</strong>が写真です。</p>\n<p>ちなみに検索結果のマージも行なうので、ホットペッパーのみ掲載店についても表示するようにしています。</p>\n<h3 id=\"一度に送れるカルーセルは10個5メッセージまで\" style=\"position:relative;\"><a href=\"#%E4%B8%80%E5%BA%A6%E3%81%AB%E9%80%81%E3%82%8C%E3%82%8B%E3%82%AB%E3%83%AB%E3%83%BC%E3%82%BB%E3%83%AB%E3%81%AF10%E5%80%8B5%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%BE%E3%81%A7\" aria-label=\"一度に送れるカルーセルは10個5メッセージまで permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一度に送れるカルーセルは10個×5メッセージまで</h3>\n<p>という制約がLINE MessaingAPIにあります。</p>\n<p>正確には、ReplyTokenで返信できる上限が5メッセージ、1メッセージに設定できるカルーセルが10個となってます。</p>\n<p>「xx件ヒットしました」というテキストで1メッセージ消費するので4メッセージカルーセルに設定できます。</p>\n<p>なので、40件以上お店がヒットした場合、一度に送りきれないことがわかりました。</p>\n<p>なので切り詰めて送るようにしました。</p>\n<h3 id=\"firebaseへのアクセス\" style=\"position:relative;\"><a href=\"#firebase%E3%81%B8%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9\" aria-label=\"firebaseへのアクセス permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Firebaseへのアクセス</h3>\n<p>GASでFirebaseにアクセスする、これが一番苦戦しました。</p>\n<p>そもそもGASでFirebaseにアクセスする必要があるんだっけ？という話ですが、</p>\n<p>GASでFirebaseにアクセスするには<a href=\"https://github.com/grahamearley/FirestoreGoogleAppsScript\" target=\"_blank\" rel=\"noopener noreferrer\">FirestoreApp</a>をライブラリから使ってアクセスするのがいいみたいですが、こちらをClaspに乗っけるのに苦労しました。</p>\n<p>結論からですが、ts-ignoreを使ってliberaryからimportされている<strong>FirestoreApp</strong>の参照エラーを取り除くことでclaspと共存が可能でした。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FirestoreService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> firestore<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> projectId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// @ts-ignore because of Add GoogleScripts Library</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firestore <span class=\"token operator\">=</span> FirestoreApp<span class=\"token punctuation\">.</span><span class=\"token function\">getFirestore</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> projectId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span>collectionId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> documentId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firestore<span class=\"token punctuation\">.</span><span class=\"token function\">updateDocument</span><span class=\"token punctuation\">(</span>collectionId <span class=\"token operator\">+</span> <span class=\"token string\">'/'</span> <span class=\"token operator\">+</span> documentId<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>また、GASからlibraryを使う方法は簡単でGAS画面で<strong>リソース=>ライブラリ</strong>から<strong>1VUSl4b1r1eoNcRWotZM3e87ygkxvXltOgyDZhixqncz9lQ3MjfT1iKFw</strong>をAdd a libraryします。</p>\n<p><img src=\"https://i.imgur.com/pdgBiAu.png\" alt=\"img\"></p>\n<p>ここで注意として指定するバージョンは最新にしないことです。</p>\n<p>最新のバージョンはGASのV8エンジンに対応したため、旧版のGASでは動かなかったです。</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>なんかめんどくさくなってきたので、フロント周りの記事は別機会に書きます...。</p>","fields":{"slug":"2020/07/25/gas-bot"},"frontmatter":{"tags":["GAS","LINEBOT"],"templateKey":"blog-post","slug":"2020/07/25/gas-bot","id":null,"title":"4連休を使ってGASとLINE BOTとFirebaseを使ってラーメン食べたいBOTを作ってみた","url":"2020/07/25/gas-bot","date":"2020-07-24T15:49:47.993Z","description":"GASとLINE BOTを使ってラーメン食べたいBOTを作ってみた","headerImage":"https://i.imgur.com/aFfsvoe.gif","year":"2020","month":"07"}}},{"node":{"id":"e2be1d24-7da8-5b59-818b-8eaf274ff4d4","html":"<p>GitHub Arctic Code Vaultのバッジが自分のProfileについたので何事かと思い調べてみました。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#%E6%83%B3%E5%83%8F%E3%81%97%E3%81%A6%E3%81%94%E3%82%89%E3%82%93\">想像してごらん</a></p>\n<ul>\n<li><a href=\"#%E5%8D%83%E5%B9%B4%E5%BE%8C%E3%81%AE%E5%90%9B%E3%81%B8\">千年後の君へ</a></li>\n<li><a href=\"#%E3%81%9D%E3%82%93%E3%81%AA%E7%94%98%E3%81%8F%E3%81%AA%E3%81%84%E3%82%88\">そんな甘くないよ</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#github-archive-program\">GitHub Archive Program</a></p>\n</li>\n<li>\n<p><a href=\"#github-arctic-code-vault\">GitHub Arctic Code Vault</a></p>\n<ul>\n<li><a href=\"#%E3%82%B9%E3%83%B4%E3%82%A1%E3%83%BC%E3%83%AB%E3%83%90%E3%83%AB%E8%AB%B8%E5%B3%B6\">スヴァールバル諸島</a></li>\n<li><a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E9%87%8F%E3%81%AF21tb\">データ量は21TB</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#awa\">AWA</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%A7%81%E3%81%AE%E3%83%80%E3%83%A1%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AF%E3%81%A9%E3%82%93%E3%81%AA%E5%BD%A2%E3%81%A7%E5%BE%8C%E4%B8%96%E3%81%AB%E6%AE%8B%E3%82%8B%E3%81%AE%E3%81%A0%E3%82%8D%E3%81%86%E3%81%8B\">私のダメコードはどんな形で後世に残るのだろうか</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%B5%90%E8%AB%96\">結論</a></p>\n</li>\n</ul>\n</div>\n<h2 id=\"想像してごらん\" style=\"position:relative;\"><a href=\"#%E6%83%B3%E5%83%8F%E3%81%97%E3%81%A6%E3%81%94%E3%82%89%E3%82%93\" aria-label=\"想像してごらん permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>想像してごらん</h2>\n<h3 id=\"千年後の君へ\" style=\"position:relative;\"><a href=\"#%E5%8D%83%E5%B9%B4%E5%BE%8C%E3%81%AE%E5%90%9B%E3%81%B8\" aria-label=\"千年後の君へ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>千年後の君へ</h3>\n<p><strong>1000年後の世界</strong>をあなたは想像できますか？</p>\n<p>西暦2020年から1000年後は西暦3020年なわけですが、ドラえもんの登場が22世紀なわけなので、めちゃくちゃ未来なわけです。</p>\n<p>もうとっくにタイムマシンができていて、</p>\n<p><img src=\"https://i.imgur.com/L0h5CW8.png\" alt=\"img\"></p>\n<p>空飛ぶ飛行機や、チューブの中を縦横無尽に進むレールウェイがあったり、</p>\n<p><img src=\"https://i.imgur.com/15J19mw.png\" alt=\"img\"></p>\n<p>或いは化け狸型ロボットと友達になって映画のときだけ優しくなる太っちょがいる世の中か、</p>\n<p><img src=\"https://i.imgur.com/eDqGxfR.png\" alt=\"img\"></p>\n<p>はたまた、チャージマン研もどきが闊歩している世紀末都市か、</p>\n<p><img src=\"https://i.imgur.com/Ja9tK8M.png\" alt=\"img\"></p>\n<h3 id=\"そんな甘くないよ\" style=\"position:relative;\"><a href=\"#%E3%81%9D%E3%82%93%E3%81%AA%E7%94%98%E3%81%8F%E3%81%AA%E3%81%84%E3%82%88\" aria-label=\"そんな甘くないよ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>そんな甘くないよ</h3>\n<p>私は1000年後はこんな世界だと思ってます。</p>\n<p><img src=\"https://i.imgur.com/FM2eSUj.png\" alt=\"img\"></p>\n<p>核を超える兵器を使った戦争で世界経済は崩壊。</p>\n<p>荒廃した街は暴力で支配する<strong>マッドマックス</strong>な光景。</p>\n<p>1000年後の君がせめても2020年現在くらいの技術水準にまで街を回復させるにはどうすればいいでしょうか？</p>\n<h2 id=\"github-archive-program\" style=\"position:relative;\"><a href=\"#github-archive-program\" aria-label=\"github archive program permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Archive Program</h2>\n<p>GitHubの人がこんな荒廃した世界を憂いてやったかは不明ですが、 <strong>GitHub Archive Program</strong> というものが<a href=\"https://github.blog/2019-11-13-universe-day-one/#archive\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Universe 2019</a>で発表されていたらしいです。</p>\n<p>GitHub Actionsの話でいっぱいいっぱいだったのでそんなこと知りませんでしたが、こんなことを考えていたんですね。</p>\n<p>プロジェクトの詳細は<a href=\"https://archiveprogram.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://archiveprogram.github.com/</a>に書いてありますが読み物として面白かったので少し皆さんと読んでいきたいと思います。</p>\n<p>冒頭の原文を引用します。</p>\n<blockquote>\n<p>The world is powered by open source software.</p>\n<p>It is a hidden cornerstone of modern civilization, and the shared heritage of all humanity. The mission of the GitHub Archive Program is to preserve open source software for future generations.</p>\n</blockquote>\n<p><strong>OSS</strong>、それは世界を支え、現代社会の隠れた礎らしいです。</p>\n<p>確かに、OSS文化が花咲いてから我々底辺にもなにかできるという希望が芽生えやすくなりましたし、実際世界の発展には欠かせないでしょう。</p>\n<p>そんなOSSをずっと残していきたい。たとえマッドマックスになっても。そんな意志を感じられる文章ですね。</p>\n<p>続いてのセクションでは、</p>\n<blockquote>\n<p>Why we use multiple forms of storage</p>\n</blockquote>\n<p>複数の形態のストレージを使用する理由について述べてます。</p>\n<p>GitHub Archive Programでは<a href=\"https://www.piql.com/\" target=\"_blank\" rel=\"noopener noreferrer\">piql</a>のマイクロフィルム技術を使って膨大なOSSデータを残してますが、同セクションではいかに現代文明のデータ保存方式が<strong>一時的で脆いか</strong>を訴えてます。</p>\n<p>それは現代文明に限らず、前48～47年のアレクサンドリア戦争のとき，大量の蔵書とともに焼け落ちた<a href=\"https://ja.wikipedia.org/wiki/%E3%82%A2%E3%83%AC%E3%82%AF%E3%82%B5%E3%83%B3%E3%83%89%E3%83%AA%E3%82%A2%E5%9B%B3%E6%9B%B8%E9%A4%A8\" target=\"_blank\" rel=\"noopener noreferrer\">アレクサンドリア図書館</a>や、</p>\n<p><img src=\"https://i.imgur.com/J9J15Mo.jpg\" alt=\"img\"></p>\n<p><a href=\"https://ja.wikipedia.org/wiki/%E3%83%91%E3%83%B3%E3%83%86%E3%82%AA%E3%83%B3_(%E3%83%AD%E3%83%BC%E3%83%9E)\" target=\"_blank\" rel=\"noopener noreferrer\">パンテオン</a>などのローマ時代の重厚な建物に使われる<a href=\"https://ja.wikipedia.org/wiki/%E3%83%AD%E3%83%BC%E3%83%9E%E3%83%B3%E3%83%BB%E3%82%B3%E3%83%B3%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%88\" target=\"_blank\" rel=\"noopener noreferrer\">ローマン・コンクリート</a>もローマ帝国滅亡後に使われなくなり現代使われていコンクリートの耐久性がクソ雑魚ナメクジだったり、</p>\n<p><img src=\"https://i.imgur.com/GA1jclM.jpg\" alt=\"img\"></p>\n<p>ナチスの敗戦とともに文字通り<a href=\"https://ja.wikipedia.org/wiki/DDT\" target=\"_blank\" rel=\"noopener noreferrer\">DDT</a>に駆逐されてしまった我がドイツの医学薬学は世界一ィィィィーーーーッ！な人体負荷の低い殺虫剤<a href=\"https://www.nytimes.com/2019/10/17/science/nazi-ddt-malaria.html\" target=\"_blank\" rel=\"noopener noreferrer\">DFDT</a>が忘れ去られてなければマラリアに苦しむ人々を救ったかもしれない話や、</p>\n<p><img src=\"https://i.imgur.com/nVbHSj5.jpg\" alt=\"img\"></p>\n<p>スペースシャトルチャレンジャー号事件をきっかけにあの月までも飛んでいくロケットサターンVに回顧したり...。</p>\n<p><img src=\"https://i.imgur.com/mqjfMUc.jpg\" alt=\"img\"></p>\n<p>テクノロジーをロストしてはいけない(戒め)なお気持ちがひしひしと伝わってきます。</p>\n<h2 id=\"github-arctic-code-vault\" style=\"position:relative;\"><a href=\"#github-arctic-code-vault\" aria-label=\"github arctic code vault permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Arctic Code Vault</h2>\n<p><img src=\"https://i.imgur.com/UyasvRq.png\" alt=\"img\"></p>\n<p>GitHubでは、コードの長期保存プログラムとして、<strong>GitHub Arctic Code Vault</strong> をはじめました。</p>\n<p>GitHub Arctic Code Vaultは、北極圏の山の<strong>永久凍土</strong>の中にある250メートルの深さにある非常に長期的なデジタルデータアーカイブ施設である <a href=\"https://www.piql.com/resource/arctic-world-archive/\" target=\"_blank\" rel=\"noopener noreferrer\">Arctic World Archive (AWA)</a> に保存されているデータリポジトリらしいです。</p>\n<p>はて、永久凍土といえば種子バンクで有名な<a href=\"https://ja.wikipedia.org/wiki/%E3%82%B9%E3%83%B4%E3%82%A1%E3%83%BC%E3%83%AB%E3%83%90%E3%83%AB%E4%B8%96%E7%95%8C%E7%A8%AE%E5%AD%90%E8%B2%AF%E8%94%B5%E5%BA%AB\" target=\"_blank\" rel=\"noopener noreferrer\">スヴァールバル世界種子貯蔵庫</a>を思い出します。</p>\n<p><img src=\"https://i.imgur.com/1Qjl4Ta.jpg\" alt=\"img\"></p>\n<p><del>スヴァールバル世界種子貯蔵庫... ビル・ゲイツ...マイクロソフト...　あっ(察し)</del></p>\n<p>と思ったら、スヴァールバル世界種子貯蔵庫もGitHub Arctic Code Vaultも<strong>スヴァールバル諸島</strong>にあるのです。</p>\n<h3 id=\"スヴァールバル諸島\" style=\"position:relative;\"><a href=\"#%E3%82%B9%E3%83%B4%E3%82%A1%E3%83%BC%E3%83%AB%E3%83%90%E3%83%AB%E8%AB%B8%E5%B3%B6\" aria-label=\"スヴァールバル諸島 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>スヴァールバル諸島</h3>\n<p>なんとこのスヴァールバル諸島、<a href=\"https://ja.wikipedia.org/wiki/%E3%82%B9%E3%83%B4%E3%82%A1%E3%83%BC%E3%83%AB%E3%83%90%E3%83%AB%E6%9D%A1%E7%B4%84\" target=\"_blank\" rel=\"noopener noreferrer\">スヴァールバル条約</a>というなかなかに興味深い条約により、諸島の領有権はノルウェーであるものの、ノルウェーの法律をすべては適用せず、条約加盟国(オーストラリア、カナダ、デンマーク、フランス、インド、イタリア、日本、オランダ、ニュージーランド、ノルウェー、南アフリカ、スウェーデン、イギリス、アメリカ)は等しくこの島で経済活動を行なう権利を有する形に定められているとのことです。</p>\n<p>また、スヴァールバル諸島を<strong>非武装地帯</strong>として軍事活動を禁じているため、第二次世界大戦中を除いて、軍隊は駐屯していないとのこと。</p>\n<p>なるほど、物理的にも政治的にも強固な地なのですね。</p>\n<h3 id=\"データ量は21tb\" style=\"position:relative;\"><a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E9%87%8F%E3%81%AF21tb\" aria-label=\"データ量は21tb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>データ量は21TB</h3>\n<p>GitHubはGitHub Arctic Code Vaultに2020/2/2にすべてのアクティブな公開リポジトリのスナップショットを取得し、そのデータを2020/7/8に無事Arctic Code Vaultに保存したとのことです。(例のウイルスで対応が遅くなってしまったそうです)</p>\n<p>データ量186リールの<strong>piqlFilm</strong>（デジタル感光性アーカイブフィルム）に21TBのリポジトリデータを書き込んだそうです。たった21TBかーと思いますが、1000年残せるメディアへの転写です。すごいことではないでしょうか？</p>\n<h2 id=\"awa\" style=\"position:relative;\"><a href=\"#awa\" aria-label=\"awa permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWA</h2>\n<p><img src=\"https://i.imgur.com/qzsT2yU.png\" alt=\"img\"></p>\n<p><a href=\"https://www.piql.com/resource/arctic-world-archive/\" target=\"_blank\" rel=\"noopener noreferrer\">Arctic World Archive (AWA)</a>は、ノルウェーの国営鉱業会社であるStore Norske Spitsbergen Kulkompani（SNSK）と、非常に長期的なデジタル保存サービスを提供するPiql ASの共同企業らしいです。</p>\n<p>どうやら、スヴァールバル諸島は元炭鉱で廃炭鉱をアーカイブ施設として改造して、密閉されたチャンバー内の鉄壁のコンテナでアーカイブデータを保存することで、仮に電気が止まってしまっても氷点下の環境を維持できて、長期保存フィルムのデータも安全に保管できるとかで一儲けしているみたいです。</p>\n<p>GitHub以外にも実績があるようで、ノルウェー国立博物館向けにエドヴァルド・ムンクの『叫び』のデジタル化版、バチカン図書館向けに『神曲』のデジタル化版などのデータが保存されてるらしいですよ。</p>\n<p><img src=\"https://i.imgur.com/sQ2DbRT.png\" alt=\"img\"></p>\n<p><a href=\"https://www.groene.nl/artikel/rembrandt-in-de-permafrost\" target=\"_blank\" rel=\"noopener noreferrer\">Rembrandt in de permafrost\n</a></p>\n<h2 id=\"私のダメコードはどんな形で後世に残るのだろうか\" style=\"position:relative;\"><a href=\"#%E7%A7%81%E3%81%AE%E3%83%80%E3%83%A1%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AF%E3%81%A9%E3%82%93%E3%81%AA%E5%BD%A2%E3%81%A7%E5%BE%8C%E4%B8%96%E3%81%AB%E6%AE%8B%E3%82%8B%E3%81%AE%E3%81%A0%E3%82%8D%E3%81%86%E3%81%8B\" aria-label=\"私のダメコードはどんな形で後世に残るのだろうか permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>私のダメコードはどんな形で後世に残るのだろうか</h2>\n<p>GitHub Arctic Code Vaultでは、すべてのアクティブなGitHub公開リポジトリが含まれています。</p>\n<p>対象は2019/11/13のGitHub Universeでの発表から2020/02/02までの間にコミットされたすべてのレポ、星が1つ以上のレポジトリ、スナップショットの前年（02/03/2019 - 02/02/2020）からのコミット、星が250つ以上のレポが含まれます。</p>\n<p>毎日コード書くようにしていた時期だ...。</p>\n<p>スナップショットは星の数が多いリポジトリはバイナリを保持できるらしいですが、各リポジトリのデフォルトブランチのHEADから、100KB以上のバイナリを除いたもので構成されるとのことですので、私のレポジトリからはバイナリファイルは抜かれてしまっているでしょう。ほぼ画像とかしかないですがね。</p>\n<p>また各リポジトリは一つのTARファイルとしてパッケージ化され、データの密度と完全性を高めるために、ほとんどのデータはQRエンコードされ、圧縮されて保存されるとのこと。</p>\n<p><img src=\"https://i.imgur.com/baFUGwE.gif\" alt=\"img\"></p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>どうやら1000年後までダメコードが残されてしまうことになってしまいました。</p>\n<p>縄文土器でもよく<strong>失敗した土器</strong>が発掘されることがあります。後世の人に笑われると思うとなんか微妙な気分にもなりますが、ちょっと感慨深い気もします。</p>\n<p>ちなみに、無事コードが保管されるとGitHub Profileに <strong>Arctic Code Vault Contributor</strong>というバッジが表示されるようになります。</p>\n<p><img src=\"https://i.imgur.com/QpfYbBT.png\" alt=\"img\"></p>\n<p>**1000年後の君へ。**僕のコードを見たときにあーだこーだ言わずにそっと閉じてくれればいいからね！間違っても草生えるとか言わないでね。</p>\n<p><img src=\"https://i.imgur.com/7ha8VyR.png\" alt=\"img\"></p>","fields":{"slug":"2020/07/18/arctic-code-vault"},"frontmatter":{"tags":["GitHub","北極"],"templateKey":"blog-post","slug":"2020/07/18/arctic-code-vault","id":null,"title":"Arctic Code Vault Contributorになったらしい","url":"2020/07/18/arctic-code-vault","date":"2020-07-18T04:14:15.183Z","description":"いつのまにか、コードが北極に封印されたらしいので、記事にしていきます。","headerImage":"https://i.imgur.com/zBc842A.jpg","year":"2020","month":"07"}}},{"node":{"id":"409d9504-c2a3-5928-8109-fbaf12fd32a8","html":"<p>GitHubのfeatureであるGitHub ProfileにREADMEをつける機能を使って、自分のGitHub Profileを充実させましょう。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#%E3%81%AA%E3%82%93%E3%81%A0%E3%81%93%E3%82%8C\">なんだこれ!?</a></li>\n<li><a href=\"#%E4%BD%9C%E3%82%8A%E6%96%B9\">作り方</a></li>\n<li><a href=\"#%E5%87%BA%E6%9D%A5%E4%B8%8A%E3%81%8C%E3%81%A3%E3%81%9F\">出来上がった</a></li>\n</ul>\n</div>\n<h2 id=\"なんだこれ\" style=\"position:relative;\"><a href=\"#%E3%81%AA%E3%82%93%E3%81%A0%E3%81%93%E3%82%8C\" aria-label=\"なんだこれ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>なんだこれ!?</h2>\n<p><a href=\"https://dev.to/\" target=\"_blank\" rel=\"noopener noreferrer\">https://dev.to/</a>を見ると面白い記事がありました。</p>\n<p><a href=\"https://dev.to/web/design-github-profile-using-readme-md-8al\" target=\"_blank\" rel=\"noopener noreferrer\">Design GitHub profile using README.md</a></p>\n<p><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FhpF6q0t--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://res.cloudinary.com/practicaldev/image/fetch/s--BWQmzCli--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/i/c5hjkmvrl9rgss5gt27h.jpeg\" alt=\"img\"></p>\n<p>GitHub ProfileにGitHub README.mdをつけられるらしいです。</p>\n<h2 id=\"作り方\" style=\"position:relative;\"><a href=\"#%E4%BD%9C%E3%82%8A%E6%96%B9\" aria-label=\"作り方 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>作り方</h2>\n<p>作り方はとっても簡単で、自分のユーザー名と同じレポジトリを作り、README.mdを編集するだけです。</p>\n<p>私の場合、GitHubのユーザー名は<strong>tubone24</strong>なので<a href=\"https://github.com/tubone24/tubone24\" target=\"_blank\" rel=\"noopener noreferrer\">tubone24/tubone24</a>というレポジトリを作ります。</p>\n<p><img src=\"https://i.imgur.com/6b43Rf2.png\" alt=\"img\"></p>\n<p>このような形で、ユーザー名のレポジトリは<strong>special repository</strong>と書いてありますね。</p>\n<p>あとはGitHubのREADMEを編集するようにMarkdownを書いていくだけです。</p>\n<p><img src=\"https://i.imgur.com/eA5ztKm.png\" alt=\"img\"></p>\n<p>ちなみに、GitHubの普通のレポジトリのREADME.mdだと、レポジトリ内ファイルの相対関係でリンクや画像を指定できますが、それをすると残念ながら、GitHub Profile上で表示すると変な画像リンクに置き換わってしまいます。</p>\n<p><img src=\"https://i.imgur.com/cimtxsd.png\" alt=\"img\"></p>\n<p>画像の場合は<strong>raw.githubusercontent.com</strong>を使うことで解決します。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>center<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://twitter.com/meitante1conan<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://raw.githubusercontent.com/tubone24/tubone24/master/twitter.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://soundcloud.com/user-453736300<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://raw.githubusercontent.com/tubone24/tubone24/master/soundcloud.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://www.slideshare.net/tubone24<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://raw.githubusercontent.com/tubone24/tubone24/master/share.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://500px.com/tubone24<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://raw.githubusercontent.com/tubone24/tubone24/master/photography.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://blog.tubone-project24.xyz<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://raw.githubusercontent.com/tubone24/tubone24/master/blog.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://tubone24.github.io/resume/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://raw.githubusercontent.com/tubone24/tubone24/master/resume.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<h2 id=\"出来上がった\" style=\"position:relative;\"><a href=\"#%E5%87%BA%E6%9D%A5%E4%B8%8A%E3%81%8C%E3%81%A3%E3%81%9F\" aria-label=\"出来上がった permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>出来上がった</h2>\n<p>いい感じ！</p>\n<p><img src=\"https://i.imgur.com/kmBmedG.png\" alt=\"inmg\"></p>","fields":{"slug":"2020/07/12/github-profile"},"frontmatter":{"tags":["GitHub","README.md"],"templateKey":"blog-post","slug":"2020/07/12/github-profile","id":null,"title":"GitHub ProfileにREADMEをつけよう！","url":"2020/07/12/github-profile","date":"2020-07-11T15:48:09.482Z","description":"GitHub ProfileにREADME.mdをつけよう！","headerImage":"https://i.imgur.com/kmBmedG.png","year":"2020","month":"07"}}},{"node":{"id":"a929dfc8-d50e-589e-a3b1-0799e82da436","html":"<p>PortfolioサイトにSoundCloudのメディアプレーヤーを載っけたくなったので、調べてみました。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#portfolio%E3%82%B5%E3%82%A4%E3%83%88\">Portfolioサイト</a></li>\n<li><a href=\"#react-iframe\">React Iframe</a></li>\n<li><a href=\"#%E7%B5%90%E8%AB%96\">結論</a></li>\n</ul>\n</div>\n<h2 id=\"portfolioサイト\" style=\"position:relative;\"><a href=\"#portfolio%E3%82%B5%E3%82%A4%E3%83%88\" aria-label=\"portfolioサイト permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Portfolioサイト</h2>\n<p>拙作のPortfolioサイトはGatsuby.jsを使って作っており、Netlifyにてホスティングしてます。</p>\n<p><a href=\"https://portfolio.tubone-project24.xyz/\" target=\"_blank\" rel=\"noopener noreferrer\">https://portfolio.tubone-project24.xyz/</a></p>\n<p><img src=\"https://i.imgur.com/YklaEFu.png\" alt=\"img\"></p>\n<p>趣味の写真を基軸に、作ったゴミプロダクトや技術範囲を書いたりしてます。</p>\n<p><del>綺麗な</del>写真やこのBlogの紹介をしてますが、SoundCloudに掲載している音楽もPortfolioサイトに載せようと思います。</p>\n<h2 id=\"react-iframe\" style=\"position:relative;\"><a href=\"#react-iframe\" aria-label=\"react iframe permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Iframe</h2>\n<p>SoundCloudはShareボタンからiframeで動くメディアプレーヤを作ることができます。</p>\n<p><img src=\"https://i.imgur.com/qoLj5Cq.png\" alt=\"img\"></p>\n<p>しかしながら、iframeをReact(Gatsby.js)で使うには少し工夫が必要で、その工夫が<a href=\"https://www.npmjs.com/package/react-iframe\" target=\"_blank\" rel=\"noopener noreferrer\">React Iframe</a>を使うというものです。</p>\n<p>まず、npmやyarnでReact Iframeをインストールします。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save react-iframe</code></pre></div>\n<p>次にSoundCloudのShareボタンからiframeタグを出力します。例えば私の場合こんな感じのiframeタグができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;iframe width=\"100%\" height=\"450\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/users/197229086&amp;color=%23333335&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true\">&lt;/iframe></code></pre></div>\n<p>そうしたら、iframeタグをReact Iframeに置き換える形でReact IframeのPropsとして宣言する形です。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> Iframe <span class=\"token keyword\">from</span> <span class=\"token string\">'react-iframe'</span>\n\n\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Listen to my musics<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>Iframe width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span> height<span class=\"token operator\">=</span><span class=\"token string\">\"450\"</span> scrolling<span class=\"token operator\">=</span><span class=\"token string\">\"no\"</span> frameBorder<span class=\"token operator\">=</span><span class=\"token string\">\"no\"</span> allow<span class=\"token operator\">=</span><span class=\"token string\">\"autoplay\"</span>\r\n  src<span class=\"token operator\">=</span><span class=\"token string\">\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/users/197229086&amp;color=%23333335&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p><img src=\"https://i.imgur.com/Btf7On2.png\" alt=\"img\"></p>\n<p>できあがりです。iframeタグをReact Iframeに置き換えるだけで作れてしまうのでチョー簡単です。</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>ものすごく簡単にできて特に突っ込みどころのない記事になってしまいました。すみません。</p>\n<p>Portfolioサイトはもう少し改造したいですね。</p>","fields":{"slug":"2020/06/19/react-iframe"},"frontmatter":{"tags":["JavaScript","React"],"templateKey":"blog-post","slug":"2020/06/19/react-iframe","id":null,"title":"React Iframeを使ってPortfolioサイトにSoundCloudのメディアプレーヤーをつける","url":"2020/06/19/react-iframe","date":"2020-06-18T15:17:39.468Z","description":"React Iframeを使ってPortfolioサイトにSoundCloudのメディアプレーヤーをつける","headerImage":"https://i.imgur.com/XhixJxO.png","year":"2020","month":"06"}}},{"node":{"id":"db37d7d2-a05d-516f-9563-4a9393e565b0","html":"<p>2020/05/30に発生したDatadog Agentの<a href=\"https://docs.datadoghq.com/agent/faq/certificate_verify_failed-error/\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>CERTIFICATE_VERIFY_FAILED error</strong>\n</a>について少し考察してみようかと思います。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#certificate_verify_failed-%E3%81%AF%E7%AA%81%E7%84%B6%E3%81%AB\">CERTIFICATE_VERIFY_FAILED は突然に</a></p>\n</li>\n<li>\n<p><a href=\"#datadog%E3%81%8B%E3%82%89%E3%81%AE%E3%82%A2%E3%83%8A%E3%82%A6%E3%83%B3%E3%82%B9\">Datadogからのアナウンス</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%81%9D%E3%82%82%E3%81%9D%E3%82%82ssl%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF%E3%82%92%E3%81%8A%E3%81%95%E3%82%89%E3%81%84\">そもそもSSLの仕組みをおさらい</a></p>\n</li>\n<li>\n<p><a href=\"#ssl%E9%80%9A%E4%BF%A1%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%AA%8D%E8%A8%BC%E3%81%A8%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%BC%E6%98%8E%E6%9B%B8\">SSL通信におけるサーバー認証とサーバー証明書</a></p>\n<ul>\n<li><a href=\"#%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%AE%E4%B8%AD%E8%BA%AB\">サーバー証明書の中身</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E8%AA%8D%E8%A8%BC%E5%B1%80\">認証局</a></p>\n<ul>\n<li><a href=\"#%E6%89%8B%E9%A0%86%E3%81%AE%E3%81%8A%E3%81%95%E3%82%89%E3%81%84\">手順のおさらい</a></li>\n<li><a href=\"#%E3%83%91%E3%83%83%E3%81%A8%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%81%97%E3%82%84%E3%81%99%E3%81%84%E3%81%AE%E3%81%AF893%E3%81%AE%E4%BB%A3%E7%B4%8B%E3%81%A8%E8%A6%AA%E5%AD%90%E3%81%AE%E7%9B%83\">パッとイメージしやすいのは893の代紋と親子の盃</a></li>\n<li><a href=\"#%E5%A4%B1%E5%8A%B9%E3%83%AA%E3%82%B9%E3%83%88%E3%81%A8%E7%A0%B4%E9%96%80%E7%8A%B6\">失効リストと破門状</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%83%81%E3%82%A7%E3%83%BC%E3%83%B3%E3%81%A8%E3%83%AB%E3%83%BC%E3%83%88%E8%A8%BC%E6%98%8E%E6%9B%B8\">証明書チェーンとルート証明書</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%83%AB%E3%83%BC%E3%83%88%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%AE%E7%A2%BA%E3%81%8B%E3%82%89%E3%81%97%E3%81%95\">ルート証明書の確からしさ</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%83%AB%E3%83%BC%E3%83%88%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%8C%E6%9B%B4%E6%96%B0%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E3%81%A8%E3%81%8D%E3%81%AE%E4%BB%A3%E6%9B%BF%E6%89%8B%E6%AE%B5%E3%81%A8%E3%81%AF\">ルート証明書が更新できないときの代替手段とは？</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%82%AF%E3%83%AD%E3%82%B9%E3%83%AB%E3%83%BC%E3%83%88%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\">クロスルート証明書について</a></p>\n</li>\n<li>\n<p><a href=\"#%E8%A9%B1%E3%82%92%E6%88%BB%E3%81%97%E3%81%A6datadog\">話を戻してDatadog</a></p>\n</li>\n<li>\n<p><a href=\"#datadog-agent%E3%81%AFtornado%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B\">Datadog AgentはTornadoを使っている</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%B5%90%E8%AB%96\">結論</a></p>\n</li>\n<li>\n<p><a href=\"#%E8%BF%BD%E8%A8%98\">追記</a></p>\n</li>\n</ul>\n</div>\n<h2 id=\"certificate_verify_failed-は突然に\" style=\"position:relative;\"><a href=\"#certificate_verify_failed-%E3%81%AF%E7%AA%81%E7%84%B6%E3%81%AB\" aria-label=\"certificate_verify_failed は突然に permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CERTIFICATE_VERIFY_FAILED は突然に</h2>\n<p>**「ギャー！めっちゃEC2の監視が落ちているんですけど！」**と連絡を受けた土曜日。</p>\n<p>カンパリオレンジならぬカンパリ野菜生活をゴクゴク飲んでいた私は意識朦朧とする中、Slackを見る。</p>\n<p>ギャー!!</p>\n<p><img src=\"https://i.imgur.com/MQtTdnk.png\" alt=\"img\"></p>\n<p>めっちゃ落ちてますね....。</p>\n<p>一通りサービスの状態を見て問題なかったのでこの日は持ち前の「大丈夫ですよ(大嘘)」をかまして眠ることにしました。</p>\n<h2 id=\"datadogからのアナウンス\" style=\"position:relative;\"><a href=\"#datadog%E3%81%8B%E3%82%89%E3%81%AE%E3%82%A2%E3%83%8A%E3%82%A6%E3%83%B3%E3%82%B9\" aria-label=\"datadogからのアナウンス permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Datadogからのアナウンス</h2>\n<p>翌日、Datadogからアナウンスがありました。</p>\n<p><a href=\"https://docs.datadoghq.com/agent/faq/certificate_verify_failed-error/\" target=\"_blank\" rel=\"noopener noreferrer\">CERTIFICATE_VERIFY_FAILED error\n</a></p>\n<p>サイトを見ると何が起きていて、どんな対応がユーザーに必要かが書いてありました。</p>\n<blockquote>\n<p>On Saturday May 30th, 2020, at 10:48 UTC, an SSL root certificate used to cross-sign some of the Datadog certificates expired, and caused some of your Agents to lose connectivity with Datadog endpoints. Because this root certificate is embedded in certain Agent versions, you will need to take action to restore connectivity.</p>\n</blockquote>\n<p>ふむふむ... <strong>SSLのルート証明書(cross-sign)が失効</strong>してしまいましたわよ、という案件なのですね。</p>\n<p>よくあるSSL証明書失効と何が違うのでしょうか...よくわかりませんね..。</p>\n<p>とりあえずそこら辺の調査は後回しで直していきます。</p>\n<p>いくつかサイトに直し方が書いてありましたが今回は、</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo rm /opt/datadog-agent/agent/datadog-cert.pem &amp;&amp; sudo service datadog-agent restart</code></pre></div>\n<p>の直し方にフォーカスしてみようかと思います。どうやら <strong>datadog-cert.pem</strong> を消してからdatadogの<strong>サービス再起動</strong>すればいいみたい。</p>\n<p>ということで、各EC2に入ってごにょごにょしたら<strong>直りました</strong>。よかった...ホッと...。</p>\n<h2 id=\"そもそもsslの仕組みをおさらい\" style=\"position:relative;\"><a href=\"#%E3%81%9D%E3%82%82%E3%81%9D%E3%82%82ssl%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF%E3%82%92%E3%81%8A%E3%81%95%E3%82%89%E3%81%84\" aria-label=\"そもそもsslの仕組みをおさらい permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>そもそもSSLの仕組みをおさらい</h2>\n<p>直ったのはいいですが、何が起きていたかちゃんと把握したいですよね...。</p>\n<p>ということで5年ぶりにSSLのお勉強をしました。</p>\n<p>といっても私が知っているのは公開鍵暗号の話だけ...ですので実質初学習です。</p>\n<p>公開鍵暗号について詳しく知りたい人は、</p>\n<p><a href=\"https://amzn.to/3rypnvi\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>暗号技術入門 第3版　秘密の国のアリス</strong></a>がいいと思います。</p>\n<p>私をこの業界に引き込んだ師が大学の頃に読め！と言われて買って読んだ記憶があります。</p>\n<p>今でも家の本棚にありました。マジで良書です。わかりやすいです。</p>\n<p><img src=\"https://i.imgur.com/E0GC9w0.jpg\" alt=\"img\"></p>\n<p>さて簡単にSSL通信のおさらいをします。</p>\n<p><img src=\"https://i.imgur.com/APQPDxd.png\" alt=\"img\">\n引用: <a href=\"https://ssl.sakura.ad.jp/column/ssl/\" target=\"_blank\" rel=\"noopener noreferrer\">https://ssl.sakura.ad.jp/column/ssl/</a></p>\n<p>わかりやすいイラストがさくらのSSLにありましたので拝借します。</p>\n<p>重要なポイントとして、ブラウザ(クライアント)はSSL通信をするときにSSLの通信リクエスト(ClientHello)を送信すると、サーバーから<strong>サーバー証明書</strong>と<strong>公開鍵</strong>が送られてきます。</p>\n<p>暗号通信についてはこのうち<strong>公開鍵</strong>が利用され、クライアント側でランダムな値を<strong>共通鍵のシークレット</strong>として利用することを決定し<strong>公開鍵</strong>を使って暗号化し、サーバーに送信します。</p>\n<p>するとサーバーでは秘密鍵を使って共通鍵が取り出せるのでここから共通鍵暗号(例えばAESとか)での通信ができるわけです。これが<strong>鍵交換</strong>というやつです。</p>\n<p>えっ!?普通に互いの公開鍵を交換して公開鍵暗号で通信すればいいだけじゃんアゼルバイジャンと思ったそこの君!!それは違いますね。</p>\n<p>まず、その場合クライアントに公開鍵と対応する秘密鍵を用意する必要がありますね。あなたは田舎のおばあちゃんにOpenSSLコマンドを打たせるんですか...それはきついですよね。</p>\n<p>もう一つの問題は一般的に公開鍵暗号は共通鍵暗号に比べて暗号コストが高いということです。それなりの桁数の乱数をぶつけていくので共通鍵の<strong>数十～数千倍遅い</strong>といわれてます。</p>\n<p>ちなみにSSLの通信で、出てきた公開鍵暗号や共通鍵暗号のアルゴリズムパターンを定義するのが皆さん大好きおなじみの\n<strong>Cipher suite</strong>です。</p>\n<p>サイト管理者ならひと昔前、<a href=\"https://developers.google.com/admob/ios/app-transport-security?hl=ja\" target=\"_blank\" rel=\"noopener noreferrer\">ATS対応</a>とかでツライ思いをした人もいるかもしれませんね。</p>\n<p><strong>ECDHE-RSA-AES128-GCM-SHA256</strong> こんなやつ...あぁ...SHA-1の悪夢がよみがえりますね。</p>\n<p>脱線ついでにもう一つ。</p>\n<p>上記で述べた鍵交換一つとってもたとえば<strong>RSA</strong>という方式ではほぼ上記で説明しているとおりの流れを組むのですが、<strong>前方秘匿性</strong>に弱い欠点(一言でいえば全暗号通信を記憶していた状態で秘密鍵を手に入れたらすべてがばれてしまう)があったりで最近ではDHE（DiffieHellman, Ephemeral）という鍵交換方式を楕円曲線暗号上で行なう<strong>ECDHE</strong>（RFC4492）が主流だったりします。</p>\n<p>ここまでのお話はぜひ<a href=\"https://amzn.to/3rypnvi\" target=\"_blank\" rel=\"noopener noreferrer\">暗号技術入門 第3版　秘密の国のアリス</a>を読んでいただければ私なんかよりわかりやすく説明しているので興味がある人はぜひ読んでみましょう!!</p>\n<h2 id=\"ssl通信におけるサーバー認証とサーバー証明書\" style=\"position:relative;\"><a href=\"#ssl%E9%80%9A%E4%BF%A1%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%AA%8D%E8%A8%BC%E3%81%A8%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%BC%E6%98%8E%E6%9B%B8\" aria-label=\"ssl通信におけるサーバー認証とサーバー証明書 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSL通信におけるサーバー認証とサーバー証明書</h2>\n<p>SSL通信でもう一つ重要な要素は <strong>なりすまし</strong> <strong>盗聴</strong> <strong>改ざん</strong>を防ぐことです。</p>\n<p>サイトが本物のサイトか、途中に暗号を盗聴しているものはいないか、通信内容を不正に書き換えられていないかをチェックできないとネットショッピングとかで使える安全な暗号通信の意味がありません。</p>\n<p>それを担保する仕組みが<strong>サーバー証明書</strong>となるわけです。</p>\n<p>デジタル証明書も公開鍵暗号の仕組みを応用した話になります。</p>\n<p>サーバー証明書が本物であるかどうかの話の前にサーバー証明書にはどんな情報が書いてあるか見ていきましょう。</p>\n<h3 id=\"サーバー証明書の中身\" style=\"position:relative;\"><a href=\"#%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%AE%E4%B8%AD%E8%BA%AB\" aria-label=\"サーバー証明書の中身 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>サーバー証明書の中身</h3>\n<p><img src=\"https://i.imgur.com/r3Rhva4.png\" alt=\"img\"></p>\n<p>こちらはAWSのコンソールのSSL通信に使われているサーバー証明書です。</p>\n<p>いろんな情報が書かれているかと思いますがこちらは<a href=\"https://ja.wikipedia.org/wiki/X.509#.E8.A8.BC.E6.98.8E.E6.9B.B8.E3.81.AE.E6.A7.8B.E9.80.A0\" target=\"_blank\" rel=\"noopener noreferrer\">X.509</a>という規格に従って記載されています。</p>\n<p>詳しく知りたい人は<a href=\"https://ja.wikipedia.org/wiki/X.509#.E8.A8.BC.E6.98.8E.E6.9B.B8.E3.81.AE.E6.A7.8B.E9.80.A0\" target=\"_blank\" rel=\"noopener noreferrer\">X.509</a>を確認しましょう！</p>\n<p>簡単にAmazonの証明書の要素列挙しますと、</p>\n<ul>\n<li>バージョン</li>\n</ul>\n<p>: 3</p>\n<ul>\n<li>シリアル番号: 08 18 CC ....</li>\n<li>署名アルゴリズム: RSA暗号化を使用するSHA-256</li>\n<li>発行者</li>\n</ul>\n<p>: Amazon CA 1B</p>\n<ul>\n<li>有効期間\n<ul>\n<li>開始</li>\n</ul>\n</li>\n</ul>\n<p>: 2020/04/13 9:00:00 JST</p>\n<ul>\n<li>満了</li>\n</ul>\n<p>: 2021/03/15 21:00:00 JST</p>\n<ul>\n<li>主体者</li>\n</ul>\n<p>(サブジェクト)</p>\n<ul>\n<li>ap-northeast-1.console.aws.amazon.com</li>\n<li>主体者の公開鍵情報\n<ul>\n<li>公開鍵アルゴリズム: RSA暗号化</li>\n<li>主体者の公開鍵: 256バイト: 83 22 EB....</li>\n<li>証明書の署名アルゴリズム: SHA-256 ECDSA</li>\n<li>証明書の署名: 256バイト26 87 E2...</li>\n</ul>\n</li>\n<li>フィンガープリント\n<ul>\n<li>SHA-256: C0 75 7D...</li>\n<li>SHA-1:  CD 63 42...</li>\n</ul>\n</li>\n</ul>\n<p>Amazonが発行し、ドメインがAmazon所有の<strong>ap-northeast-1.console.aws.amazon.com</strong>がつらつらと書かれているわけです。</p>\n<p>他に重要な要素としてサーバー証明書の<strong>有効期限</strong>があります。有効期限切れの証明書は証明書して無効となります。</p>\n<p>基本的にサーバー証明書は有効期限が切れる前に更新しなければいけません。それをやり忘れるのがいわゆる**SSL証明書更新失敗！**というやつです。</p>\n<p><img src=\"https://i.imgur.com/m4xqMek.png\" alt=\"img\"></p>\n<p>証明書の有効期限はOpenSSLコマンドで簡単に取れますので、そういうことがないようにZabbixのExternalScriptとかできっちり管理することをおすすめしますー。</p>\n<p>ちなみに下記コマンドで簡単に証明書期限は確認できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">openssl s_client -connect hoge.com:443 -servername blog.tubone-project24.xyz &lt; /dev/null 2> /dev/null | openssl x509 -noout -startdate -enddate\n\nnotBefore=Jul  1 00:00:00 2019 GMT\nnotAfter=Aug 29 12:00:00 2021 GMT</code></pre></div>\n<p>我が家のサーバーのSSL証明書はZabbixで管理してます。(余談)</p>\n<p><img src=\"https://i.imgur.com/KzVk6D2.png\" alt=\"img\"></p>\n<h2 id=\"認証局\" style=\"position:relative;\"><a href=\"#%E8%AA%8D%E8%A8%BC%E5%B1%80\" aria-label=\"認証局 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>認証局</h2>\n<p>しかし、サーバー証明書に書いてある内容は本当に改ざんなく正しいのでしょうか？</p>\n<p>実はサーバー証明書自体はOpenSSLのコマンドでだれでも発行はできてしまいます。(そういうのを俗にオレオレ証明書とか言ったりします)なので証明書自体の確からしさは<strong>別の人</strong>にケツ持ちしてもらうことで担保しましょう！というのがデジタル証明書の認証局という仕組みとなります。</p>\n<p>まずサーバー証明書の中身をハッシュ関数(SHA-256とかそういったやつ)にかけてサーバー証明書固有のハッシュ値を得ます。</p>\n<p>そのハッシュ値に<strong>認証局</strong>というケツ持ちが秘密鍵を使って暗号化処理を行います。</p>\n<p>すると、そのハッシュ値を複合できるのは認証局の公開鍵になるわけです。</p>\n<p>（ちなみに秘密鍵所有者が自身の情報の出所の確からしさを証明するため、秘密鍵で暗号化させ、相手に公開鍵で複合させるという発想が公開鍵暗号を利用したデジタル署名の基本的な考え方です）</p>\n<p>つまり..。</p>\n<p>サーバー証明書の確からしさを確かめるには、</p>\n<ol>\n<li>サーバー証明書のハッシュを得る</li>\n<li>サーバー証明書についている認証局の秘密鍵で暗号化されたハッシュ値を認証局の公開鍵で複合する</li>\n<li>1と2が一致しているか確認する</li>\n</ol>\n<p>という手順を踏むわけです。</p>\n<p><strong>ちなみに認証局の証明書にもちゃんと有効期限が存在します</strong>。ココ重要。</p>\n<h3 id=\"手順のおさらい\" style=\"position:relative;\"><a href=\"#%E6%89%8B%E9%A0%86%E3%81%AE%E3%81%8A%E3%81%95%E3%82%89%E3%81%84\" aria-label=\"手順のおさらい permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>手順のおさらい</h3>\n<p>サーバー証明書作成手順を理解すると実は仕組みがわかりやすいので蛇足ですがコマンド付きで解説します。</p>\n<p>まず、サイト管理者などサーバー証明書を作りたい人はサーバー証明書のタマゴである<strong>C</strong>ertificate <strong>S</strong>igning <strong>R</strong>equest、いわゆる<strong>CSR</strong>をOpenSSLのコマンドとかで作成します。</p>\n<p>作成の際はセキュリティ上OpenSSLが使う疑似乱数をきっちり回しておくことをお勧めします。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># 疑似乱数作成\n./openssl md5 * > rand.dat\n\n# サーバ証明書の暗号化に使う秘密鍵\n./openssl genrsa -rand rand.dat -des3 2048 > private.pem\n\n# CSR作成\n./openssl req -new -key private.pem -out newcsr.pem\n\n# 証明書の内容について質問されるので答えていく\n\n\nCountry Name (2 letter code) [AU]:JP\n\nState or Province Name (full name) [Some-State]:Tokyo\n\nLocality Name (eg, city) []:Shinjuku-ku\n\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Tojo-kai\n\nOrganizational Unit Name (eg, section) []:Majima-gumi\n\nCommon Name (eg, YOUR name) []:yakuza-kusowaru-boryoku.com\n</code></pre></div>\n<p>CSRができたらこちらをお近くの認証局(DigiCertとか)に送ると認証局の秘密鍵で署名を暗号化したものをCSRにくっつけたいわゆるサーバー証明書が出来上がります。</p>\n<h3 id=\"パッとイメージしやすいのは893の代紋と親子の盃\" style=\"position:relative;\"><a href=\"#%E3%83%91%E3%83%83%E3%81%A8%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%81%97%E3%82%84%E3%81%99%E3%81%84%E3%81%AE%E3%81%AF893%E3%81%AE%E4%BB%A3%E7%B4%8B%E3%81%A8%E8%A6%AA%E5%AD%90%E3%81%AE%E7%9B%83\" aria-label=\"パッとイメージしやすいのは893の代紋と親子の盃 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>パッとイメージしやすいのは893の代紋と親子の盃</h3>\n<p><img src=\"https://i.imgur.com/RfBcxD9.png\" alt=\"img\"></p>\n<p>893映画やゲームが好きなほうならピンとくるかもしれませんが、認証局って893の<strong>代紋</strong>みたいなもんなんですね。</p>\n<p>晴れてあなたが組の長になったとき、その組の正当性や所属を明らかにするために後ろ盾の組の代紋飾るじゃないですか。</p>\n<p>もちろんただでは代紋なんて飾れないので<strong>親子の盃</strong>を交わすことで許可がでるわけですが、これがCSRを認証局に提出すると思ってください。</p>\n<p>晴れて、代紋をいただければあとは好きに暴れて結構。(ダメ)</p>\n<p>まとめると代紋というのはいわゆる上位の組が下位の組を認証しているんですね！だからビジネスができるわけですね。</p>\n<p><img src=\"https://i.imgur.com/30262FQ.png\" alt=\"img\"></p>\n<h3 id=\"失効リストと破門状\" style=\"position:relative;\"><a href=\"#%E5%A4%B1%E5%8A%B9%E3%83%AA%E3%82%B9%E3%83%88%E3%81%A8%E7%A0%B4%E9%96%80%E7%8A%B6\" aria-label=\"失効リストと破門状 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>失効リストと破門状</h3>\n<p>余談ですが、証明書には<strong>失効リスト</strong>というものがあります。</p>\n<p>認証局が発行した証明書は基本的には認証局自体のもしくはサーバー証明書の有効期限まで効力を持ちます。</p>\n<p>ただ、秘密鍵が流出したり、認証したサーバーが悪いことばかりやったりとで有効期限関係なく、　\n認証局の効力をなくしたい場合があります。</p>\n<p>その時使えるのが<strong>C</strong>ertificate <strong>R</strong>evocation <strong>L</strong>ist(<strong>CRL</strong>)です。失効リストでRevokeとしたサーバー証明書は認証局の署名効力を失います。これは認証局で行なうことができます。</p>\n<p>これって893でいうところの<strong>破門状</strong>ですよね..。</p>\n<p><img src=\"https://i.imgur.com/f382RVO.jpg\" alt=\"img\"></p>\n<p>破門状のいい画像がなかったし、本物の破門状を載せるのもどうかと思ったので勝手に<a href=\"https://lineblog.me/ozawahitoshi/archives/1027317703.html\" target=\"_blank\" rel=\"noopener noreferrer\">小沢仁志オフィシャルブログ</a>から借りてきました。</p>\n<p>破門状は893の死刑宣告といわれてますが、まさに失効リストはサーバー証明書の死刑宣告なのです。</p>\n<h2 id=\"証明書チェーンとルート証明書\" style=\"position:relative;\"><a href=\"#%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%83%81%E3%82%A7%E3%83%BC%E3%83%B3%E3%81%A8%E3%83%AB%E3%83%BC%E3%83%88%E8%A8%BC%E6%98%8E%E6%9B%B8\" aria-label=\"証明書チェーンとルート証明書 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>証明書チェーンとルート証明書</h2>\n<p>今度はこのブログのサーバー証明書を確認してみましょう。</p>\n<p><img src=\"https://i.imgur.com/oh5oyKC.png\" alt=\"img\"></p>\n<p>このブログのドメインである<a href=\"https://blog.tubone-project24.xyz\" target=\"_blank\" rel=\"noopener noreferrer\">blog.tubone-project24.xyz</a>が確かに所有しているドメインとなっているわけですが認証局は<strong>Let's Encrypt Authority X3</strong>ですね。</p>\n<p>では<strong>Let's Encrypt Authority X3</strong>が本物の認証局かどうかはどうやって判断するのでしょうか？</p>\n<p>この仕組みが<strong>証明書チェーン</strong>です。</p>\n<p>実は先ほどのAWSの証明書もそうでしたがチェーンは簡単に追うことができます。</p>\n<p><img src=\"https://i.imgur.com/wDLRAKk.png\" alt=\"img\"></p>\n<p>赤枠がチェーンです。</p>\n<p><strong>Let's Encrypt Authority X3</strong>の証明書を見てみましょう。</p>\n<p><img src=\"https://i.imgur.com/gpaXTQe.png\" alt=\"img\"></p>\n<p><strong>Let's Encrypt Authority X3</strong>のケツ持ちはどうやら<strong>DST Root CA X3</strong>がやっているみたいですね。</p>\n<p>このように<strong>認証局を別の認証局にケツ持ち</strong>してもらうことができます。</p>\n<p>さらにチェーンを追ってみます。</p>\n<p><img src=\"https://i.imgur.com/m8zYyuz.png\" alt=\"img\"></p>\n<p><strong>DST Root CA X3</strong>のケツ持ちは<strong>DST Root CA X3</strong>ですね...????ん????</p>\n<p>これはどういうことかというと言葉通り、<strong>DST Root CA X3</strong>のケツ持ちは<strong>DST Root CA X3</strong>がやっているということです。</p>\n<p>証明書チェーンではそれ以上、上位の認証局がいない証明書が必ず出てきます。これが<strong>ルート証明書</strong>というやつです。</p>\n<p>ルート証明書はそれ以上認証してくれるケツ持ちがいないのでクライアントは盲目的に信頼する必要があります。</p>\n<p>えっ！それでいいの？という声が聞こえてきますね...。</p>\n<h2 id=\"ルート証明書の確からしさ\" style=\"position:relative;\"><a href=\"#%E3%83%AB%E3%83%BC%E3%83%88%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%AE%E7%A2%BA%E3%81%8B%E3%82%89%E3%81%97%E3%81%95\" aria-label=\"ルート証明書の確からしさ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ルート証明書の確からしさ</h2>\n<p>ではサーバー証明書にチェーンされるルート証明書はどのように確からしさをチェックすればいいのでしょうか？</p>\n<p>それは、PCを買ったときやブラウザを入れたときにルート証明書をクライアントそばに入れておいて<strong>共通のルート証明書を持ったサーバー証明書を検証</strong>する仕組みとしているわけです。</p>\n<p>Macだとインストールされているルート証明書を<strong>キーチェーン</strong>から確認できます。</p>\n<p><img src=\"https://i.imgur.com/VGk9uYk.png\" alt=\"img\"></p>\n<p>当然ルート証明書にも有効期限があります。</p>\n<p>ルート証明書の有効期限が切れないようにOSの定期アップデートやブラウザのバージョンが更新タイミングで最新の証明書がインストールされる寸法になっています。</p>\n<h2 id=\"ルート証明書が更新できないときの代替手段とは\" style=\"position:relative;\"><a href=\"#%E3%83%AB%E3%83%BC%E3%83%88%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%8C%E6%9B%B4%E6%96%B0%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E3%81%A8%E3%81%8D%E3%81%AE%E4%BB%A3%E6%9B%BF%E6%89%8B%E6%AE%B5%E3%81%A8%E3%81%AF\" aria-label=\"ルート証明書が更新できないときの代替手段とは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ルート証明書が更新できないときの代替手段とは？</h2>\n<p>そうはいってもデバイスがインターネットにつながっていなかったり、組み込み端末などたくさんのルート証明書をインストールする余裕がない場合などあるかと思います。</p>\n<p>そういった場合たくさんのルート証明書を検証することはおろか、期限が迫っている証明書更新もできません。</p>\n<p>そういった場合はどうやってルート証明書を使うのでしょうか？</p>\n<h2 id=\"クロスルート証明書について\" style=\"position:relative;\"><a href=\"#%E3%82%AF%E3%83%AD%E3%82%B9%E3%83%AB%E3%83%BC%E3%83%88%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\" aria-label=\"クロスルート証明書について permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>クロスルート証明書について</h2>\n<p>そんなときに<strong>クロスルート証明書</strong>です。</p>\n<p>ルート証明書を更新できなかったり、複数のルート証明書をまとめあげるために使います。</p>\n<p>例えば下記の証明書チェーンがあったとします。</p>\n<p><img src=\"https://i.imgur.com/JcUkWaJ.png\" alt=\"img\"></p>\n<p>ラーメン食べている人が<a href=\"https://blog.tubone-project24.xyz\" target=\"_blank\" rel=\"noopener noreferrer\">blog.tubone-project24.xyz</a>にアクセスする際のチェーンは<strong>中間証明書A</strong>から<strong>ルート証明書A</strong>をたどって自身の端末にあるルート証明書の検証します。</p>\n<p>ではルート証明書が更新された場合はいかがでしょうか？</p>\n<p>通常端末のアップデートなどでクライアント側のルート証明書も更新されますので、</p>\n<p><img src=\"https://i.imgur.com/1uF5dA3.png\" alt=\"img\"></p>\n<p>と新しい<strong>ルート証明書B</strong>を使うことになりますね。</p>\n<p>ではさらにこの端末がアップデートできない場合やインストールしてないルート証明書へアクセスする場合はどうなるでしょうか？</p>\n<p><img src=\"https://i.imgur.com/y0ul2Eg.png\" alt=\"img\"></p>\n<p>はい。当然ダメですね..。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(･ω･乂)\n(乂･ω･)\n(･ω･乂)\n(乂･ω･)</code></pre></div>\n<p><a href=\"https://blog.tubone-project24.xyz\" target=\"_blank\" rel=\"noopener noreferrer\">blog.tubone-project24.xyz</a>のサーバー証明書の中間証明書から先のルート証明書はルート証明書Bなので<strong>自端末に存在しないルート証明書</strong>になってしまいます。</p>\n<p>これを解決するのが<strong>クロスルート証明書</strong>というわけです。</p>\n<p><img src=\"https://i.imgur.com/9fwz8jM.png\" alt=\"img\"></p>\n<p>クロスルート証明書を使った場合、仮にあなたの端末にルート証明書Aしかない場合、<a href=\"https://blog.tubone-project24.xyz\" target=\"_blank\" rel=\"noopener noreferrer\">blog.tubone-project24.xyz</a>へのアクセスをするとサーバー証明書から中間証明書をまずチェーンします。</p>\n<p>そのまま上のルート証明書を見てもこちら残念ながらさっきと同じなのですが中間証明書に紐づくクロスルート証明書というものがありこちらが内容はルート証明書Bと同じながらルート証明書Aで署名されている形を取ります。すると、クロスルート証明書からルート証明書Aをたどって検証が完了するわけです。</p>\n<p>えっ？中間証明書を複数のルート証明書で署名するみたいなそんなことできるんですか..?という疑問が出たそこの君！優秀ですね。</p>\n<p>クロスルート方式を利用する場合には、中間証明書とクロスルート設定証明書を連結させて1つにした中間証明書として利用することで上記の通りになります。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">—–BEGIN CERTIFICATE—–\n  中間CA証明書の文字列\n—–END CERTIFICATE—–\n—–BEGIN CERTIFICATE—–\n  クロスルート設定用証明書の文字列\n—–END CERTIFICATE—–</code></pre></div>\n<p>レガシー端末や組み込み系ではこのような方法を利用してルート証明書の管理をしているわけです。</p>\n<h2 id=\"話を戻してdatadog\" style=\"position:relative;\"><a href=\"#%E8%A9%B1%E3%82%92%E6%88%BB%E3%81%97%E3%81%A6datadog\" aria-label=\"話を戻してdatadog permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>話を戻してDatadog</h2>\n<p>さて話を戻してDatadogのコードに移ります。</p>\n<p>さきほども申したとおり、通常ルート証明書はPC側のアップデートに追従して更新されていくのでそこまで気になりませんが、この手の<strong>エージェントやJDK</strong>などは独自にルート証明書を抱えていて、それを使うようにする場合も多いです。</p>\n<p>脱線しますが、たとえばJDKとかではJavaが使うルート証明書を<strong>cacerts</strong>に格納します。</p>\n<p>例えば<strong>OpenJDK1.8.0</strong>の場合、Macなら、</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">lib/jvm/java-1.8.0-openjdk-1.8.0.201.b09-2.el7_6.x86_64/jre/lib/security/cacerts</code></pre></div>\n<p>にcacertsがいます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ keytool -keystore cacerts -list -v</code></pre></div>\n<p>というコマンドでJDKにインストールされているルート証明書が確認できます。</p>\n<p>なんか回りくどいですがこうすることでJavaプロセス単体でSSL通信の検証ができるわけで<strong>30億のデバイスで走る</strong>ことができるわけですね。</p>\n<p><img src=\"https://i.imgur.com/zKzF2Wa.jpg\" alt=\"img\"></p>\n<blockquote>\n<p>30億のデバイスで走るのに自分の環境では走らないJava</p>\n</blockquote>\n<p>(とか揶揄されたことありましたね。余談です。)</p>\n<p>DatadogもまさにJDKと同じような実装でした。</p>\n<p>ちなみに今回有効期限の切れた証明書はDatadogのサイト<a href=\"https://docs.datadoghq.com/agent/faq/certificate_verify_failed-error/\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>CERTIFICATE_VERIFY_FAILED error</strong>\n</a>や本事象のdatadog-agent修正PRの<a href=\"https://github.com/DataDog/dd-agent/pull/3882\" target=\"_blank\" rel=\"noopener noreferrer\">Update the Sectigo / USERTrust CA Certificate #3882</a>に書いてある情報から判明しており、<a href=\"https://support.sectigo.com/articles/Knowledge/Sectigo-AddTrust-External-CA-Root-Expiring-May-30-2020\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Sectigo AddTrust External CA Root</strong></a>が<strong>2020/5/30</strong>に失効しました。</p>\n<h2 id=\"datadog-agentはtornadoを使っている\" style=\"position:relative;\"><a href=\"#datadog-agent%E3%81%AFtornado%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B\" aria-label=\"datadog agentはtornadoを使っている permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Datadog AgentはTornadoを使っている</h2>\n<p>そもそも<a href=\"https://docs.datadoghq.com/ja/agent/\" target=\"_blank\" rel=\"noopener noreferrer\">Datadog Agent</a>というのはEC2などの監視対象サーバーにサービスの形で常駐させるとCPUやディスクのメトリックを取得し、Datadogに送信してくれるやつです。</p>\n<p>Zabbix AgentのDatadog版ですね。</p>\n<p>Datadogへメトリックを送信しなければいけないので当然インターネット越しに通信をしなければいけません。もちろん通信はSSLで暗号化されてしかるべきです。</p>\n<p>これは知らなかったのですがDatadog Agentって<a href=\"https://www.tornadoweb.org/en/stable/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">Tornado</a>を使っています。</p>\n<p>datadog-agent(version 5)をサービス起動するとlocalhostのport17123にTornadoのサーバーが立ち上がります。</p>\n<p><img src=\"https://i.imgur.com/Z58AGfp.jpg\" alt=\"img\"></p>\n<p>この**Tornadoサーバー(Forwarder)**にmetricsのcollectorが収集した情報を投げ込むことでDatadogサーバーへmetricsをForwardingしてくれる仕組みのようです。</p>\n<p>こうすることでDatadog謹製のcollectorだけでなくDogStatusD経由でcustom metricsも効率的に収集できます。</p>\n<p><img src=\"https://i.imgur.com/q1Ouk6Y.png\" alt=\"img\"></p>\n<p>詳しくはdatadog-agentのGitHub<a href=\"https://github.com/DataDog/dd-agent\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/DataDog/dd-agent</a>や、</p>\n<p><a href=\"https://docs.datadoghq.com/ja/agent/basic_agent_usage/?tab=agentv5\" target=\"_blank\" rel=\"noopener noreferrer\">Agent アーキテクチャ</a></p>\n<p>をご覧ください。</p>\n<p>さてこのTornadoで実際にDatadogと通信しているところはシーケンス図上の<strong>Tornado HttpClient</strong>、正確には<a href=\"https://www.tornadoweb.org/en/stable/httpclient.html\" target=\"_blank\" rel=\"noopener noreferrer\">Asynchronous HTTP client</a>になるわけですが、datadog-agentの作りとして、Asynchronous HTTP clientに独自でca_certsを設定し、Datadogとの通信に<strong>datadog-cert.pem</strong>というクロスルート証明書を使っております。</p>\n<p>では<strong>datadog-cert.pem</strong>を見てみましょう。</p>\n<p>確認にはOpenSSLコマンドが利用できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ openssl x509 -text -noout -in datadog-cert.pem                                                                                   \nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 1 (0x1)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C = SE, O = AddTrust AB, OU = AddTrust External TTP Network, CN = AddTrust External CA Root\n        Validity\n            Not Before: May 30 10:48:38 2000 GMT\n            Not After : May 30 10:48:38 2020 GMT\n        Subject: C = SE, O = AddTrust AB, OU = AddTrust External TTP Network, CN = AddTrust External CA Root\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:b7:f7:1a:33:e6:f2:00:04:2d:39:e0:4e:5b:ed:\n                    1f:bc:6c:0f:cd:b5:fa:23:b6:ce:de:9b:11:33:97:\n                    a4:29:4c:7d:93:9f:bd:4a:bc:93:ed:03:1a:e3:8f:\n                    cf:e5:6d:50:5a:d6:97:29:94:5a:80:b0:49:7a:db:\n                    2e:95:fd:b8:ca:bf:37:38:2d:1e:3e:91:41:ad:70:\n                    56:c7:f0:4f:3f:e8:32:9e:74:ca:c8:90:54:e9:c6:\n                    5f:0f:78:9d:9a:40:3c:0e:ac:61:aa:5e:14:8f:9e:\n                    87:a1:6a:50:dc:d7:9a:4e:af:05:b3:a6:71:94:9c:\n                    71:b3:50:60:0a:c7:13:9d:38:07:86:02:a8:e9:a8:\n                    69:26:18:90:ab:4c:b0:4f:23:ab:3a:4f:84:d8:df:\n                    ce:9f:e1:69:6f:bb:d7:42:d7:6b:44:e4:c7:ad:ee:\n                    6d:41:5f:72:5a:71:08:37:b3:79:65:a4:59:a0:94:\n                    37:f7:00:2f:0d:c2:92:72:da:d0:38:72:db:14:a8:\n                    45:c4:5d:2a:7d:b7:b4:d6:c4:ee:ac:cd:13:44:b7:\n                    c9:2b:dd:43:00:25:fa:61:b9:69:6a:58:23:11:b7:\n                    a7:33:8f:56:75:59:f5:cd:29:d7:46:b7:0a:2b:65:\n                    b6:d3:42:6f:15:b2:b8:7b:fb:ef:e9:5d:53:d5:34:\n                    5a:27\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Subject Key Identifier:\n                AD:BD:98:7A:34:B4:26:F7:FA:C4:26:54:EF:03:BD:E0:24:CB:54:1A\n            X509v3 Key Usage:\n                Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Authority Key Identifier:\n                keyid:AD:BD:98:7A:34:B4:26:F7:FA:C4:26:54:EF:03:BD:E0:24:CB:54:1A\n                DirName:/C=SE/O=AddTrust AB/OU=AddTrust External TTP Network/CN=AddTrust External CA Root\n                serial:01\n    Signature Algorithm: sha1WithRSAEncryption\n         b0:9b:e0:85:25:c2:d6:23:e2:0f:96:06:92:9d:41:98:9c:d9:\n         84:79:81:d9:1e:5b:14:07:23:36:65:8f:b0:d8:77:bb:ac:41:\n         6c:47:60:83:51:b0:f9:32:3d:e7:fc:f6:26:13:c7:80:16:a5:\n         bf:5a:fc:87:cf:78:79:89:21:9a:e2:4c:07:0a:86:35:bc:f2:\n         de:51:c4:d2:96:b7:dc:7e:4e:ee:70:fd:1c:39:eb:0c:02:51:\n         14:2d:8e:bd:16:e0:c1:df:46:75:e7:24:ad:ec:f4:42:b4:85:\n         93:70:10:67:ba:9d:06:35:4a:18:d3:2b:7a:cc:51:42:a1:7a:\n         63:d1:e6:bb:a1:c5:2b:c2:36:be:13:0d:e6:bd:63:7e:79:7b:\n         a7:09:0d:40:ab:6a:dd:8f:8a:c3:f6:f6:8c:1a:42:05:51:d4:\n         45:f5:9f:a7:62:21:68:15:20:43:3c:99:e7:7c:bd:24:d8:a9:\n         91:17:73:88:3f:56:1b:31:38:18:b4:71:0f:9a:cd:c8:0e:9e:\n         8e:2e:1b:e1:8c:98:83:cb:1f:31:f1:44:4c:c6:04:73:49:76:\n         60:0f:c7:f8:bd:17:80:6b:2e:e9:cc:4c:0e:5a:9a:79:0f:20:\n         0a:2e:d5:9e:63:26:1e:55:92:94:d8:82:17:5a:7b:d0:bc:c7:\n         8f:4e:86:04</code></pre></div>\n<p>﻿\n確かに有効期限は切れてますね。</p>\n<p>sectigoのサイトによい図があったので拝借しますが、このようなチェーンをする証明書のようです。</p>\n<p><img src=\"https://i.imgur.com/oMJmF1b.jpg\" alt=\"img\"></p>\n<p>Modern Browser側の動きでは最新の<strong>USERTrust RSA</strong>のルート証明書から検証ができますが、Legacy(Datadogもこっち)Browserは<strong>AddTrust External CA Root</strong>までチェーンしております。</p>\n<p>上記のdatadog-cert.pemのCN(CommonName)を見ても確かにAddTrust External CA Rootですね。</p>\n<p>よって2020/5/30～SSL通信できなくなってしまったというわけです。</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>証明書周りでこれほど調べたのは久しぶりです...。</p>\n<h2 id=\"追記\" style=\"position:relative;\"><a href=\"#%E8%BF%BD%E8%A8%98\" aria-label=\"追記 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>追記</h2>\n<p>JDKにインストールされているルート証明書も気になったので調べたら、OpenJDK9(JEP319)のルート証明書にAddTrust External CA Rootがいました。</p>\n<p><img src=\"https://i.imgur.com/yn4VUB3.png\" alt=\"img\"></p>\n<p><a href=\"https://openjdk.java.net/jeps/319\" target=\"_blank\" rel=\"noopener noreferrer\">https://openjdk.java.net/jeps/319</a></p>\n<p>ルート証明書の罠に引っかからないようにみんなも気を付けよう！</p>","fields":{"slug":"2020/06/01/ssl-cert"},"frontmatter":{"tags":["Datadog","SSL"],"templateKey":"blog-post","slug":"2020/06/01/ssl-cert","id":null,"title":"クロスルート証明書について考えてみる","url":"2020/06/01/ssl-cert","date":"2020-06-01T14:51:53.352Z","description":"クロスルート証明書について考えてみようかなと思ってます。","headerImage":"https://i.imgur.com/iIZqvaV.jpg","year":"2020","month":"06"}}},{"node":{"id":"73d136fe-add5-5093-be03-021c1c90980d","html":"<p>流行から遅れに遅れ初めて見ました。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#%E8%9C%82%E3%81%AB%E5%88%BA%E3%81%95%E3%82%8C%E3%81%9F%E3%82%82%E3%81%AE%E3%81%AE%E9%9B%91%E8%8D%89%E3%82%92%E5%85%A8%E9%83%A8%E5%A3%B2%E3%81%A3%E3%81%A6%E3%81%97%E3%81%BE%E3%81%84%E3%81%BE%E3%81%97%E3%81%9F\">蜂に刺されたものの、雑草を全部売ってしまいました</a></li>\n</ul>\n</div>\n<h2 id=\"蜂に刺されたものの雑草を全部売ってしまいました\" style=\"position:relative;\"><a href=\"#%E8%9C%82%E3%81%AB%E5%88%BA%E3%81%95%E3%82%8C%E3%81%9F%E3%82%82%E3%81%AE%E3%81%AE%E9%9B%91%E8%8D%89%E3%82%92%E5%85%A8%E9%83%A8%E5%A3%B2%E3%81%A3%E3%81%A6%E3%81%97%E3%81%BE%E3%81%84%E3%81%BE%E3%81%97%E3%81%9F\" aria-label=\"蜂に刺されたものの雑草を全部売ってしまいました permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>蜂に刺されたものの、雑草を全部売ってしまいました</h2>\n<p>とほほ。</p>\n<p><img src=\"https://i.imgur.com/OhnF4Oh.jpg\" alt=\"img\"></p>","fields":{"slug":"2020/05/31/atsumori"},"frontmatter":{"tags":["ぼやき","あつ森"],"templateKey":"blog-post","slug":"2020/05/31/atsumori","id":null,"title":"あつもりを始めてしまいました","url":"2020/05/31/atsumori","date":"2020-05-31T13:14:08.843Z","description":"あつもりを始めてしまいました","headerImage":"https://i.imgur.com/OhnF4Oh.jpg","year":"2020","month":"05"}}},{"node":{"id":"c8fbdfd5-9b1f-50f0-91c6-6f1156ee2f46","html":"<p>家にいることが多い昨今なので、デスクトップ環境を作ってみました。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#2020%E5%B9%B4%E3%81%AE%E3%83%87%E3%82%B9%E3%82%AF%E3%83%88%E3%83%83%E3%83%97%E3%81%AF%E3%81%93%E3%82%8C%E3%81%A0\">2020年のデスクトップはこれだ！</a></li>\n</ul>\n</div>\n<h2 id=\"2020年のデスクトップはこれだ\" style=\"position:relative;\"><a href=\"#2020%E5%B9%B4%E3%81%AE%E3%83%87%E3%82%B9%E3%82%AF%E3%83%88%E3%83%83%E3%83%97%E3%81%AF%E3%81%93%E3%82%8C%E3%81%A0\" aria-label=\"2020年のデスクトップはこれだ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2020年のデスクトップはこれだ！</h2>\n<p><img src=\"https://i.imgur.com/F5IxtKf.jpg\" alt=\"img\"></p>\n<p>ギラギラさせてみました。</p>","fields":{"slug":"2020/05/25/desktop"},"frontmatter":{"tags":["ぼやき","desktop"],"templateKey":"blog-post","slug":"2020/05/25/desktop","id":null,"title":"2020年のデスクトップはこれだ！かっこいい","url":"2020/05/25/desktop","date":"2020-05-24T16:34:46.366Z","description":"2020年のデスクトップを作ってみました。という自慢","headerImage":"https://i.imgur.com/F5IxtKf.jpg","year":"2020","month":"05"}}},{"node":{"id":"3284719e-393b-59c9-8697-f345ef256b1a","html":"<p>Raspberry PIを使って家のガジュマルを枯らさないようにします。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#%E3%82%AC%E3%82%B8%E3%83%A5%E3%83%9E%E3%83%AB\">ガジュマル</a></li>\n<li><a href=\"#raspberry-pi-zero-wh\">Raspberry PI Zero WH</a></li>\n<li><a href=\"#%E5%9C%9F%E5%A3%8C%E3%82%BB%E3%83%B3%E3%82%B5%E3%83%BC\">土壌センサー</a></li>\n<li><a href=\"#dht11\">DHT11</a></li>\n<li><a href=\"#%E3%83%95%E3%82%A9%E3%83%88%E3%83%AC%E3%82%B8%E3%82%B9%E3%82%BF\">フォトレジスタ</a></li>\n<li><a href=\"#adc0832\">ADC0832</a></li>\n<li><a href=\"#%E6%A7%8B%E6%88%90\">構成</a></li>\n<li><a href=\"#%E3%82%B3%E3%83%BC%E3%83%89\">コード</a></li>\n<li><a href=\"#%E5%8B%95%E3%81%8B%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B\">動かしてみる</a></li>\n<li><a href=\"#%E7%B5%90%E8%AB%96\">結論</a></li>\n</ul>\n</div>\n<h2 id=\"ガジュマル\" style=\"position:relative;\"><a href=\"#%E3%82%AC%E3%82%B8%E3%83%A5%E3%83%9E%E3%83%AB\" aria-label=\"ガジュマル permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ガジュマル</h2>\n<p>我が家には<strong>ガジュマル</strong>が観葉植物としています。</p>\n<p><img src=\"https://i.imgur.com/mDq4FWO.jpg\" alt=\"img\"></p>\n<p>ガジュマルには日光がある程度必要なので窓際に置いているのですが、水やりを忘れがちです。</p>\n<p>何度も枯らしかけたので、Raspberry PIを使って水やり管理をできるようにします。</p>\n<p>ついでに余っていた温度計やフォトレジスタも組み込んで観葉植物の管理システムを作ってみようかと思います。</p>\n<h2 id=\"raspberry-pi-zero-wh\" style=\"position:relative;\"><a href=\"#raspberry-pi-zero-wh\" aria-label=\"raspberry pi zero wh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Raspberry PI Zero WH</h2>\n<p>今回は余っていたRaspberry PI Zero WHを使います。</p>\n<p>性能はそこまでよくないですが、低電力でコンパクトなのでこういった用途には向いていると思います。</p>\n<p><img src=\"https://i.imgur.com/GmYDK0C.jpg\" alt=\"img\"></p>\n<p>中身はこんな感じです。</p>\n<p>インターフェースはHDMI(ちっさいの)とUSB Microと電源供給用のUSB Micro、ディスク代わりのMicroSD、カメラモジュールです。</p>\n<p>不要だと思いつつも余っていたのでヒートシンクをつけてます。</p>\n<p><img src=\"https://i.imgur.com/k4R1znI.jpg\" alt=\"img\"></p>\n<h2 id=\"土壌センサー\" style=\"position:relative;\"><a href=\"#%E5%9C%9F%E5%A3%8C%E3%82%BB%E3%83%B3%E3%82%B5%E3%83%BC\" aria-label=\"土壌センサー permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>土壌センサー</h2>\n<p>土壌センサーはAmazonで購入しました。</p>\n<p><a href=\"https://amzn.to/2URR8D5\" target=\"_blank\" rel=\"noopener noreferrer\">HiLetgo 5個セット LM393 3.3V-5V土壌水分検出センサー土壌水分センサーArduino自動散水システムロボット用の湿度計検出ロボットスマートカー [並行輸入品]</a></p>\n<p>5個入りで￥550\nでした。安い。</p>\n<p><img src=\"https://i.imgur.com/amaoydT.jpg\" alt=\"img\"></p>\n<h2 id=\"dht11\" style=\"position:relative;\"><a href=\"#dht11\" aria-label=\"dht11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DHT11</h2>\n<p>温度と湿度は<strong>DHT11</strong>を使います。電子工作の有名どころですね。</p>\n<p>デジタル接続ができるのでA/Dに通さなくていい優れものです。</p>\n<p>精度はわかりません。趣味で作るものなのであまり気にしなくていいと思います。</p>\n<p><img src=\"https://i.imgur.com/JvjiUuD.jpg\" alt=\"img\"></p>\n<h2 id=\"フォトレジスタ\" style=\"position:relative;\"><a href=\"#%E3%83%95%E3%82%A9%E3%83%88%E3%83%AC%E3%82%B8%E3%82%B9%E3%82%BF\" aria-label=\"フォトレジスタ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>フォトレジスタ</h2>\n<p>フォトレジスタとは光が当たると抵抗が下がるやつです。</p>\n<p><img src=\"https://i.imgur.com/kSjQyey.jpg\" alt=\"img\"></p>\n<h2 id=\"adc0832\" style=\"position:relative;\"><a href=\"#adc0832\" aria-label=\"adc0832 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ADC0832</h2>\n<p>A/Dのコンバータは<strong>ADC0832</strong>を使いました。</p>\n<p>なかなかデータシートが出てこず大変でしたがこちらです。</p>\n<p><a href=\"http://www.ti.com/lit/ds/symlink/adc0832-n.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">データシート</a></p>\n<p><img src=\"https://i.imgur.com/msMkGJb.jpg\" alt=\"img\"></p>\n<p>8digitの隣にあるチップがADC0832です。</p>\n<h2 id=\"構成\" style=\"position:relative;\"><a href=\"#%E6%A7%8B%E6%88%90\" aria-label=\"構成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>構成</h2>\n<p>今回は土壌センサーとフォトレジスタと2つアナログがありますのでADC0832のチャンネルをフルに2チャンネル使う構成にしてます。</p>\n<p>また、土壌センサーはずっと電力を印加していると電気分解が起きてセンサーがボロボロに<strong>腐食</strong>してしまうため、VCCはGPIOで制御して取るようにしてます。</p>\n<p><img src=\"https://i.imgur.com/bwjrBtF.png\" alt=\"img\"></p>\n<p><img src=\"https://i.imgur.com/TwBitlX.jpg\" alt=\"img\"></p>\n<h2 id=\"コード\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%BC%E3%83%89\" aria-label=\"コード permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コード</h2>\n<p>今回はセンサーをAPI化して別システムからリクエストを投げることで計測を行なうシステムにしようと思うのでAPIサーバー化します。</p>\n<p>APIサーバー化には今回は<a href=\"https://falconframework.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Falcon</a>を使ってみました。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> falcon\n<span class=\"token keyword\">import</span> RPi<span class=\"token punctuation\">.</span>GPIO <span class=\"token keyword\">as</span> GPIO\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> ADC0832\n<span class=\"token keyword\">import</span> Adafruit_DHT\n\n<span class=\"token comment\"># Excitation Voltage for sensors</span>\npin <span class=\"token operator\">=</span> <span class=\"token number\">15</span>\n\n<span class=\"token comment\"># initialize GPIO</span>\nGPIO<span class=\"token punctuation\">.</span>setwarnings<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># Excitation Voltage</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">output_fromGPIO</span><span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    GPIO<span class=\"token punctuation\">.</span>setmode<span class=\"token punctuation\">(</span>GPIO<span class=\"token punctuation\">.</span>BOARD<span class=\"token punctuation\">)</span>\n    GPIO<span class=\"token punctuation\">.</span>setup<span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">,</span> GPIO<span class=\"token punctuation\">.</span>OUT<span class=\"token punctuation\">)</span>\n    GPIO<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span>\n    sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_temperature</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        output_fromGPIO<span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        _<span class=\"token punctuation\">,</span> temperature <span class=\"token operator\">=</span> Adafruit_DHT<span class=\"token punctuation\">.</span>read_retry<span class=\"token punctuation\">(</span>Adafruit_DHT<span class=\"token punctuation\">.</span>DHT11<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> temperature\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        output_fromGPIO<span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_humidity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        output_fromGPIO<span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        humidity<span class=\"token punctuation\">,</span> _ <span class=\"token operator\">=</span> Adafruit_DHT<span class=\"token punctuation\">.</span>read_retry<span class=\"token punctuation\">(</span>Adafruit_DHT<span class=\"token punctuation\">.</span>DHT11<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> humidity\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        output_fromGPIO<span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_moisture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        ADC0832<span class=\"token punctuation\">.</span>setup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        output_fromGPIO<span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            moisture <span class=\"token operator\">=</span> ADC0832<span class=\"token punctuation\">.</span>getResult<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> moisture <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> moisture\n            sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        ADC0832<span class=\"token punctuation\">.</span>destroy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        output_fromGPIO<span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">,</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_light</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        ADC0832<span class=\"token punctuation\">.</span>setup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        output_fromGPIO<span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">,</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        light <span class=\"token operator\">=</span> ADC0832<span class=\"token punctuation\">.</span>getResult<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">80</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>light<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> light <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            light <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">return</span> light\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        ADC0832<span class=\"token punctuation\">.</span>destroy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        output_fromGPIO<span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">,</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CheckHumidity</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">on_get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        msg <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"key\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"humidity\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> get_humidity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        resp<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CheckTemperature</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">on_get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        msg <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"key\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"temperature\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> get_temperature<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        resp<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CheckMoisture</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">on_get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        msg <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"key\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"moisture\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> get_moisture<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        resp<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CheckLight</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">on_get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        msg <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"key\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"light\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> get_light<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        resp<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n\n\napp <span class=\"token operator\">=</span> falcon<span class=\"token punctuation\">.</span>API<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>add_route<span class=\"token punctuation\">(</span><span class=\"token string\">\"/humidity\"</span><span class=\"token punctuation\">,</span> CheckHumidity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>add_route<span class=\"token punctuation\">(</span><span class=\"token string\">\"/temperature\"</span><span class=\"token punctuation\">,</span> CheckTemperature<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>add_route<span class=\"token punctuation\">(</span><span class=\"token string\">\"/moisture\"</span><span class=\"token punctuation\">,</span> CheckMoisture<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>add_route<span class=\"token punctuation\">(</span><span class=\"token string\">\"/light\"</span><span class=\"token punctuation\">,</span> CheckLight<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">from</span> wsgiref <span class=\"token keyword\">import</span> simple_server\n    httpd <span class=\"token operator\">=</span> simple_server<span class=\"token punctuation\">.</span>make_server<span class=\"token punctuation\">(</span><span class=\"token string\">\"0.0.0.0\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8000</span><span class=\"token punctuation\">,</span> app<span class=\"token punctuation\">)</span>\n    httpd<span class=\"token punctuation\">.</span>serve_forever<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>8000ポートでAPIサーバーが立ち上がり、GET APIでほしいセンサー情報にアクセスできます。</p>\n<h2 id=\"動かしてみる\" style=\"position:relative;\"><a href=\"#%E5%8B%95%E3%81%8B%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B\" aria-label=\"動かしてみる permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>動かしてみる</h2>\n<p>ガジュマルの植木鉢に設置してみます。</p>\n<p><img src=\"https://i.imgur.com/2J8rx9K.jpg\" alt=\"img\"></p>\n<p>Zabbixのexternal scriptsを使ってAPIから情報を取得し、グラフにしてみました。</p>\n<p><img src=\"https://i.imgur.com/tHoBvbQ.png\" alt=\"img\"></p>\n<p>うまく取得できました。</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>ここまでのコードはZabbixのテンプレート含めGitHubに公開してます。</p>\n<p><a href=\"https://github.com/tubone24/raspi_plant_checker\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/tubone24/raspi_plant_checker</a></p>\n<p>これで枯らすことなく育てることができますね！</p>","fields":{"slug":"2020/05/10/plant-check"},"frontmatter":{"tags":["電子工作","Raspberry PI"],"templateKey":"blog-post","slug":"2020/05/10/plant-check","id":null,"title":"Raspberry PIを使って植物の水やり監視システムを作る","url":"2020/05/10/plant-check","date":"2020-05-10T06:29:01.182Z","description":"Raspberry PIを使って植物の水やり監視システムを作る","headerImage":"https://i.imgur.com/amaoydT.jpg","year":"2020","month":"05"}}},{"node":{"id":"3f320438-4751-5013-b031-adad98aefd91","html":"<p>Jetson Nanoを買ってから機械学習熱が再来したので頑張ります。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#gcgan%E3%81%A7%E7%BE%8E%E5%B0%91%E5%A5%B3%E3%82%AD%E3%83%A3%E3%83%A9%E7%84%A1%E9%99%90%E5%A2%97%E6%AE%96\">GCGANで美少女キャラ無限増殖</a></p>\n</li>\n<li>\n<p><a href=\"#gan%E3%81%AE%E9%9D%A9%E5%91%BD%E5%85%90-stylegan\">GANの革命児 StyleGAN</a></p>\n<ul>\n<li><a href=\"#progressive-growing\">Progressive Growing</a></li>\n<li><a href=\"#%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB%E5%A4%89%E6%8F%9B-style-transfer\">スタイル変換 Style Transfer</a></li>\n<li><a href=\"#%E6%BD%9C%E5%9C%A8%E5%A4%89%E6%95%B0%E3%81%8B%E3%82%89%E7%94%BB%E5%83%8F%E3%82%92%E4%BD%9C%E3%82%89%E3%81%9A%E3%81%A1%E3%82%83%E3%82%93%E3%81%A8style%E3%82%92n%E6%9C%AC%E5%8A%A0%E3%81%88%E5%85%A5%E3%82%8C%E3%82%8D\">潜在変数から画像を作らずちゃんとStyleをn本加え入れろ～</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E6%85%A3%E3%82%8C%E3%81%AA%E3%81%84%E8%A7%A3%E8%AA%AC%E3%81%AF%E3%82%82%E3%81%86%E3%82%84%E3%82%89%E3%81%AA%E3%81%84%E6%9C%AC%E9%A1%8C%E3%81%AB%E6%88%BB%E3%82%8A%E3%81%BE%E3%81%99\">慣れない解説はもうやらない、本題に戻ります</a></p>\n</li>\n<li>\n<p><a href=\"#making-anime-faces-with-stylegan\">Making Anime Faces With StyleGAN</a></p>\n</li>\n<li>\n<p><a href=\"#stylegan%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\">StyleGANを使ってみる</a></p>\n</li>\n<li>\n<p><a href=\"#a%E3%81%8B%E3%82%89b%E3%81%AB%E7%94%BB%E5%83%8F%E3%82%92%E9%81%B7%E7%A7%BBtransition%E3%81%95%E3%81%9B%E3%82%8B\">AからBに画像を遷移(Transition)させる</a></p>\n</li>\n<li>\n<p><a href=\"#stylegan2%E3%81%A7%E3%82%82%E7%BE%8E%E5%B0%91%E5%A5%B3%E7%84%A1%E9%99%90%E5%A2%97%E6%AE%96\">StyleGAN2でも美少女無限増殖</a></p>\n<ul>\n<li><a href=\"#%E3%81%8A%E3%82%84%E5%8B%95%E3%81%8B%E3%81%AA%E3%81%84\">おや!?動かない。</a></li>\n<li><a href=\"#%E3%81%BE%E3%81%A0%E3%81%86%E3%81%BE%E3%81%8F%E5%8B%95%E3%81%8B%E3%81%AA%E3%81%84\">まだうまく動かない</a></li>\n<li><a href=\"#nvcc-error--cudafe-died-with-status-0xc0000005-access_violation\">nvcc error : 'cudafe++' died with status 0xC0000005 (ACCESS_VIOLATION)</a></li>\n<li><a href=\"#3%E5%BA%A6%E7%9B%AE%E3%81%AE%E6%AD%A3%E7%9B%B4\">3度目の正直</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E7%B5%90%E8%AB%96\">結論</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%8F%82%E8%80%83\">参考</a></p>\n</li>\n</ul>\n</div>\n<h2 id=\"gcganで美少女キャラ無限増殖\" style=\"position:relative;\"><a href=\"#gcgan%E3%81%A7%E7%BE%8E%E5%B0%91%E5%A5%B3%E3%82%AD%E3%83%A3%E3%83%A9%E7%84%A1%E9%99%90%E5%A2%97%E6%AE%96\" aria-label=\"gcganで美少女キャラ無限増殖 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GCGANで美少女キャラ無限増殖</h2>\n<p>GAN(Generative Adversarial Networks)とは日本語では<strong>敵対的生成ネットワーク</strong>と呼ばれる機械学習フレームワークで、現実には存在しないそれっぽい画像を生成する方法などで採用されています。</p>\n<p>GANの詳しい仕組みについては専門家にゆだねるとしてフェイク画像を生成する<strong>Generator</strong>とそれがフェイクかどうか判断する<strong>Discriminator</strong>の2種類が互いに勝負しあうことで画像生成の精度を高くしていく、という感じです。</p>\n<p>いらすとやでイメージを作ってみました。</p>\n<p><img src=\"https://i.imgur.com/SVZB0Wi.png\" alt=\"img\"></p>\n<p>必死に偽物の言動を本物っぽく言う不審者と、嘘を見破る警察官（探偵）という構図が比喩としては一般的です。</p>\n<p>GANについては、実は昔(今から2年前)録画サーバーで全アニメを録画していた頃、その動画ファイルから64×64のアニメ顔画像データ58000件を抽出し、それを使ってGAN(正確には<strong>DCGAN</strong>)でアニメ顔を生成する活動に取り組んだことがあります。</p>\n<p>DCGANについても詳細は専門家に任せます。<a href=\"https://arxiv.org/pdf/1511.06434.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">これ</a>が論文です。</p>\n<p>しっかり論文が読みこなせるマンになりたい..。</p>\n<p>端的に言えばGANの学習の不安定さを<strong>畳み込み層</strong>や<strong>Batch Normalization</strong>、tanh、 Leaky ReLUなどのReLU以外の<strong>活性化関数</strong>を採用したりして学習の安定化を図ってます。</p>\n<p>当時はChainerの<a href=\"https://github.com/chainer/chainer/tree/master/examples/dcgan\" target=\"_blank\" rel=\"noopener noreferrer\">Example</a>を改造して学習から推論をやりましたがあまりうまくいきませんでした。</p>\n<p>その時作ったモデルの結果がこちらです。</p>\n<iframe loading=\"lazy\" width=\"200\" height=\"150\" src=\"https://www.youtube.com/embed/FhBeuX4cYoE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"Chainer DCGAN Animeface\"></iframe>\n<p>解像度が64×64なので、うーん大したことありませんね。</p>\n<p>というより家のPC程度のGPUでは限界がありそうなことが分かったので美少女キャラを大量生成して薔薇色の生活空間を作る計画はかないませんでした。</p>\n<p>しかし、GCGANで美少女無限増殖はGANの基礎やアニメ顔の抜き出し方、OpenCVの使い方など学ぶことは多かったような気がします。</p>\n<h2 id=\"ganの革命児-stylegan\" style=\"position:relative;\"><a href=\"#gan%E3%81%AE%E9%9D%A9%E5%91%BD%E5%85%90-stylegan\" aria-label=\"ganの革命児 stylegan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GANの革命児 StyleGAN</h2>\n<p>あきらめていた美少女無限増殖ですが、最近<a href=\"https://blog.tubone-project24.xyz/2020/04/21/jetson-nano\" target=\"_blank\" rel=\"noopener noreferrer\">Jetson Nanoを買った</a>のでせっかくなのでまたGANに挑戦しようと思いました。</p>\n<p>さて、最近GANなんて触っていなかったので気が付かなかったのですが、<a href=\"https://arxiv.org/pdf/1812.04948.pdf\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>StyleGAN</strong></a>というのが盛り上がっている（いた？）と知ります。</p>\n<p>まずは下記の画像を見てください。</p>\n<p><img src=\"https://i.imgur.com/9mP8aH2.jpg\" alt=\"img\">\n(<a href=\"https://en.wikipedia.org/wiki/StyleGAN\" target=\"_blank\" rel=\"noopener noreferrer\">https://en.wikipedia.org/wiki/StyleGAN</a>)</p>\n<p>この美女のポートレート、どこかの女優さんかと思いきやStyleGANで生成されたらしいです。</p>\n<p>いわれてみれば後ろ髪が不自然な気もしますが、これはわかりませんね。すごい。</p>\n<p>StyleGANを作ったのはあの<a href=\"https://www.nvidia.com/ja-jp/\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>NVIDIA</strong></a>、つまりGPU作成お化けが作ったGANで、GPUのパワーをふんだんに使ったネットワークとして知られています。</p>\n<p>StyleGANの詳しいことは専門家に任せるとして、さらっとエクストリーム解説頑張ってみたいと思います。</p>\n<h3 id=\"progressive-growing\" style=\"position:relative;\"><a href=\"#progressive-growing\" aria-label=\"progressive growing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Progressive Growing</h3>\n<p>GANで1024x1024などの高解像度画像を生成するのは至難の業です。</p>\n<p>高解像度の画像を学習させるとモデルの評価指数多すぎて、Generatorが生み出す画像が<strong>これじゃない...</strong> 感満載な画像ができることが知られてます。</p>\n<p>そこでStyleGANは高解像度の画像を生成するために<strong>Progressive Growing</strong>という手法を採用しました。</p>\n<p><img src=\"https://i.imgur.com/bTE91Hx.png\" alt=\"img\">\n(<a href=\"https://arxiv.org/abs/1710.10196\" target=\"_blank\" rel=\"noopener noreferrer\">Progressive Growing of GANs for Improved Quality, Stability, and Variation</a>)</p>\n<p>画像生成プロセスを<strong>一気に高解像度の画像を生成するのではなく低解像度から漸近的(≒徐々に近づける)に高解像度の画像を成長させる</strong>手法になります。</p>\n<p>この手法はStyleGANの前身研究の<a href=\"https://arxiv.org/abs/1710.10196\" target=\"_blank\" rel=\"noopener noreferrer\">PGGAN(Progressive Growing of GANs)</a>の成果物です。</p>\n<h3 id=\"スタイル変換-style-transfer\" style=\"position:relative;\"><a href=\"#%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB%E5%A4%89%E6%8F%9B-style-transfer\" aria-label=\"スタイル変換 style transfer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>スタイル変換 Style Transfer</h3>\n<p>もう一つの特徴はスタイル変換(<a href=\"https://www.cv-foundation.org/openaccess/content_cvpr_2016/papers/Gatys_Image_Style_Transfer_CVPR_2016_paper.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Style Transfer</a>)と呼ばれる技術を使っていることです。</p>\n<p><img src=\"https://i.imgur.com/9EAE63P.png\" alt=\"img\">\n(<a href=\"https://www.cv-foundation.org/openaccess/content_cvpr_2016/papers/Gatys_Image_Style_Transfer_CVPR_2016_paper.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Image Style Transfer Using Convolutional Neural Networks</a>)</p>\n<p>上の画像は<a href=\"https://www.cv-foundation.org/openaccess/content_cvpr_2016/papers/Gatys_Image_Style_Transfer_CVPR_2016_paper.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Image Style Transfer Using Convolutional Neural Networks</a>からの引用ですが特定の画像に画風(Style)情報を差し込むことで任意の画風に変換できる、というものです。</p>\n<p><a href=\"https://prisma-ai.com/\" target=\"_blank\" rel=\"noopener noreferrer\">PRISMA</a>というサイトで遊んだことのあるほうも多いかと思いますが、まさにあれです。</p>\n<p>StyleGANではStyle Transferに<a href=\"https://arxiv.org/pdf/1703.06868.pdf\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>AdaIN(Adaptive Instance Normalization)</strong></a>という手法を使ってます。</p>\n<p>今までのStyle Transfer(Instance Normalization)は変換したいStyle画像をStyle用ベクトルとして学習し、指定したStyleごとに選択的にモデルに係数とバイアスを設定することで実現してました。</p>\n<p>AdaINの手法ではStyleを適用画像、Style画像チャネルごとの平均と標準偏差から導きます。</p>\n<p><img src=\"https://i.imgur.com/z7ZpFko.png\" alt=\"img\">\n(<a href=\"https://arxiv.org/abs/1703.06868\" target=\"_blank\" rel=\"noopener noreferrer\">Arbitrary Style Transfer in Real-time with Adaptive Instance Normalization</a>)</p>\n<p>統計量を用いることで、学習していないStyleについてもそれなりに対応できる、というのがメリットのようです。</p>\n<h3 id=\"潜在変数から画像を作らずちゃんとstyleをn本加え入れろ\" style=\"position:relative;\"><a href=\"#%E6%BD%9C%E5%9C%A8%E5%A4%89%E6%95%B0%E3%81%8B%E3%82%89%E7%94%BB%E5%83%8F%E3%82%92%E4%BD%9C%E3%82%89%E3%81%9A%E3%81%A1%E3%82%83%E3%82%93%E3%81%A8style%E3%82%92n%E6%9C%AC%E5%8A%A0%E3%81%88%E5%85%A5%E3%82%8C%E3%82%8D\" aria-label=\"潜在変数から画像を作らずちゃんとstyleをn本加え入れろ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>潜在変数から画像を作らずちゃんとStyleをn本加え入れろ～</h3>\n<p>さて、長くなってきましたがそろそろ解説終わりです。</p>\n<p>StyleGANではPGGANの成果物であるProgressive Growingを継承しつつも画像生成のプロセスが異なります。</p>\n<p><img src=\"https://i.imgur.com/7xOURgl.png\" alt=\"img\">\n(<a href=\"https://arxiv.org/pdf/1812.04948.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">A Style-Based Generator Architecture for Generative Adversarial Networks\n</a>)</p>\n<p>StyleGANでは、PGGANとは異なり入力に潜在変数を直接用いません。<strong>const(固定値)のテンソル</strong>を用いています。</p>\n<p>その代わり、<strong>ネットワークの各層にAdaINを用いStyleを適用</strong>することで画像に変化を生み出しているのです。</p>\n<p>また、単純に潜在変数をAdaINにぶち込んでいるわけでもなく、<strong>MappingNetwork(全結合ニューラルネット)で潜在変数を非線形化</strong>してから用いるなど細やかな気配りもされています。</p>\n<p>なぜStyleを各層に適用する形をとるかというと、人やものが映った画像にはさまざまな特徴量があり、GANはそれらの特徴量を学習することで画像生成していますが、実際人が映った画像には顔の向きや顔の輪郭など大きな特徴から目の色、肌の色のようなテクスチャ、肌荒れや髪の毛の巻き方などみみっちい特徴までさまざまです。</p>\n<p>一様な特徴量で表すのは限界があるのです。</p>\n<p>実はStyleGANはここらへんをしっかり考えていて、Style適用に加え<strong>Mixing Regularization</strong>という複数の潜在変数(ここではStyleベクトル)を各種層で混ぜ込んで適用するという手法で解決してます。</p>\n<p>Progressive Growingで申したとおり、各層は低解像度から高解像度へと進むのですがStyleベクトルを低解像度の際に適用した場合と高解像度の際に適用した場合では<strong>低解像度の際に入れたStyleのほうが画像への寄与が大きく</strong>なります。</p>\n<p>つまり、顔の向きや顔の輪郭などの大きな特徴は低解像度の際に、目の色など小さな特徴については高解像度の際にStyleとして適用されるのです。</p>\n<p>Styleの形で特徴を細かく分割し、Mixing Regularizationでそれぞれの特徴にあった変化を生み出すことができるようになったことがStyleGANのすばらしさと私は理解してます。</p>\n<h2 id=\"慣れない解説はもうやらない本題に戻ります\" style=\"position:relative;\"><a href=\"#%E6%85%A3%E3%82%8C%E3%81%AA%E3%81%84%E8%A7%A3%E8%AA%AC%E3%81%AF%E3%82%82%E3%81%86%E3%82%84%E3%82%89%E3%81%AA%E3%81%84%E6%9C%AC%E9%A1%8C%E3%81%AB%E6%88%BB%E3%82%8A%E3%81%BE%E3%81%99\" aria-label=\"慣れない解説はもうやらない本題に戻ります permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>慣れない解説はもうやらない、本題に戻ります</h2>\n<p>ごほん！</p>\n<p>当然、高解像度のGANは演算量は増えるので莫大な時間とお金(GPU)が必要になります。</p>\n<p>「子どもに学習学習っていいたくないですよね...。NVIDIAだからできたこと。(激寒)」</p>\n<p>私はNVIDIAではないのでモンスターGPUを大量に購入するお金ないですので今回は学習済みのモデルを借りて実験してみます。</p>\n<h2 id=\"making-anime-faces-with-stylegan\" style=\"position:relative;\"><a href=\"#making-anime-faces-with-stylegan\" aria-label=\"making anime faces with stylegan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Making Anime Faces With StyleGAN</h2>\n<p>美少女キャラ生成用の学習済みモデルってないかなーと探してたら、ありました。</p>\n<p><a href=\"https://www.gwern.net/Faces\" target=\"_blank\" rel=\"noopener noreferrer\">Making Anime Faces With StyleGAN\n</a></p>\n<p><strong>gwern.net</strong>さんありがとうございます!!!！</p>\n<p>モデルは<a href=\"https://www.gwern.net/Faces#anime-faces\" target=\"_blank\" rel=\"noopener noreferrer\">StyleGAN model used for TWDNEv1 sample</a>からダウンロードできます。</p>\n<p><strong>ありがたくダウンロードしましょう。</strong></p>\n<p>感謝の気持ちで肩たたきけんを進呈します。</p>\n<p><img src=\"https://i.imgur.com/0IEMnPa.png\" alt=\"img\"></p>\n<h2 id=\"styleganを使ってみる\" style=\"position:relative;\"><a href=\"#stylegan%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\" aria-label=\"styleganを使ってみる permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StyleGANを使ってみる</h2>\n<p>ダウンロードしたら早速使ってみます。StyleGANのソース(ライブラリ)はNVIDIAのGitHubに公開されてます。</p>\n<p><a href=\"https://github.com/NVlabs/stylegan\" target=\"_blank\" rel=\"noopener noreferrer\">NVlabs/stylegan</a></p>\n<p>学習はしないですが、推論のためにdnnlibを拝借するためソースをローカルにcloneします。</p>\n<p>また、事前にCUDAとTensorflowGPUを設定しておきます。</p>\n<p>環境差分が大きい話なので設定方法は各自ググってください.......。</p>\n<p>結構バージョンとかで苦戦しますので<a href=\"https://qiita.com/chin_self_driving_car/items/f00af2dbd022b65c9068\" target=\"_blank\" rel=\"noopener noreferrer\">こちら</a>を参考に設定しましょう。</p>\n<p>私の環境は下記で行いました。</p>\n<table>\n<thead>\n<tr>\n<th>key</th>\n<th>value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OS</td>\n<td>Windows10</td>\n</tr>\n<tr>\n<td>GPU</td>\n<td>NVIDIA GeForce RTX 2080</td>\n</tr>\n<tr>\n<td>CUDA</td>\n<td>10.0.0</td>\n</tr>\n<tr>\n<td>Python</td>\n<td>3.7.3</td>\n</tr>\n<tr>\n<td>tensorflow-gpu</td>\n<td>1.14.0</td>\n</tr>\n<tr>\n<td>numpy</td>\n<td>1.18.1</td>\n</tr>\n</tbody>\n</table>\n<p>ソースに同梱されている<strong>pretrained_example.py</strong>はNVIDIAが作ったモデルを用いて推論をしてみるスクリプトですがとりあえず、こちらを改造して画像生成用スクリプトを作ります。</p>\n<p>pretrained_example.pyではGoogle DriveからNVIDIA作成のモデルをダウンロードしますが、今回はAnimeFace用のモデルを使いたいので少しコードを変更します。</p>\n<p>ちなみにStyleGANのモデルはPickelファイル形式なので普通にPythonでバイナリオープンできます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> pickle\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> PIL<span class=\"token punctuation\">.</span>Image\n<span class=\"token keyword\">import</span> dnnlib\n<span class=\"token keyword\">import</span> dnnlib<span class=\"token punctuation\">.</span>tflib <span class=\"token keyword\">as</span> tflib\n<span class=\"token keyword\">import</span> config\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># Initialize TensorFlow.</span>\n    tflib<span class=\"token punctuation\">.</span>init_tf<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># ダウンロードしたpickelファイルを指定</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2019-02-26-stylegan-faces-network-02048-016041.pkl\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        _<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> Gs <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Print network details.</span>\n    Gs<span class=\"token punctuation\">.</span>print_layers<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Pick latent vector.</span>\n    <span class=\"token comment\"># 潜在変数を作成</span>\n    rnd <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>RandomState<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    latents <span class=\"token operator\">=</span> rnd<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Gs<span class=\"token punctuation\">.</span>input_shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Generate image.</span>\n    fmt <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>func<span class=\"token operator\">=</span>tflib<span class=\"token punctuation\">.</span>convert_images_to_uint8<span class=\"token punctuation\">,</span> nchw_to_nhwc<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    images <span class=\"token operator\">=</span> Gs<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>latents<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> truncation_psi<span class=\"token operator\">=</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> randomize_noise<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> output_transform<span class=\"token operator\">=</span>fmt<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Save image.</span>\n    os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>result_dir<span class=\"token punctuation\">,</span> exist_ok<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    filename <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%Y%m%d%H%M%S'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.png'</span>\n    png_filename <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>result_dir<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span>\n    PIL<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">.</span>fromarray<span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>png_filename<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>うまくいけばresultsディレクトリに画像が生成されるはずです。</p>\n<p><img src=\"https://i.imgur.com/ET5Bn63.png\" alt=\"img\"></p>\n<p><strong>あらかわ！</strong></p>\n<h2 id=\"aからbに画像を遷移transitionさせる\" style=\"position:relative;\"><a href=\"#a%E3%81%8B%E3%82%89b%E3%81%AB%E7%94%BB%E5%83%8F%E3%82%92%E9%81%B7%E7%A7%BBtransition%E3%81%95%E3%81%9B%E3%82%8B\" aria-label=\"aからbに画像を遷移transitionさせる permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AからBに画像を遷移(Transition)させる</h2>\n<p>さらにちょっと頑張ってみましょう。</p>\n<p>生成した画像Aを少しずつ変化させて画像Bに変化させてみます。</p>\n<p>StyleGANはこのAからBへの遷移(Transition)も比較的きれいにできることが知られています。</p>\n<p>pretrained_example.pyとは異なりあらかじめ潜在変数の作成する画像枚数分ベクトルを生成してn => n+1の変化量をm分割する感じにする必要があります。</p>\n<p>こちらは<a href=\"https://blog.blacktanktop.me/?post=20191110_animation_stylegan\" target=\"_blank\" rel=\"noopener noreferrer\">イラストで学習したStyleGANを試した</a>を参考にしました。</p>\n<p>ファイル名は、<strong>generate_anime.py</strong>とします。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> pickle\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> PIL<span class=\"token punctuation\">.</span>Image\n<span class=\"token keyword\">import</span> dnnlib<span class=\"token punctuation\">.</span>tflib <span class=\"token keyword\">as</span> tflib\n<span class=\"token keyword\">import</span> config\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime\n\nFILENAME_PREFIX <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y%m%d%H%M%S\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">generate_image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Generate GAN Image \"\"\"</span>\n    <span class=\"token comment\"># Initialize TensorFlow.</span>\n    tflib<span class=\"token punctuation\">.</span>init_tf<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># ダウンロードしたpickelファイルを指定</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2019-02-26-stylegan-faces-network-02048-016041.pkl\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        _<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> Gs <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># Gs = Long-term average of the generator. Yields higher-quality results than the instantaneous snapshot.</span>\n\n    <span class=\"token comment\"># Print network details.</span>\n    Gs<span class=\"token punctuation\">.</span>print_layers<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Pick latent vector.</span>\n    rnd <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>RandomState<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 生成する画像枚数分、潜在変数を作っておく。ここでは30枚作成</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        latents <span class=\"token operator\">=</span> rnd<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Gs<span class=\"token punctuation\">.</span>input_shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            stacked_latents <span class=\"token operator\">=</span> latents\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            stacked_latents <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>stacked_latents<span class=\"token punctuation\">,</span> latents<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># AからBに遷移する画像を生成</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>stacked_latents<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># before(A), after(B)をそれぞれ作る</span>\n        latents_before <span class=\"token operator\">=</span> stacked_latents<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        latents_after <span class=\"token operator\">=</span> stacked_latents<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">19</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># Aから19分割で少しずつBに潜在変数を変化</span>\n            latents <span class=\"token operator\">=</span> latents_before <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>latents_after <span class=\"token operator\">-</span> latents_before<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> j <span class=\"token operator\">/</span> <span class=\"token number\">19</span>\n            fmt <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>func<span class=\"token operator\">=</span>tflib<span class=\"token punctuation\">.</span>convert_images_to_uint8<span class=\"token punctuation\">,</span> nchw_to_nhwc<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            images <span class=\"token operator\">=</span> Gs<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>latents<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> truncation_psi<span class=\"token operator\">=</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> randomize_noise<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> output_transform<span class=\"token operator\">=</span>fmt<span class=\"token punctuation\">)</span>\n            os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>result_dir<span class=\"token punctuation\">,</span> exist_ok<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># MP4化したいのでファイルを連番になるように出力</span>\n            png_filename <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>result_dir<span class=\"token punctuation\">,</span> FILENAME_PREFIX <span class=\"token operator\">+</span> <span class=\"token string\">\"-{0:04d}-{1:04d}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".png\"</span><span class=\"token punctuation\">)</span>\n            PIL<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">.</span>fromarray<span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>png_filename<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    generate_image<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>生成した画像をMP4にするとこんな感じになりました！</p>\n<iframe loading=\"lazy\" width=\"200\" height=\"150\" src=\"https://www.youtube.com/embed/VAAm-Ne3T6Y?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"StyleGAN AnimeFace\"></iframe>\n<p>おおー！すごい！なかなかしっかりしてますね。512x512の高解像度美少女キャラが無限増殖してます！</p>\n<p>StyleGANで美少女無限増殖は成功といってもいいのではないでしょうか!!</p>\n<h2 id=\"stylegan2でも美少女無限増殖\" style=\"position:relative;\"><a href=\"#stylegan2%E3%81%A7%E3%82%82%E7%BE%8E%E5%B0%91%E5%A5%B3%E7%84%A1%E9%99%90%E5%A2%97%E6%AE%96\" aria-label=\"stylegan2でも美少女無限増殖 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StyleGAN2でも美少女無限増殖</h2>\n<p>StyleGANで成功をおさめたNVIDIAですがまだ歩みを止めません。StyleGANで出てきた課題を解決するべく、<a href=\"https://arxiv.org/abs/1912.04958\" target=\"_blank\" rel=\"noopener noreferrer\">StyleGAN2</a>を作りました。</p>\n<p>StyleGANとどう変わったかというのはもう難しいので専門の方に任せちゃいますがちらっとだけ解説すると、</p>\n<p>StyleGANで課題になった、</p>\n<ul>\n<li>水滴ノイズ(droplet)</li>\n<li>歯や目などの小さい特徴が顔の向きと連動しない(不自然モード)</li>\n</ul>\n<p>という問題を解消しています。</p>\n<p>さて、**StyleGAN2でも美少女キャラ無限増殖したい！**と心の声が聞こえてきますね。</p>\n<p>なんとStyleGAN2でも<strong>gwern.net</strong>さんがモデルを公開してくれてます！</p>\n<p><a href=\"https://www.gwern.net/Faces#stylegan-2\" target=\"_blank\" rel=\"noopener noreferrer\">Making Anime Faces With StyleGAN StyleGAN 2</a></p>\n<p>ありがたくこちらも使わせていただきます。</p>\n<p>また、StyleGAN2自体のソース(ライブラリ)はStyleGANと同じくGitHubに公開されています。</p>\n<p><a href=\"https://github.com/NVlabs/stylegan2\" target=\"_blank\" rel=\"noopener noreferrer\">NVlabs/stylegan2</a></p>\n<p>こちらをCloneして準備完了です。</p>\n<p>基本的にはStyleGAN2もStyleGANっぽくコーディングできるだろうと思い、先ほどの<strong>generate_anime.py</strong>を流用します。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> pickle\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> PIL<span class=\"token punctuation\">.</span>Image\n<span class=\"token keyword\">import</span> dnnlib<span class=\"token punctuation\">.</span>tflib <span class=\"token keyword\">as</span> tflib\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime\n\n<span class=\"token comment\"># number of create StyleGAN image file</span>\nIMAGE_NUM <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\n<span class=\"token comment\"># number of split frame two GAN files for changing image</span>\nSPLIT_NUM <span class=\"token operator\">=</span> <span class=\"token number\">19</span>\n<span class=\"token comment\"># image size</span>\nIMG_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">512</span>\nFILENAME_PREFIX <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y%m%d%H%M%S\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">generate_image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Generate GAN Image \"\"\"</span>\n    <span class=\"token comment\"># Initialize TensorFlow.</span>\n    tflib<span class=\"token punctuation\">.</span>init_tf<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 2020-01-11-skylion-stylegan2-animeportraits-networksnapshot-024664.pkl (https://www.gwern.net/Faces#stylegan-2)</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-01-11-skylion-stylegan2-animeportraits-networksnapshot-024664.pkl\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        _<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> Gs <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># Gs = Long-term average of the generator. Yields higher-quality results than the instantaneous snapshot.</span>\n\n    <span class=\"token comment\"># Print network details.</span>\n    Gs<span class=\"token punctuation\">.</span>print_layers<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Pick latent vector.</span>\n    rnd <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>RandomState<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># create latents stacks because of changing several latents vectors.</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>IMAGE_NUM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        latents <span class=\"token operator\">=</span> rnd<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Gs<span class=\"token punctuation\">.</span>input_shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            stacked_latents <span class=\"token operator\">=</span> latents\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            stacked_latents <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>stacked_latents<span class=\"token punctuation\">,</span> latents<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>stacked_latents<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        latents_before <span class=\"token operator\">=</span> stacked_latents<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        latents_after <span class=\"token operator\">=</span> stacked_latents<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>SPLIT_NUM <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            latents <span class=\"token operator\">=</span> latents_before <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>latents_after <span class=\"token operator\">-</span> latents_before<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> j <span class=\"token operator\">/</span> SPLIT_NUM\n            fmt <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>func<span class=\"token operator\">=</span>tflib<span class=\"token punctuation\">.</span>convert_images_to_uint8<span class=\"token punctuation\">,</span> nchw_to_nhwc<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            images <span class=\"token operator\">=</span> Gs<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>latents<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> truncation_psi<span class=\"token operator\">=</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> randomize_noise<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> output_transform<span class=\"token operator\">=</span>fmt<span class=\"token punctuation\">)</span>\n            os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span><span class=\"token string\">\"results\"</span><span class=\"token punctuation\">,</span> exist_ok<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            png_filename <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">\"results\"</span><span class=\"token punctuation\">,</span> FILENAME_PREFIX <span class=\"token operator\">+</span> <span class=\"token string\">\"-{0:04d}-{1:04d}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".png\"</span><span class=\"token punctuation\">)</span>\n            PIL<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">.</span>fromarray<span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>png_filename<span class=\"token punctuation\">)</span>\n\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    generate_image<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>1点コードを変更したところとしてはStyleGAN2のdnnlibに<strong>config</strong>がないのでresultsディレクトリの指定は文字列で行います。</p>\n<p>さあ！実行しますわよー！</p>\n<h3 id=\"おや動かない\" style=\"position:relative;\"><a href=\"#%E3%81%8A%E3%82%84%E5%8B%95%E3%81%8B%E3%81%AA%E3%81%84\" aria-label=\"おや動かない permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>おや!?動かない。</h3>\n<p>まぁそう簡単にはいきませんね。エラーを吐いて落ちてしまいました。</p>\n<p>エラーメッセージ↓</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Setting up TensorFlow plugin \"fused_bias_act.cu\": Preprocessing... Failed!\nTraceback (most recent call last):\n  File \"generate_anime.py\", line 75, in &lt;module>\n    generate_image()\n  File \"generate_anime.py\", line 27, in generate_image\n    _, _, Gs = pickle.load(f)\n  File \"E:\\tubone\\project\\stylegan2\\dnnlib\\tflib\\network.py\", line 297, in __setstate__\n    self._init_graph()\n  File \"E:\\tubone\\project\\stylegan2\\dnnlib\\tflib\\network.py\", line 154, in _init_graph\n    out_expr = self._build_func(*self.input_templates, **build_kwargs)\n  File \"&lt;string>\", line 491, in G_synthesis_stylegan2\n  File \"&lt;string>\", line 455, in layer\n  File \"&lt;string>\", line 99, in modulated_conv2d_layer\n  File \"&lt;string>\", line 68, in apply_bias_act\n  File \"E:\\tubone\\project\\stylegan2\\dnnlib\\tflib\\ops\\fused_bias_act.py\", line 68, in fused_bias_act\n    return impl_dict[impl](x=x, b=b, axis=axis, act=act, alpha=alpha, gain=gain)\n  File \"E:\\tubone\\project\\stylegan2\\dnnlib\\tflib\\ops\\fused_bias_act.py\", line 122, in _fused_bias_act_cuda\n    cuda_kernel = _get_plugin().fused_bias_act\n  File \"E:\\tubone\\project\\stylegan2\\dnnlib\\tflib\\ops\\fused_bias_act.py\", line 16, in _get_plugin\n    return custom_ops.get_plugin(os.path.splitext(__file__)[0] + '.cu')\n  File \"E:\\tubone\\project\\stylegan2\\dnnlib\\tflib\\custom_ops.py\", line 111, in get_plugin\n    _run_cmd(_prepare_nvcc_cli('\"%s\" --preprocess -o \"%s\" --keep --keep-dir \"%s\"' % (cuda_file, tmp_file, tmp_dir)))\n  File \"E:\\tubone\\project\\stylegan2\\dnnlib\\tflib\\custom_ops.py\", line 76, in _prepare_nvcc_cli\n    raise RuntimeError('Could not find MSVC/GCC/CLANG installation on this computer. Check compiler_bindir_search_path list in \"%s\".' % __file__)\nRuntimeError: Could not find MSVC/GCC/CLANG installation on this computer. Check compiler_bindir_search_path list in \"E:\\tubone\\project\\stylegan2\\dnnlib\\tflib\\custom_ops.py\".</code></pre></div>\n<p>エラーメッセージ抜粋↓</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">RuntimeError: Could not find MSVC/GCC/CLANG installation on this computer. Check compiler_bindir_search_path list in \"E:\\tubone\\project\\stylegan2\\dnnlib\\tflib\\custom_ops.py\".</code></pre></div>\n<p>とのことです。<strong>MSVC/GCC/CLANG</strong>ということは<strong>VCかGCCのコンパイラが必要</strong>とのことです。</p>\n<p><strong>Windows10で実行しているのでVCが必要なんですね。</strong></p>\n<p>エラーを見て何のことかと思いましたが、StyleGAN2の<a href=\"https://github.com/NVlabs/stylegan2#requirements\" target=\"_blank\" rel=\"noopener noreferrer\">Requirements</a>に普通に書いてありました。</p>\n<p>見切り発車もいいところだ..。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">On Windows, the compilation requires Microsoft Visual Studio to be in PATH. We recommend installing Visual Studio Community Edition and adding into PATH using \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat\".</code></pre></div>\n<p>VCでのコンパイルが必要なんですねということはわかったのですが、釈然としません。</p>\n<p>なぜならもともとVisual Studio 2019は入れているからです。</p>\n<p>パスも通してます。当然VCのコンパイラも含まれているわけで。</p>\n<p>もう一度エラーメッセージを見返すと<strong>custom_ops.py</strong>を編集してねとのことなので確認します。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Copyright (c) 2019, NVIDIA Corporation. All rights reserved.</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># This work is made available under the Nvidia Source Code License-NC.</span>\n<span class=\"token comment\"># To view a copy of this license, visit</span>\n<span class=\"token comment\"># https://nvlabs.github.io/stylegan2/license.html</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"TensorFlow custom ops builder.\n\"\"\"</span>\n\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> uuid\n<span class=\"token keyword\">import</span> hashlib\n<span class=\"token keyword\">import</span> tempfile\n<span class=\"token keyword\">import</span> shutil\n<span class=\"token keyword\">import</span> tensorflow <span class=\"token keyword\">as</span> tf\n<span class=\"token keyword\">from</span> tensorflow<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>client <span class=\"token keyword\">import</span> device_lib <span class=\"token comment\"># pylint: disable=no-name-in-module</span>\n\n<span class=\"token comment\">#----------------------------------------------------------------------------</span>\n<span class=\"token comment\"># Global options.</span>\n\ncuda_cache_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'_cudacache'</span><span class=\"token punctuation\">)</span>\ncuda_cache_version_tag <span class=\"token operator\">=</span> <span class=\"token string\">'v1'</span>\ndo_not_hash_included_headers <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span> <span class=\"token comment\"># Speed up compilation by assuming that headers included by the CUDA code never change. Unsafe!</span>\nverbose <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token comment\"># Print status messages to stdout.</span>\n\ncompiler_bindir_search_path <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.14.26428/bin/Hostx64/x64'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.23.28105/bin/Hostx64/x64'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'C:/Program Files (x86)/Microsoft Visual Studio 14.0/vc/bin'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">#----------------------------------------------------------------------------</span></code></pre></div>\n<p>なるほど、StyleGAN2で使うVCのコンパイラは<strong>compiler_bindir_search_path</strong>で設定しているんですね。</p>\n<p>確かにこちらが実環境とあっていませんでした。</p>\n<p>こちらを実環境に合わせて修正します。</p>\n<p>また、もう少しStyleGAN2のレポジトリを眺めたら、MSVCのチェックスクリプト<strong>test_nvcc.cu</strong>がGitHubのレポジトリに普通にありました...。</p>\n<p>どんだけ見切り発車なんだよ..。</p>\n<p>さて気を取り直して、Visual Studio 2019のパスを正しく書き直しtest_nvcc.cuを実行してみたところ、</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(tensorflow) E:\\tubone\\project\\stylegan2>nvcc test_nvcc.cu -o test_nvcc -run\ntest_nvcc.cu\n\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.0\\bin/../include\\cuda_runtime.h: warning C4819: ファイルは、現在 のコード ページ (932) で表示できない文字を含んでいます。データの損失を防ぐために、ファイルを Unicode 形式で保存してくだ さい。\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.0\\include\\crt/host_config.h(143): fatal error C1189: #error:  -- unsupported Microsoft Visual Studio version! Only the versions between 2013 and 2017 (inclusive) are supported!</code></pre></div>\n<p>Warinigは置いておいて、<strong>fatal error</strong>が出てますね。なんだかVisual Stadio 2019に対応してないとか出てきた..。</p>\n<p>んー.... じゃあ2017いれますか..。</p>\n<p><a href=\"https://my.visualstudio.com/Downloads?q=visual%20studio%202017&#x26;wt.mc_id=o~msft~vscom~older-downloads\" target=\"_blank\" rel=\"noopener noreferrer\">こちら</a>からVisual Studio 2017をダウンロードしインストールします。</p>\n<p>もちろんMSVCが必要なのでちゃんとインストーラーでC++の開発はインストールしましょう！</p>\n<p>インストール後は<strong>compiler_bindir_search_path</strong>にパスを設定します。パスは<strong>cl.exe</strong>が存在する箇所です。バージョン名以外は<strong>custom_ops.py</strong>の通りで大丈夫だと思います。</p>\n<p>うまくパスを設定してないとtest_nvcc.cuを実行すると、</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(tensorflow) E:\\tubone\\project\\stylegan2>nvcc test_nvcc.cu -o test_nvcc -run\nnvcc fatal   : Cannot find compiler 'cl.exe' in PATH</code></pre></div>\n<p>とcl.exeがPATHに見つからないと怒られます。</p>\n<p>私の環境のcl.exeは、</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64</code></pre></div>\n<p>でした。</p>\n<p>うまくPATHを通してtest_nvcc.cuを実行すると...。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">現在のコード ページ (932) で表示できない文字を含んでいます。データの損失を防ぐために、ファイルを Unicode 形式で保存して ください。\n   ライブラリ test_nvcc.lib とオブジェクト test_nvcc.exp を作成中\nCPU says hello.\nGPU says hello.</code></pre></div>\n<p>Unicode warinigはでるものの、</p>\n<p><strong>CPU says hello.</strong></p>\n<p><strong>GPU says hello.</strong></p>\n<p>と表示されました。「ハロー！」</p>\n<p>まったく関係ないですが、ハローといえば<strong>Radio Happy</strong>ですよね。好き。</p>\n<iframe loading=\"lazy\" width=\"200\" height=\"113\" src=\"https://www.youtube.com/embed/9pY9MrjeLD4?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"【アイドルマスター】「Radio Happy」(歌：大槻唯)\"></iframe>\n<p>よし！時はきた！</p>\n<p><strong>generate_anime.py</strong>を実行します。</p>\n<p><img src=\"https://i.imgur.com/k3KihLx.png\" alt=\"img\"></p>\n<h3 id=\"まだうまく動かない\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A0%E3%81%86%E3%81%BE%E3%81%8F%E5%8B%95%E3%81%8B%E3%81%AA%E3%81%84\" aria-label=\"まだうまく動かない permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まだうまく動かない</h3>\n<p>エラーがでました..。</p>\n<p><img src=\"https://i.imgur.com/0KH7SgH.png\" alt=\"img\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">RuntimeError: NVCC returned an error. See below for full command line and output log:\n\nnvcc \"C:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.lib\" --gpu-architecture=sm_75 --use_fast_math --disable-warnings --include-path \"C:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\include\" --include-path \"C:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\include\\external\\protobuf_archive\\src\" --include-path \"C:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\include\\external\\com_google_absl\" --include-path \"C:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\include\\external\\eigen_archive\" --compiler-bindir \"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx64/x64\" 2>&amp;1 \"C:\\Users\\meita\\Downloads\\stylegan2\\dnnlib\\tflib\\ops\\fused_bias_act.cu\" --shared -o \"C:\\Users\\meita\\AppData\\Local\\Temp\\tmp3_sgpk48\\fused_bias_act_tmp.dll\" --keep --keep-dir \"C:\\Users\\meita\\AppData\\Local\\Temp\\tmp3_sgpk48\"\n\n_pywrap_tensorflow_internal.lib\nfused_bias_act.cu\nnvcc error   : 'cudafe++' died with status 0xC0000005 (ACCESS_VIOLATION)</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nvcc error   : 'cudafe++' died with status 0xC0000005 (ACCESS_VIOLATION)</code></pre></div>\n<p>とのことです。なんだこれ...。</p>\n<h3 id=\"nvcc-error--cudafe-died-with-status-0xc0000005-access_violation\" style=\"position:relative;\"><a href=\"#nvcc-error--cudafe-died-with-status-0xc0000005-access_violation\" aria-label=\"nvcc error  cudafe died with status 0xc0000005 access_violation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nvcc error : 'cudafe++' died with status 0xC0000005 (ACCESS_VIOLATION)</h3>\n<p>ここまできて半分諦めてたのですが、ダメ元でエラーをググったらTensorflowに気になるIssueを発見しました。</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/issues/27706\" target=\"_blank\" rel=\"noopener noreferrer\">nvcc error : 'cudafe++' died with status 0xC0000005 (ACCESS_VIOLATION) #27706</a></p>\n<p><img src=\"https://i.imgur.com/zXCnrTq.png\" alt=\"img\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">You need to Install Visual C++ Build Tools 2015 Please take a look at these instructions.</code></pre></div>\n<p>はぁ... 2015ですか..。</p>\n<p>2017で動くって言ってたじゃないか！</p>\n<p><img src=\"https://i.imgur.com/1KUffz4.png\" alt=\"img\"></p>\n<p>ということで<strong>Visual Studio 2015</strong>をインストールします..。</p>\n<p><a href=\"https://my.visualstudio.com/Downloads?q=visual%20studio%202015&#x26;wt.mc_id=o~msft~vscom~older-downloads\" target=\"_blank\" rel=\"noopener noreferrer\">https://my.visualstudio.com/Downloads?q=visual%20studio%202015&#x26;wt.mc_id=o~msft~vscom~older-downloads</a></p>\n<p>Visual Studio 2015は通常インストールするとVCインストールの項目がないのでインストール後、再度インストーラーを起動してVCをインストールするように修正します。</p>\n<p>何気に面倒だよねこれ、Stack overflow君が教えてくれなければ解決できなかったよぉ。</p>\n<p><a href=\"https://stackoverflow.com/questions/31953769/visual-studio-2015-doesnt-have-cl-exe\" target=\"_blank\" rel=\"noopener noreferrer\">Visual Studio 2015 doesn't have cl.exe</a></p>\n<h3 id=\"3度目の正直\" style=\"position:relative;\"><a href=\"#3%E5%BA%A6%E7%9B%AE%E3%81%AE%E6%AD%A3%E7%9B%B4\" aria-label=\"3度目の正直 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3度目の正直</h3>\n<p>よし！適当)</p>\n<p><strong>generate_anime.py</strong>実行します！</p>\n<p><img src=\"https://i.imgur.com/YE8Pdyb.png\" alt=\"img\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(tensorflow) E:\\tubone\\project\\stylegan2>python generate_anime.py\nC:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n  _np_qint8 = np.dtype([(\"qint8\", np.int8, 1)])\nC:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n  _np_quint8 = np.dtype([(\"quint8\", np.uint8, 1)])\nC:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n  _np_qint16 = np.dtype([(\"qint16\", np.int16, 1)])\nC:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n  _np_quint16 = np.dtype([(\"quint16\", np.uint16, 1)])\nC:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n  _np_qint32 = np.dtype([(\"qint32\", np.int32, 1)])\nC:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n  np_resource = np.dtype([(\"resource\", np.ubyte, 1)])\nC:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorboard\\compat\\tensorflow_stub\\dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n  _np_qint8 = np.dtype([(\"qint8\", np.int8, 1)])\nC:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorboard\\compat\\tensorflow_stub\\dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n  _np_quint8 = np.dtype([(\"quint8\", np.uint8, 1)])\nC:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorboard\\compat\\tensorflow_stub\\dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n  _np_qint16 = np.dtype([(\"qint16\", np.int16, 1)])\nC:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorboard\\compat\\tensorflow_stub\\dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n  _np_quint16 = np.dtype([(\"quint16\", np.uint16, 1)])\nC:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorboard\\compat\\tensorflow_stub\\dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n  _np_qint32 = np.dtype([(\"qint32\", np.int32, 1)])\nC:\\Users\\meita\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorboard\\compat\\tensorflow_stub\\dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n  np_resource = np.dtype([(\"resource\", np.ubyte, 1)])\nSetting up TensorFlow plugin \"fused_bias_act.cu\": Preprocessing... Loading... Done.\nSetting up TensorFlow plugin \"upfirdn_2d.cu\": Preprocessing... Loading... Done.\n\nGs                            Params    OutputShape         WeightShape\n---                           ---       ---                 ---\nlatents_in                    -         (?, 512)            -\nlabels_in                     -         (?, 0)              -\nlod                           -         ()                  -\ndlatent_avg                   -         (512,)              -\nG_mapping/latents_in          -         (?, 512)            -\nG_mapping/labels_in           -         (?, 0)              -\nG_mapping/Normalize           -         (?, 512)            -\nG_mapping/Dense0              262656    (?, 512)            (512, 512)\nG_mapping/Dense1              262656    (?, 512)            (512, 512)\nG_mapping/Dense2              262656    (?, 512)            (512, 512)\nG_mapping/Dense3              262656    (?, 512)            (512, 512)\nG_mapping/Dense4              262656    (?, 512)            (512, 512)\nG_mapping/Dense5              262656    (?, 512)            (512, 512)\nG_mapping/Dense6              262656    (?, 512)            (512, 512)\nG_mapping/Dense7              262656    (?, 512)            (512, 512)\nG_mapping/Broadcast           -         (?, 16, 512)        -\nG_mapping/dlatents_out        -         (?, 16, 512)        -\nTruncation/Lerp               -         (?, 16, 512)        -\nG_synthesis/dlatents_in       -         (?, 16, 512)        -\nG_synthesis/4x4/Const         8192      (?, 512, 4, 4)      (1, 512, 4, 4)\nG_synthesis/4x4/Conv          2622465   (?, 512, 4, 4)      (3, 3, 512, 512)\nG_synthesis/4x4/ToRGB         264195    (?, 3, 4, 4)        (1, 1, 512, 3)\nG_synthesis/8x8/Conv0_up      2622465   (?, 512, 8, 8)      (3, 3, 512, 512)\nG_synthesis/8x8/Conv1         2622465   (?, 512, 8, 8)      (3, 3, 512, 512)\nG_synthesis/8x8/Upsample      -         (?, 3, 8, 8)        -\nG_synthesis/8x8/ToRGB         264195    (?, 3, 8, 8)        (1, 1, 512, 3)\nG_synthesis/16x16/Conv0_up    2622465   (?, 512, 16, 16)    (3, 3, 512, 512)\nG_synthesis/16x16/Conv1       2622465   (?, 512, 16, 16)    (3, 3, 512, 512)\nG_synthesis/16x16/Upsample    -         (?, 3, 16, 16)      -\nG_synthesis/16x16/ToRGB       264195    (?, 3, 16, 16)      (1, 1, 512, 3)\nG_synthesis/32x32/Conv0_up    2622465   (?, 512, 32, 32)    (3, 3, 512, 512)\nG_synthesis/32x32/Conv1       2622465   (?, 512, 32, 32)    (3, 3, 512, 512)\nG_synthesis/32x32/Upsample    -         (?, 3, 32, 32)      -\nG_synthesis/32x32/ToRGB       264195    (?, 3, 32, 32)      (1, 1, 512, 3)\nG_synthesis/64x64/Conv0_up    2622465   (?, 512, 64, 64)    (3, 3, 512, 512)\nG_synthesis/64x64/Conv1       2622465   (?, 512, 64, 64)    (3, 3, 512, 512)\nG_synthesis/64x64/Upsample    -         (?, 3, 64, 64)      -\nG_synthesis/64x64/ToRGB       264195    (?, 3, 64, 64)      (1, 1, 512, 3)\nG_synthesis/128x128/Conv0_up  1442561   (?, 256, 128, 128)  (3, 3, 512, 256)\nG_synthesis/128x128/Conv1     721409    (?, 256, 128, 128)  (3, 3, 256, 256)\nG_synthesis/128x128/Upsample  -         (?, 3, 128, 128)    -\nG_synthesis/128x128/ToRGB     132099    (?, 3, 128, 128)    (1, 1, 256, 3)\nG_synthesis/256x256/Conv0_up  426369    (?, 128, 256, 256)  (3, 3, 256, 128)\nG_synthesis/256x256/Conv1     213249    (?, 128, 256, 256)  (3, 3, 128, 128)\nG_synthesis/256x256/Upsample  -         (?, 3, 256, 256)    -\nG_synthesis/256x256/ToRGB     66051     (?, 3, 256, 256)    (1, 1, 128, 3)\nG_synthesis/512x512/Conv0_up  139457    (?, 64, 512, 512)   (3, 3, 128, 64)\nG_synthesis/512x512/Conv1     69761     (?, 64, 512, 512)   (3, 3, 64, 64)\nG_synthesis/512x512/Upsample  -         (?, 3, 512, 512)    -\nG_synthesis/512x512/ToRGB     33027     (?, 3, 512, 512)    (1, 1, 64, 3)\nG_synthesis/images_out        -         (?, 3, 512, 512)    -\nG_synthesis/noise0            -         (1, 1, 4, 4)        -\nG_synthesis/noise1            -         (1, 1, 8, 8)        -\nG_synthesis/noise2            -         (1, 1, 8, 8)        -\nG_synthesis/noise3            -         (1, 1, 16, 16)      -\nG_synthesis/noise4            -         (1, 1, 16, 16)      -\nG_synthesis/noise5            -         (1, 1, 32, 32)      -\nG_synthesis/noise6            -         (1, 1, 32, 32)      -\nG_synthesis/noise7            -         (1, 1, 64, 64)      -\nG_synthesis/noise8            -         (1, 1, 64, 64)      -\nG_synthesis/noise9            -         (1, 1, 128, 128)    -\nG_synthesis/noise10           -         (1, 1, 128, 128)    -\nG_synthesis/noise11           -         (1, 1, 256, 256)    -\nG_synthesis/noise12           -         (1, 1, 256, 256)    -\nG_synthesis/noise13           -         (1, 1, 512, 512)    -\nG_synthesis/noise14           -         (1, 1, 512, 512)    -\nimages_out                    -         (?, 3, 512, 512)    -\n---                           ---       ---                 ---\nTotal                         30276583\n\n2020-05-04 03:03:32.366467: W tensorflow/core/common_runtime/bfc_allocator.cc:237] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.14GiB with freed_by_count=0. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory were availa\nble.\n2020-05-04 03:03:32.377471: W tensorflow/core/common_runtime/bfc_allocator.cc:237] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.14GiB with freed_by_count=0. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory were availa\nble.\n2020-05-04 03:03:32.966211: W tensorflow/core/common_runtime/bfc_allocator.cc:237] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.25GiB with freed_by_count=0. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory were availa\nble.\n2020-05-04 03:03:32.976815: W tensorflow/core/common_runtime/bfc_allocator.cc:237] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.25GiB with freed_by_count=0. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory were availa\nble.</code></pre></div>\n<p>実行できた!!</p>\n<p><img src=\"https://i.imgur.com/daSYwz2.png\" alt=\"img\"></p>\n<p>ちゃんとresultsに画像が出力されてます！</p>\n<p><img src=\"https://i.imgur.com/VfRjfpW.png\" alt=\"img\"></p>\n<p><strong>かわいいいいいい!!</strong></p>\n<p>小早川紗枝はんに似てますなー！</p>\n<p>紗枝はんといえばやっぱり<strong>美に入り彩を穿つ</strong>ですよね。</p>\n<iframe loading=\"lazy\" width=\"200\" height=\"113\" src=\"https://www.youtube.com/embed/96rmz41v6QE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"「デレステ」美に入り彩を穿つ (Game ver.) 小早川紗枝、塩見周子 限定 SSR\"></iframe>\n<p>ごほん！</p>\n<p>ちゃんとTransitionもうまく出力されているようです！</p>\n<iframe loading=\"lazy\" width=\"200\" height=\"150\" src=\"https://www.youtube.com/embed/KpjWeNB5TUI?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"Style GAN2 animeface\"></iframe>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>ここまでのスクリプトはNVIDIAのStyleGAN, StyleGAN2をForkした形でGitHubにおいてます。</p>\n<p><a href=\"https://github.com/tubone24/stylegan\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/tubone24/stylegan</a></p>\n<p><a href=\"https://github.com/tubone24/stylegan2\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/tubone24/stylegan2</a></p>\n<p>機械学習特有の環境構築とかで躓くあるあるはあるものの、何とかできました。</p>\n<p>また、GANの世界もここまで進化していると知りびっくりしました。</p>\n<p>次回はこちらをJetson nanoに移植していきたいと思います。</p>\n<h2 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h2>\n<ul>\n<li><a href=\"https://medium.com/@akichan_f/gan%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%8B%E3%82%89stylegan2%E3%81%BE%E3%81%A7-dfd2608410b3\" target=\"_blank\" rel=\"noopener noreferrer\">GANの基礎からStyleGAN2まで</a></li>\n<li><a href=\"https://www.slideshare.net/KentoDoi/stylegan-cvpr2019dena\" target=\"_blank\" rel=\"noopener noreferrer\">StyleGAN解説 CVPR2019読み会@DeNA</a></li>\n<li><a href=\"https://blog.blacktanktop.me/?post=20191110_animation_stylegan\" target=\"_blank\" rel=\"noopener noreferrer\">イラストで学習したStyleGANを試した</a></li>\n<li><a href=\"https://qiita.com/chin_self_driving_car/items/f00af2dbd022b65c9068\" target=\"_blank\" rel=\"noopener noreferrer\">Tensorflow GPU, CUDA, CuDNNのバージョン早見表</a></li>\n</ul>","fields":{"slug":"2020/05/03/stylegan2-anime"},"frontmatter":{"tags":["機械学習","StyleGAN"],"templateKey":"blog-post","slug":"2020/05/03/stylegan2-anime","id":null,"title":"StyleGANとStyleGAN2を使って美少女キャラを無限増殖させる","url":"2020/05/03/stylegan2-anime","date":"2020-05-03T09:48:45.329Z","description":"StyleGANとStyleGAN2を使って美少女キャラを無限増殖させるというお話です。","headerImage":"https://i.imgur.com/VfRjfpW.png","year":"2020","month":"05"}}},{"node":{"id":"bcc03e4c-d03c-5890-ad47-c8f9c099ab70","html":"<p><a href=\"https://qiita.com/karaage0703/items/221f96436c32f6f405c7\" target=\"_blank\" rel=\"noopener noreferrer\">ディープラーニングで自撮り画像をアニメ画像に画風変換する方法</a>を参考にJetson nanoでアニメ風自撮り画像を作ってみましたが、使っているカメラの互換性問題で少し躓いたので、修正してトライしたよ。というお話です。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#sainsmart-imx219\">SainSmart IMX219</a></li>\n<li><a href=\"#%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AC%E3%83%BC%E3%83%88%E8%AA%BF%E6%95%B4\">フレームレート調整</a></li>\n<li><a href=\"#%E5%8B%95%E3%81%8B%E3%81%99\">動かす</a></li>\n</ul>\n</div>\n<h2 id=\"sainsmart-imx219\" style=\"position:relative;\"><a href=\"#sainsmart-imx219\" aria-label=\"sainsmart imx219 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SainSmart IMX219</h2>\n<p>Jetson nanoには<strong>Raspberry pi</strong>互換のカメラモジュールV2(MIPI CSI-2)が使えます。</p>\n<p><img src=\"https://i.imgur.com/xrDd4y5.png\" alt=\"img\"></p>\n<p>⑨がモジュールのコネクタとなります。</p>\n<p><img src=\"https://i.imgur.com/AZAkt7z.jpg\" alt=\"img\"></p>\n<p>私のJetson nanoもケースに入れちゃってよく見えませんですみませんが、カメラモジュールにMIPI CSI-2互換のカメラが刺さってます。</p>\n<p>ラズパイ公式のカメラモジュール<a href=\"https://amzn.to/3l0rQNC\" target=\"_blank\" rel=\"noopener noreferrer\">Raspberry Pi Camera Module V2 カメラモジュール (Daylight - element14)</a>を使うのが無難かな？と思いましたが、今回はちょっとだけ安かった<a href=\"https://amzn.to/3y9fBlB\" target=\"_blank\" rel=\"noopener noreferrer\">SainSmart IMX219 AIカメラモジュールNVIDIA Jetson Nanoボード用8MPセンサー77度FoV</a>を使ってみました。</p>\n<p><img src=\"https://i.imgur.com/gWqd2xb.jpg\" alt=\"img\"></p>\n<p>こちら、<a href=\"https://qiita.com/karaage0703/items/221f96436c32f6f405c7\" target=\"_blank\" rel=\"noopener noreferrer\">ディープラーニングで自撮り画像をアニメ画像に画風変換する方法</a>で紹介されているところから若干コードを工夫する必要がありましたのでご紹介します。</p>\n<h2 id=\"フレームレート調整\" style=\"position:relative;\"><a href=\"#%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AC%E3%83%BC%E3%83%88%E8%AA%BF%E6%95%B4\" aria-label=\"フレームレート調整 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>フレームレート調整</h2>\n<p>なぜか、ご紹介されているコードのカメラ設定のフレームレート(1/30)だとうまくいかなかったので1/21まで下げます。なんでできないかはわかりません。</p>\n<p>Forkして修正しました。 <a href=\"https://github.com/tubone24/UGATIT/blob/movie/selfie2anime_movie.py\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/tubone24/UGATIT/blob/movie/selfie2anime_movie.py</a></p>\n<h2 id=\"動かす\" style=\"position:relative;\"><a href=\"#%E5%8B%95%E3%81%8B%E3%81%99\" aria-label=\"動かす permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>動かす</h2>\n<p>Forkして修正したコードをJetson nano上にcloneして実行してみます。</p>\n<p>clone先以外は本家と同じです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git clone https://github.com/tubone24/UGATIT.git\n$ cd UGATIT\n$ git checkout -b movie origin/movie\n$ ./get_haarlike.sh</code></pre></div>\n<p>本家で紹介されているUGATIT selfie2anime[pre-trained]のリンクがきれていたので下記Kaggleからダウンロードくださいませ。</p>\n<p><a href=\"https://www.kaggle.com/t04glovern/ugatit-selfie2anime-pretrained\" target=\"_blank\" rel=\"noopener noreferrer\">UGATIT selfie2anime [pre-trained]</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ unzip ugatit-selfie2anime-pretrained.zip</code></pre></div>\n<p>準備ができたので実行します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ python3 selfie2anime_movie.py --light=True -d='jetson_nano_raspi_cam'</code></pre></div>\n<p>カメラで私の顔を認識してみたところ、私の顔が可愛くないキャラクターに変換されました。</p>\n<p><img src=\"https://i.imgur.com/lPOtTYa.png\" alt=\"img\"></p>\n<p>ちょっともたつきますが、ちゃんとリアルタイムに処理しているようです。</p>\n<p><img src=\"https://i.imgur.com/pFHv6zC.gif\" alt=\"img\"></p>","fields":{"slug":"2020/04/27/anime-face"},"frontmatter":{"tags":["機械学習","Jetson nano","SainSmart IMX219"],"templateKey":"blog-post","slug":"2020/04/27/anime-face","id":null,"title":"Jetson nano + SainSmart IMX219でアニメ風自撮り動画を作る","url":"2020/04/27/anime-face","date":"2020-04-27T04:28:55.121Z","description":"Jetson nanoでアニメ風自撮り動画を作る","headerImage":"https://i.imgur.com/lPOtTYa.png","year":"2020","month":"04"}}}],"pathPrefix":"pages","first":false,"last":false,"index":4,"pageCount":11,"additionalContext":{"totalCount":110}}},"staticQueryHashes":["2959249232"]}