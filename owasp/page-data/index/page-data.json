{"componentChunkName":"component---src-templates-index-tsx","path":"/","result":{"pageContext":{"totalCount":110,"group":[{"node":{"id":"f8a761bf-21a9-5809-9fb6-ecc362cb6f15","html":"<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<p>ついにターミナル周りを更新します。</p>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#wezs-terminal-emulator%E3%81%A8%E3%81%AF\">Wez's Terminal Emulatorとは？</a></p>\n</li>\n<li>\n<p><a href=\"#%E4%BB%8A%E3%81%BE%E3%81%A7%E3%81%AE%E7%92%B0%E5%A2%83\">今までの環境</a></p>\n</li>\n<li>\n<p><a href=\"#%E4%B9%97%E3%82%8A%E6%8F%9B%E3%81%88%E3%81%A6%E3%81%BF%E3%81%9F\">乗り換えてみた</a></p>\n<ul>\n<li><a href=\"#ssh-connection\">SSH Connection</a></li>\n<li><a href=\"#target_triple\">target_triple</a></li>\n<li><a href=\"#%E3%82%BF%E3%83%96%E3%81%AE%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA\">タブのカスタマイズ</a></li>\n<li><a href=\"#%E5%8F%B3%E3%82%B9%E3%83%86%E3%83%BC%E3%82%BF%E3%82%B9\">右ステータス</a></li>\n<li><a href=\"#%E3%81%9D%E3%81%AE%E4%BB%96\">その他</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E7%B5%90%E8%AB%96\">結論</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%8F%82%E8%80%83\">参考</a></p>\n</li>\n</ul>\n</div>\n<h2 id=\"wezs-terminal-emulatorとは\" style=\"position:relative;\"><a href=\"#wezs-terminal-emulator%E3%81%A8%E3%81%AF\" aria-label=\"wezs terminal emulatorとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wez's Terminal Emulatorとは？</h2>\n<p><a href=\"https://wezfurlong.org/wezterm/\" target=\"_blank\" rel=\"noopener noreferrer\">Wez's Terminal Emulator</a>とは<a href=\"https://github.com/wez/\" target=\"_blank\" rel=\"noopener noreferrer\">Wez</a>さんの作ったRust製のターミナルです。</p>\n<p>ターミナルは正直そこまで違いがないと思ってましたが、weztermの主な特徴としてGPUアクセラレータとクロスプラットフォームがあるらしいです。</p>\n<p>クロスプラットフォームについては私はWindows,Mac両方使うことが多いので助かりますね。</p>\n<p>GPUアクセラレータは以前のターミナル（iTerm2）で不満もなかったので感動が味わえるか不安です。ただiTerm2はなんとなくもっさりしている気がしてます。気がしているだけと割り切ってましたが調べてみると他の皆さんももっさりしていることに不満を申しているっぽいです[要出典]。</p>\n<h2 id=\"今までの環境\" style=\"position:relative;\"><a href=\"#%E4%BB%8A%E3%81%BE%E3%81%A7%E3%81%AE%E7%92%B0%E5%A2%83\" aria-label=\"今までの環境 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>今までの環境</h2>\n<p>今までずっとMacではiTerm2にtmuxを指してターミナルとして使ってました。</p>\n<p>特に不満もなかったのでコンフィグの更新はあるものの、なんだかんだ8年くらいこの構成だと思います。</p>\n<p>というよりこの手の設定を構築してしまうと更新が億劫になるんですよね。</p>\n<p><img src=\"https://i.imgur.com/WeeoXsW.png\" alt=\"img\"></p>\n<p>ただそこまでカスタマイズはしてなくてちょっとキーバインドを変えているのとコピーモードを使いやすくしているのとステータスバーを表示させているくらいです。</p>\n<p>同じような使い心地でweztermに乗り換えられれば大満足です。</p>\n<h2 id=\"乗り換えてみた\" style=\"position:relative;\"><a href=\"#%E4%B9%97%E3%82%8A%E6%8F%9B%E3%81%88%E3%81%A6%E3%81%BF%E3%81%9F\" aria-label=\"乗り換えてみた permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>乗り換えてみた</h2>\n<p><img src=\"https://i.imgur.com/h5RiIEv.png\" alt=\"img\"></p>\n<p>見た目はこんな感じになりました。</p>\n<p>コンフィグは<a href=\"https://www.lua.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Lua</a>で作るのですが<a href=\"https://wezfurlong.org/wezterm/config/files.html\" target=\"_blank\" rel=\"noopener noreferrer\">ドキュメント</a>がしっかりしているのとWezさんが結構GitHub Issueでコンフィグ例を公開しているのでめちゃくちゃ参考になりました。</p>\n<p>下記に軽くだけ設定を共有します。</p>\n<h3 id=\"ssh-connection\" style=\"position:relative;\"><a href=\"#ssh-connection\" aria-label=\"ssh connection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSH Connection</h3>\n<p>正直最近コンテナ仕事が多くて直にサーバーにログインする機会がそこまで多くないのですが\nあらかじめweztermをサーバーに入れておけば<a href=\"https://wezfurlong.org/wezterm/multiplexing.html#multiplexing\" target=\"_blank\" rel=\"noopener noreferrer\">ターミナルマルチプレクサ</a>でセッションを作ることができます。\nしかも<a href=\"https://wezfurlong.org/wezterm/config/lua/wezterm/enumerate_ssh_hosts.html\" target=\"_blank\" rel=\"noopener noreferrer\">enumerate_ssh_hosts</a>を使うことで勝手に <strong>~/.ssh/config</strong> を読み込んでくれて設定してくれます。\n本機能を使うのであればぜひとも使いたいですね。</p>\n<div class=\"gatsby-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> wezterm <span class=\"token operator\">=</span> require <span class=\"token string\">'wezterm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- SSH Domains</span>\n<span class=\"token keyword\">local</span> ssh_domains <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> host<span class=\"token punctuation\">,</span> config <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>wezterm<span class=\"token punctuation\">.</span><span class=\"token function\">enumerate_ssh_hosts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n    table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>ssh_domains<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        name <span class=\"token operator\">=</span> host<span class=\"token punctuation\">,</span>\n        remote_address <span class=\"token operator\">=</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">\"hostname\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        username <span class=\"token operator\">=</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        ssh_option <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> identityfile <span class=\"token operator\">=</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">\"identityfile\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<h3 id=\"target_triple\" style=\"position:relative;\"><a href=\"#target_triple\" aria-label=\"target_triple permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>target_triple</h3>\n<p>クロスプラットフォームが売りなので、プラットフォームを<a href=\"https://doc.rust-lang.org/nightly/rustc/platform-support.html\" target=\"_blank\" rel=\"noopener noreferrer\">Rust target triple</a>で確認してコンフィグを分岐させることができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\"><span class=\"token comment\">-- デフォルト(ほぼLinux)はbash</span>\n<span class=\"token keyword\">local</span> default_prog <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'bash'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-l'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">-- OS環境差分吸収</span>\n<span class=\"token keyword\">if</span> wezterm<span class=\"token punctuation\">.</span>target_triple <span class=\"token operator\">==</span> <span class=\"token string\">\"x86_64-pc-windows-msvc\"</span> <span class=\"token keyword\">then</span>\n  default_prog <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'pwsh.exe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-NoLogo'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token keyword\">if</span> wezterm<span class=\"token punctuation\">.</span>target_triple <span class=\"token operator\">==</span> <span class=\"token string\">\"x86_64-apple-darwin\"</span> <span class=\"token keyword\">then</span> \n  default_prog <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'zsh'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-l'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">end</span>\n</code></pre></div>\n<h3 id=\"タブのカスタマイズ\" style=\"position:relative;\"><a href=\"#%E3%82%BF%E3%83%96%E3%81%AE%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA\" aria-label=\"タブのカスタマイズ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>タブのカスタマイズ</h3>\n<p>タブのタイトルもカスタマイズ可能です。</p>\n<p>タイトルにはタブ番号、ディレクトリ、プロセス名を出すようにしてます。</p>\n<p>あと、pane分割を実施した際に特定のpaneにズームした際にわかるようにしてます。</p>\n<p>また、プロセス名によってアイコンを変えてます。そこまでバリエーション作ってませんが...。</p>\n<p><img src=\"https://i.imgur.com/NOGpKZf.png\" alt=\"img\"></p>\n<div class=\"gatsby-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\"><span class=\"token comment\">-- Equivalent to POSIX basename(3)</span>\n<span class=\"token comment\">-- Given \"/foo/bar\" returns \"bar\"</span>\n<span class=\"token comment\">-- Given \"c:\\\\foo\\\\bar\" returns \"bar\"</span>\n<span class=\"token keyword\">local</span> <span class=\"token keyword\">function</span> <span class=\"token function\">basename</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">gsub</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token string\">\"(.*[/\\\\])(.*)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%2\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\">-- タブのカスタマイズ</span>\nwezterm<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"format-tab-title\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">,</span> tabs<span class=\"token punctuation\">,</span> panes<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">,</span> hover<span class=\"token punctuation\">,</span> max_width<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">-- プロセスに合わせてアイコン表示</span>\n\t<span class=\"token keyword\">local</span> nerd_icons <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t\tnvim <span class=\"token operator\">=</span> wezterm<span class=\"token punctuation\">.</span>nerdfonts<span class=\"token punctuation\">.</span>custom_vim<span class=\"token punctuation\">,</span>\n\t\tvim <span class=\"token operator\">=</span> wezterm<span class=\"token punctuation\">.</span>nerdfonts<span class=\"token punctuation\">.</span>custom_vim<span class=\"token punctuation\">,</span>\n\t\tbash <span class=\"token operator\">=</span> wezterm<span class=\"token punctuation\">.</span>nerdfonts<span class=\"token punctuation\">.</span>dev_terminal<span class=\"token punctuation\">,</span>\n\t\tzsh <span class=\"token operator\">=</span> wezterm<span class=\"token punctuation\">.</span>nerdfonts<span class=\"token punctuation\">.</span>dev_terminal<span class=\"token punctuation\">,</span>\n\t\tssh <span class=\"token operator\">=</span> wezterm<span class=\"token punctuation\">.</span>nerdfonts<span class=\"token punctuation\">.</span>mdi_server<span class=\"token punctuation\">,</span>\n\t\ttop <span class=\"token operator\">=</span> wezterm<span class=\"token punctuation\">.</span>nerdfonts<span class=\"token punctuation\">.</span>mdi_monitor<span class=\"token punctuation\">,</span>\n        docker <span class=\"token operator\">=</span> wezterm<span class=\"token punctuation\">.</span>nerdfonts<span class=\"token punctuation\">.</span>dev_docker<span class=\"token punctuation\">,</span>\n        node <span class=\"token operator\">=</span> wezterm<span class=\"token punctuation\">.</span>nerdfonts<span class=\"token punctuation\">.</span>dev_nodejs_small<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">local</span> zoomed <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token keyword\">if</span> tab<span class=\"token punctuation\">.</span>active_pane<span class=\"token punctuation\">.</span>is_zoomed <span class=\"token keyword\">then</span>\n      zoomed <span class=\"token operator\">=</span> <span class=\"token string\">\"[Z] \"</span>\n    <span class=\"token keyword\">end</span>\n\t<span class=\"token keyword\">local</span> pane <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">.</span>active_pane\n\t<span class=\"token keyword\">local</span> process_name <span class=\"token operator\">=</span> <span class=\"token function\">basename</span><span class=\"token punctuation\">(</span>pane<span class=\"token punctuation\">.</span>foreground_process_name<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">local</span> icon <span class=\"token operator\">=</span> nerd_icons<span class=\"token punctuation\">[</span>process_name<span class=\"token punctuation\">]</span>\n\t<span class=\"token keyword\">local</span> index <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">.</span>tab_index <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\t<span class=\"token keyword\">local</span> cwd <span class=\"token operator\">=</span> <span class=\"token function\">basename</span><span class=\"token punctuation\">(</span>pane<span class=\"token punctuation\">.</span>current_working_dir<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">-- 例) 1:project_dir | zsh</span>\n\t<span class=\"token keyword\">local</span> title <span class=\"token operator\">=</span> index <span class=\"token operator\">..</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">..</span> cwd <span class=\"token operator\">..</span> <span class=\"token string\">\"  | \"</span> <span class=\"token operator\">..</span> process_name\n\t<span class=\"token keyword\">if</span> icon <span class=\"token operator\">~=</span> <span class=\"token keyword\">nil</span> <span class=\"token keyword\">then</span>\n\t\ttitle <span class=\"token operator\">=</span> icon <span class=\"token operator\">..</span> <span class=\"token string\">\"  \"</span> <span class=\"token operator\">..</span> zoomed <span class=\"token operator\">..</span> title\n\t<span class=\"token keyword\">end</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token punctuation\">{</span> Text <span class=\"token operator\">=</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">..</span> title <span class=\"token operator\">..</span> <span class=\"token string\">\" \"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"右ステータス\" style=\"position:relative;\"><a href=\"#%E5%8F%B3%E3%82%B9%E3%83%86%E3%83%BC%E3%82%BF%E3%82%B9\" aria-label=\"右ステータス permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>右ステータス</h3>\n<p>ほぼ<a href=\"https://github.com/wez/wezterm/issues/500\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/wez/wezterm/issues/500</a>のパクリですが右ステータスも作ることができます。</p>\n<p>リモートで仕事しているとWebミーティングに遅刻しないように秒まで刻むような生活になってしまったので秒数まで時刻表示させてます。</p>\n<div class=\"gatsby-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\"><span class=\"token comment\">-- 右ステータスのカスタマイズ</span>\nwezterm<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update-right-status\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> pane<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> cells <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">-- 現在のディレクトリ</span>\n    <span class=\"token keyword\">local</span> cwd_uri <span class=\"token operator\">=</span> pane<span class=\"token punctuation\">:</span><span class=\"token function\">get_current_working_dir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> cwd_uri <span class=\"token keyword\">then</span>\n      cwd_uri <span class=\"token operator\">=</span> cwd_uri<span class=\"token punctuation\">:</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">local</span> slash <span class=\"token operator\">=</span> cwd_uri<span class=\"token punctuation\">:</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">local</span> cwd <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n      <span class=\"token keyword\">local</span> hostname <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n      <span class=\"token keyword\">local</span> leader <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n      <span class=\"token keyword\">if</span> window<span class=\"token punctuation\">:</span><span class=\"token function\">leader_is_active</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">then</span>\n        leader <span class=\"token operator\">=</span> <span class=\"token string\">'LEADER'</span>\n      <span class=\"token keyword\">end</span>\n      <span class=\"token comment\">-- paneの累計IDを取得</span>\n      <span class=\"token keyword\">local</span> pane_id <span class=\"token operator\">=</span> pane<span class=\"token punctuation\">:</span><span class=\"token function\">pane_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> slash <span class=\"token keyword\">then</span>\n        hostname <span class=\"token operator\">=</span> cwd_uri<span class=\"token punctuation\">:</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> slash<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">local</span> dot <span class=\"token operator\">=</span> hostname<span class=\"token punctuation\">:</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[.]\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> dot <span class=\"token keyword\">then</span>\n          hostname <span class=\"token operator\">=</span> hostname<span class=\"token punctuation\">:</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> dot<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">end</span>\n        cwd <span class=\"token operator\">=</span> cwd_uri<span class=\"token punctuation\">:</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>slash<span class=\"token punctuation\">)</span>\n  \n        table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>cells<span class=\"token punctuation\">,</span> cwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>cells<span class=\"token punctuation\">,</span> pane_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>cells<span class=\"token punctuation\">,</span> leader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">end</span>\n  \n    <span class=\"token comment\">-- 時刻表示</span>\n    <span class=\"token keyword\">local</span> date <span class=\"token operator\">=</span> wezterm<span class=\"token punctuation\">.</span><span class=\"token function\">strftime</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%m/%-d %H:%M:%S %a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>cells<span class=\"token punctuation\">,</span> wezterm<span class=\"token punctuation\">.</span>nerdfonts<span class=\"token punctuation\">.</span>mdi_clock <span class=\"token operator\">..</span> <span class=\"token string\">'  '</span> <span class=\"token operator\">..</span> date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n    <span class=\"token comment\">-- バッテリー</span>\n    <span class=\"token keyword\">for</span> _<span class=\"token punctuation\">,</span> b <span class=\"token keyword\">in</span> <span class=\"token function\">ipairs</span><span class=\"token punctuation\">(</span>wezterm<span class=\"token punctuation\">.</span><span class=\"token function\">battery_info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n      table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>cells<span class=\"token punctuation\">,</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.0f%%\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>state_of_charge <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span>\n  \n    <span class=\"token comment\">-- The powerline &lt; symbol</span>\n    <span class=\"token keyword\">local</span> LEFT_ARROW <span class=\"token operator\">=</span> utf8<span class=\"token punctuation\">.</span><span class=\"token function\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xe0b3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">-- The filled in variant of the &lt; symbol</span>\n    <span class=\"token keyword\">local</span> SOLID_LEFT_ARROW <span class=\"token operator\">=</span> utf8<span class=\"token punctuation\">.</span><span class=\"token function\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xe0b2</span><span class=\"token punctuation\">)</span>\n  \n    <span class=\"token comment\">-- Color palette for the backgrounds of each cell</span>\n    <span class=\"token keyword\">local</span> colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"#3c1361\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"#52307c\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"#663a82\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"#7c5295\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"#b491c8\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  \n    <span class=\"token comment\">-- Foreground color for the text across the fade</span>\n    <span class=\"token keyword\">local</span> text_fg <span class=\"token operator\">=</span> <span class=\"token string\">\"#c0c0c0\"</span><span class=\"token punctuation\">;</span>\n  \n    <span class=\"token comment\">-- The elements to be formatted</span>\n    <span class=\"token keyword\">local</span> elements <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">-- How many cells have been formatted</span>\n    <span class=\"token keyword\">local</span> num_cells <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  \n    <span class=\"token comment\">-- Translate a cell into elements</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">push</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> is_last<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">local</span> cell_no <span class=\"token operator\">=</span> num_cells <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n      table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>Foreground<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Color<span class=\"token operator\">=</span>text_fg<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>Background<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Color<span class=\"token operator\">=</span>colors<span class=\"token punctuation\">[</span>cell_no<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>Text<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token operator\">..</span>text<span class=\"token operator\">..</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_last <span class=\"token keyword\">then</span>\n        table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>Foreground<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Color<span class=\"token operator\">=</span>colors<span class=\"token punctuation\">[</span>cell_no<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>Text<span class=\"token operator\">=</span>SOLID_LEFT_ARROW<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">end</span>\n      num_cells <span class=\"token operator\">=</span> num_cells <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">end</span>\n  \n    <span class=\"token keyword\">while</span> <span class=\"token operator\">#</span>cells <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">do</span>\n      <span class=\"token keyword\">local</span> cell <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>cells<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">push</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">,</span> <span class=\"token operator\">#</span>cells <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span>\n  \n    window<span class=\"token punctuation\">:</span><span class=\"token function\">set_right_status</span><span class=\"token punctuation\">(</span>wezterm<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"その他\" style=\"position:relative;\"><a href=\"#%E3%81%9D%E3%81%AE%E4%BB%96\" aria-label=\"その他 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>その他</h3>\n<p>その他の設定値はreturnで返してあげれば設定できます。</p>\n<p>カラースキーマ―は<a href=\"https://wezfurlong.org/wezterm/colorschemes/v/index.html?highlight=VibrantInk#vibrantink\" target=\"_blank\" rel=\"noopener noreferrer\">VibrantInk</a>を使ってます。</p>\n<p>一時期コントラストの薄いスキーマ―使ってましたがやっぱりハイコントラストがかっこいいですね。個人の主観です。</p>\n<p>あと、個人的にマストかなと思うのがvisual_bellです。Macの音声をmuteにしているときにも警告が可視化できたほうがいいと考えているからです。</p>\n<p>ちょっと目がチカチカする設定なのでもしかしたら今後変更するかもしれません。</p>\n<div class=\"gatsby-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">-- https://wezfurlong.org/wezterm/colorschemes/v/index.html?highlight=VibrantInk#vibrantink</span>\n    color_scheme <span class=\"token operator\">=</span> <span class=\"token string\">'VibrantInk'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">-- 背景透過</span>\n    window_background_opacity <span class=\"token operator\">=</span> <span class=\"token number\">0.91</span><span class=\"token punctuation\">,</span>\n    adjust_window_size_when_changing_font_size <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">,</span>\n    window_close_confirmation <span class=\"token operator\">=</span> <span class=\"token string\">'AlwaysPrompt'</span><span class=\"token punctuation\">,</span>\n    animation_fps <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    default_cursor_style <span class=\"token operator\">=</span> <span class=\"token string\">'BlinkingBlock'</span><span class=\"token punctuation\">,</span>\n    enable_scroll_bar <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">,</span>\n    default_prog <span class=\"token operator\">=</span> default_prog<span class=\"token punctuation\">,</span>\n    ssh_domains <span class=\"token operator\">=</span> ssh_domains<span class=\"token punctuation\">,</span>\n    visual_bell <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        fade_in_function <span class=\"token operator\">=</span> <span class=\"token string\">'EaseIn'</span><span class=\"token punctuation\">,</span>\n        fade_in_duration_ms <span class=\"token operator\">=</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span>\n        fade_out_function <span class=\"token operator\">=</span> <span class=\"token string\">'EaseOut'</span><span class=\"token punctuation\">,</span>\n        fade_out_duration_ms <span class=\"token operator\">=</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        visual_bell <span class=\"token operator\">=</span> <span class=\"token string\">'#0A0A0A'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    launch_menu <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">{</span>\n            label <span class=\"token operator\">=</span> <span class=\"token string\">\"Zsh\"</span><span class=\"token punctuation\">,</span>\n            args <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"zsh\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          label <span class=\"token operator\">=</span> <span class=\"token string\">\"PowerShell 7\"</span><span class=\"token punctuation\">,</span>\n          args <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"pwsh\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>キーバインドはとりあえずデフォルトのままにしてます。これから頑張って覚えていこうと思います！</p>\n<p>コピーモードさえちゃんと使えこなせればほぼクリアと思ってます。</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>久しぶりに開発環境を更新しましたが楽しかったです。</p>\n<h2 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h2>\n<ul>\n<li><a href=\"https://wezfurlong.org/wezterm/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">Wez's Terminal Emulator Docs</a></li>\n<li><a href=\"https://github.com/wez/wezterm/issues/500\" target=\"_blank\" rel=\"noopener noreferrer\">Tmux Like Status Bar</a></li>\n<li><a href=\"https://github.com/mbadolato/iTerm2-Color-Schemes#screenshots\" target=\"_blank\" rel=\"noopener noreferrer\">iTerm2-Color-Schemes</a></li>\n</ul>","fields":{"slug":"2022/08/29/wezterm"},"frontmatter":{"tags":["terminal","開発環境"],"templateKey":"blog-post","slug":"2022/08/29/wezterm","id":null,"title":"8年くらい使ってきたiTerm2 + tmuxの構成からWez's Terminalに移行してみる","url":"2022/08/29/wezterm","date":"2022-08-29T13:00:24.971Z","description":"8年くらい使ってきたiTerm2 + tmuxの構成からWez's Terminalに移行してみる","headerImage":"https://i.imgur.com/h5RiIEv.png","year":"2022","month":"08"}}},{"node":{"id":"7bdfff1b-ceb9-534a-ae60-66207cfbc722","html":"<p>エラーは突然に。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#renovate\">Renovate</a></li>\n<li><a href=\"#artifact-update-problem\">Artifact update problem</a></li>\n<li><a href=\"#%E7%B5%90%E8%AB%96\">結論</a></li>\n</ul>\n</div>\n<h2 id=\"renovate\" style=\"position:relative;\"><a href=\"#renovate\" aria-label=\"renovate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Renovate</h2>\n<p><a href=\"https://www.whitesourcesoftware.com/free-developer-tools/renovate/\" target=\"_blank\" rel=\"noopener noreferrer\">Renovate</a>とはプロジェクトが使っているライブラリの依存関係 (Dependency) の更新を自動化するツールです。</p>\n<p>さまざまな言語に対応しており、もちろんnpmにも対応してます。</p>\n<p>JavaScriptのライブラリ更新は特に追いかけるのが大変なのでこのブログでもRenovateを使ってライブラリの依存関係をできるだけ最新に保つようにしてます。</p>\n<p>Renovateがライブラリを更新する際はpackage.jsonやpackage-loc.json、yarn.lockなどの依存グラフを保存しているファイルを直接変更の上、PRの形で更新依頼を作成します。</p>\n<p>なので、CIでテストがきちんと回るようにしていたり、PRごとにデプロイが走るような形にしていれば、その成功を持って機械的にmerge(auto merge機能もあります)できます。便利ですね。</p>\n<h2 id=\"artifact-update-problem\" style=\"position:relative;\"><a href=\"#artifact-update-problem\" aria-label=\"artifact update problem permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Artifact update problem</h2>\n<p>ところが、ある日を境にRenovateが作るPRが軒並みCI Checkに失敗する事象が発生しました。</p>\n<p>Renovate artifactと呼ばれるcheckが失敗していてPRコメントには次のようなメッセージが出てました。</p>\n<p><img src=\"https://i.imgur.com/61v14dU.png\" alt=\"renovate error\"></p>\n\n        <div class=\"gatsby-code-title\">\n          <span>renovateコメント</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">\nRenovate failed to update an artifact related to this branch. You probably <span class=\"token keyword\">do</span> not want to merge this PR as-is.\n\n♻ Renovate will retry this branch, including artifacts, only when one of the following happens:\n\nany of the package files <span class=\"token keyword\">in</span> this branch needs updating, or\nthe branch becomes conflicted, or\nyou click the rebase/retry checkbox <span class=\"token keyword\">if</span> found above, or\nyou <span class=\"token function\">rename</span> this PR's title to start with <span class=\"token string\">\"rebase!\"</span> to trigger it manually\nThe artifact failure details are included below:\n\nFile name: package-lock.json\n\n\n<span class=\"token function\">npm</span> notice \n<span class=\"token function\">npm</span> notice New minor version of <span class=\"token function\">npm</span> available<span class=\"token operator\">!</span> <span class=\"token number\">8.1</span>.2 -<span class=\"token operator\">></span> <span class=\"token number\">8.7</span>.0\n<span class=\"token function\">npm</span> notice Changelog: <span class=\"token operator\">&lt;</span>https://github.com/npm/cli/releases/tag/v8.7.<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span>\n<span class=\"token function\">npm</span> notice Run <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g npm@8.7.0<span class=\"token variable\">`</span></span> to update<span class=\"token operator\">!</span>\n<span class=\"token function\">npm</span> notice \n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> code ERESOLVE\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> ERESOLVE could not resolve\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> \n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> While resolving: gatsby-plugin-netlify@3.14.0\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> Found: gatsby@4.7.0\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> node_modules/gatsby\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   gatsby@<span class=\"token string\">\"4.7.0\"</span> from the root project\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   peer gatsby@<span class=\"token string\">\"^2.0.0 || ^3.0.0 || ^4.0.0\"</span> from gatsby-plugin-algolia@0.26.0\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   node_modules/gatsby-plugin-algolia\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>     gatsby-plugin-algolia@<span class=\"token string\">\"0.26.0\"</span> from the root project\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   <span class=\"token number\">27</span> <span class=\"token function\">more</span> <span class=\"token punctuation\">(</span>gatsby-plugin-cdn-files, gatsby-plugin-feed, <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">)</span>\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> \n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> Could not resolve dependency:\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> peer gatsby@<span class=\"token string\">\"^3.0.0\"</span> from gatsby-plugin-netlify@3.14.0\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> node_modules/gatsby-plugin-netlify\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   gatsby-plugin-netlify@<span class=\"token string\">\"3.14.0\"</span> from the root project\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> \n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> Conflicting peer dependency: gatsby@3.14.6\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> node_modules/gatsby\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   peer gatsby@<span class=\"token string\">\"^3.0.0\"</span> from gatsby-plugin-netlify@3.14.0\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   node_modules/gatsby-plugin-netlify\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>     gatsby-plugin-netlify@<span class=\"token string\">\"3.14.0\"</span> from the root project\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> \n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> Fix the upstream dependency conflict, or retry\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> this <span class=\"token builtin class-name\">command</span> with --force, or --legacy-peer-deps\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> to accept an incorrect <span class=\"token punctuation\">(</span>and potentially broken<span class=\"token punctuation\">)</span> dependency resolution.\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> \n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> See /tmp/renovate-cache/others/npm/eresolve-report.txt <span class=\"token keyword\">for</span> a full report.\n\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> A complete log of this run can be found in:\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>     /tmp/renovate-cache/others/npm/_logs/2022-04-24T15_15_32_316Z-debug-0.log</code></pre></div>\n<p>こちらについていくつかIssuesとかを確認してみたのですが、これといって参考になるものもなくどうしようかなと思っていたところ、ちゃんとPRコメントで何が原因かエラーが出てました。</p>\n<p>ちゃんとエラーを見る癖をつけたいものですね。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>renovateError</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> ERESOLVE could not resolve\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> \n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> While resolving: gatsby-plugin-netlify@3.14.0\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> Found: gatsby@4.7.0\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> node_modules/gatsby\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   gatsby@<span class=\"token string\">\"4.7.0\"</span> from the root project\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   peer gatsby@<span class=\"token string\">\"^2.0.0 || ^3.0.0 || ^4.0.0\"</span> from gatsby-plugin-algolia@0.26.0\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   node_modules/gatsby-plugin-algolia\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>     gatsby-plugin-algolia@<span class=\"token string\">\"0.26.0\"</span> from the root project\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   <span class=\"token number\">27</span> <span class=\"token function\">more</span> <span class=\"token punctuation\">(</span>gatsby-plugin-cdn-files, gatsby-plugin-feed, <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">)</span>\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> \n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> Could not resolve dependency:\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> peer gatsby@<span class=\"token string\">\"^3.0.0\"</span> from gatsby-plugin-netlify@3.14.0\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> node_modules/gatsby-plugin-netlify\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   gatsby-plugin-netlify@<span class=\"token string\">\"3.14.0\"</span> from the root project\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> \n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> Conflicting peer dependency: gatsby@3.14.6\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> node_modules/gatsby\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   peer gatsby@<span class=\"token string\">\"^3.0.0\"</span> from gatsby-plugin-netlify@3.14.0\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>   node_modules/gatsby-plugin-netlify\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span>     gatsby-plugin-netlify@<span class=\"token string\">\"3.14.0\"</span> from the root project\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> \n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> Fix the upstream dependency conflict, or retry\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> this <span class=\"token builtin class-name\">command</span> with --force, or --legacy-peer-deps\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> to accept an incorrect <span class=\"token punctuation\">(</span>and potentially broken<span class=\"token punctuation\">)</span> dependency resolution.</code></pre></div>\n<p>本ブログで使っているGatsbyのバージョンは4.7.0ですが、プラグインのgatsby-plugin-netlifyが3.14.0のバージョンで、それがgatsbyのv3系に依存しているので依存関係が解決できません！という何ともよくあるエラーでした。</p>\n<p>にしても、こちらで組んでいるCIでは特にそんなエラーも出ずに完了しているところを見ると何が原因なんでしょうね...。偉い人教えてください。</p>\n<p>あと、Renovate自体がgatsby-plugin-netlifyのバージョンアップのPRを作らなかったのも気になります...わからん。</p>\n<p>エラーの原因がわかれば直すのは簡単です。package.jsonを編集して、gatsby-plugin-netlifyのバージョンをgatsby v.4.7.0に対応しているところまで手動で上げれば良いだけです。</p>\n<p>その後npm installしてpackage-lock.jsonの依存グラフを直してあげれば完成です。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>package.json</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"gatsby\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"4.7.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"gatsby-plugin-netlify\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"4.3.0\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">}</span></code></pre></div>\n<p>これでエラーは解消されました。</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>なんか今回の記事はあっさりとしたものになってしまいましたが、Renovateもこういったエラーを吐くことがあるので、その際は出力されているコンソールログを見て手元で修正する必要がありそうですよ。という共有でした。</p>","fields":{"slug":"2022/04/25/renovate-error"},"frontmatter":{"tags":["Renovate"],"templateKey":"blog-post","slug":"2022/04/25/renovate-error","id":null,"title":"Renovateの作るPRでArtifact update problemが出た時の対処法","url":"2022/04/25/renovate-error","date":"2022-04-25T14:54:39.263Z","description":"ライブラリを定期的にアップデートしてくれる優れもの、Renovateについて変なエラーが出てそれを直した際の直し方を共有。","headerImage":"https://i.imgur.com/61v14dU.png","year":"2022","month":"04"}}},{"node":{"id":"f22d4492-aa79-5987-9f69-c2b9d2a1516c","html":"<p>日本語って難しいですね。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#textlint\">textlint</a></li>\n<li><a href=\"#ci%E3%81%AB%E4%B9%97%E3%81%9B%E3%82%8B\">CIに乗せる</a></li>\n<li><a href=\"#%E8%BF%BD%E5%8A%A0%E3%81%AE%E6%94%B9%E5%96%84\">追加の改善</a></li>\n<li><a href=\"#%E7%B5%90%E8%AB%96\">結論</a></li>\n</ul>\n</div>\n<h2 id=\"textlint\" style=\"position:relative;\"><a href=\"#textlint\" aria-label=\"textlint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>textlint</h2>\n<p>今までこのブログは日本語として伝わりにくい表現や表記揺れをあまり意識してなかったのですが、色々あってちゃんとした技術情報の発信のためには正しい日本語を使うことも大切なんだなと感じたこの頃です。</p>\n<p>ただ、私は日本語をいい加減に学んでしまっているため自分の書いた文章が正しいのかどうかわからないのである程度自動で校正してくれるツールを探したところtextlintというツールがあることを知りました。</p>\n<p>textlintとは、JavaScriptで書かれたオープンソースのテキスト改行ユーティリティで文章をあらかじめ定義したルールに基づいて校正してくれます。</p>\n<p>このブログはTypeScript製なのでnpmでtextlintを入れてしまえば良さそうです。</p>\n<p>SmartHRさんが<a href=\"https://shanaiho.smarthr.co.jp/n/n881866630eda\" target=\"_blank\" rel=\"noopener noreferrer\">プリセットを公開</a>していて、これがかなり便利なので基本的にばこちらを使っていきます。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>npm</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev textlint textlint-filter-rule-allowlist textlint-filter-rule-comments textlint-rule-aws-spellcheck textlint-rule-preset-smarthr textlint-rule-prh textlint-rule-terminology textlint-rule-no-hoso-kinshi-yogo textlint-rule-ja-no-inappropriate-words textlint-rule-no-mixed-zenkaku-and-hankaku-alphabet textlint-rule-no-start-duplicated-conjunction</code></pre></div>\n<p>textlintの設定は <strong>.textlintrc</strong>で設定します。</p>\n<p>次のような設定にしました。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>.textlintrc</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"preset-smarthr\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"sentence-length\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"ja-no-mixed-period\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"periodMark\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"。\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"allowPeriodMarks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"、\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"↓\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"？\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"・\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"`\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"…\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"allowEmojiAtEnd\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"prh\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"rulePaths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"dict/prh_tubone_blog.yml\"</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"no-start-duplicated-conjunction\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"interval\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"no-mixed-zenkaku-and-hankaku-alphabet\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"no-hoso-kinshi-yogo\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"ja-no-inappropriate-words\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"terminology\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"defaultTerms\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"skip\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Blockquote\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@textlint-rule/no-duplicate-abbr\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"filters\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"comments\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"allowlist\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"allowlistConfigPaths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./textlint-allow-list.yml\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>基本的にはtextlint-rule-preset-smarthrをベースに校正を実施します。</p>\n<p>ただし本ブログの構成上、<strong>文章途中</strong>→<strong>コード</strong>→<strong>文章文末まで</strong>という構成が多いため<strong>ja-no-mixed-period</strong>の<strong>allowPeriodMarks</strong>に「、」や「↓」を追加してます。</p>\n<p>また、可愛らしい表現を心がけるため<strong>allowEmojiAtEnd</strong>を許可にして💦のような絵文字で文末を締めくくることができるようにしてます。(よって<a href=\"https://github.com/lostandfound/textlint-rule-no-surrogate-pair\" target=\"_blank\" rel=\"noopener noreferrer\">サロゲートペアの未使用チェックのtextlint</a>は使用してません。クレームが来たら使用することにします。)</p>\n<p>そのほか細かいルールとしては、</p>\n<!-- textlint-disable -->\n<ul>\n<li>prhを使って表記揺れをチェックします。基本はSmartHRのプリセットで押さえてますが、独自の表記揺れをYAMLで定義し設定してます。</li>\n<li>no-start-duplicated-conjunctionを使って、接続語の連続をチェックします。「また〜また〜」みたいなやつです。</li>\n<li>no-mixed-zenkaku-and-hankaku-alphabetを使って全角のアルファベットを禁止にしてます。</li>\n<li>no-hoso-kinshi-yogoを使って放送禁止用語をチェックしてます。結構引っ掛かりますので、allowlistと組み合わせて使ってます。</li>\n<li>ja-no-inappropriate-wordsを使って不適切表現をチェックしてます。</li>\n<li>terminologyを使って技術用語の表記ミスを防いでます。(Node.jsと書くべきところをnode.jsと書いている、など。)</li>\n<li>@textlint-rule/no-duplicate-abbrを使って同じ意味の重複語をチェックしてます。頭痛が痛い、みたいなやつです。</li>\n</ul>\n<p>を使ってます。</p>\n<!-- textlint-enable -->\n<p>また、filterを利用していて、</p>\n<ul>\n<li>コメントでルールの無効化を許可。</li>\n<li>allowlistで（主に放送禁止用語の）許可をしてます。 <a href=\"https://github.com/tubone24/blog/blob/master/textlint-allow-list.yml\" target=\"_blank\" rel=\"noopener noreferrer\">許可リストはこちら、</a>品がないですね。</li>\n</ul>\n<p>npm scriptへ次のようなスクリプトを仕込んであげれば簡単に校正ができるようになります。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>package.json</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"textlint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npx textlint \\\"src/content/*.md\\\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"textlint:fix\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npx textlint --fix \\\"src/content/*.md\\\"\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h2 id=\"ciに乗せる\" style=\"position:relative;\"><a href=\"#ci%E3%81%AB%E4%B9%97%E3%81%9B%E3%82%8B\" aria-label=\"ciに乗せる permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CIに乗せる</h2>\n<p>CIに乗せるときに便利なのがreviewdogです。</p>\n<p>ほぼ<a href=\"https://blog.chick-p.work/github-actions-reviewdog-textlint/\" target=\"_blank\" rel=\"noopener noreferrer\">こちらのブログ</a>を参考にパイプラインを作りました。ありがとうございます。</p>\n\n        <div class=\"gatsby-code-title\">\n          <span>previewDeploy.yml</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">  <span class=\"token key atrule\">textlint</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> textlint\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> reviewdog/action<span class=\"token punctuation\">-</span>setup@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">reviewdog_version</span><span class=\"token punctuation\">:</span> latest\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Cache\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/cache@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n            ~/.cache\n            ~/.npm\n            node_modules\n            .cache\n            public</span>\n          <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> runner.os <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">-</span>build<span class=\"token punctuation\">-</span>$<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> env.cache<span class=\"token punctuation\">-</span>version <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">-</span>$<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> hashFiles('<span class=\"token important\">**/package-lock.json')</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">restore-keys</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n            ${{ runner.os }}-build-${{ env.cache-version }}-${{ hashFiles('**/package-lock.json') }}\n            ${{ runner.os }}-build-\n            ${{ runner.os }}-</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Execute textlint for article\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npx textlint <span class=\"token punctuation\">-</span>f checkstyle \"src/content/<span class=\"token important\">*.md\"</span> <span class=\"token punctuation\">></span><span class=\"token punctuation\">></span> .textlint.log\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run reviewdog\n        <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> failure()\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">REVIEWDOG_GITHUB_API_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GITHUB_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          cat .textlint.log | reviewdog -f=checkstyle -name=\"textlint\" -reporter=\"github-pr-review\"</span></code></pre></div>\n<p>これで、ブログ記事を書いてPRを出すことでPRコメントで校正を実施してくれるようになりました。</p>\n<p><img src=\"https://i.imgur.com/ZRXcbaO.png\" alt=\"校正コメント\"></p>\n<h2 id=\"追加の改善\" style=\"position:relative;\"><a href=\"#%E8%BF%BD%E5%8A%A0%E3%81%AE%E6%94%B9%E5%96%84\" aria-label=\"追加の改善 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>追加の改善</h2>\n<p>GitHub Actionsでno-hoso-kinshi-yogoを使うと、辞書ファイルを提供している<a href=\"http://monoroch.net/kinshi/\" target=\"_blank\" rel=\"noopener noreferrer\">http://monoroch.net/kinshi/</a>へのアクセスが同一IPから集中するためか504 BadGatewayが出て正しく辞書ファイルを読み込むことができなくなってましたので<a href=\"https://github.com/tubone24/textlint-rule-no-hoso-kinshi-yogo\" target=\"_blank\" rel=\"noopener noreferrer\">forkして参照先URLを変更のうえ</a>利用してます。</p>\n<p>辞書ファイルをレポジトリ内に抱えてしまう実装なのでちょっと微妙な実装ですが、権利帰属をREADMEに明記したので良しとしました...🙏</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>textlintを使って良いブログライフを！</p>","fields":{"slug":"2022/4/22/textlint"},"frontmatter":{"tags":["textlint","GithubActions"],"templateKey":"blog-post","slug":"2022/4/22/textlint","id":null,"title":"ブログのプレビューデプロイ時にtextlintを導入してみた","url":"2022/4/22/textlint","date":"2022-04-21T16:30:53.413Z","description":"本ブログの表記揺れが気になったので、CIにtextlintを入れて日本語を正しくしてみます。","headerImage":"https://i.imgur.com/ZRXcbaO.png","year":"2022","month":"04"}}},{"node":{"id":"86d5c31e-85ae-5250-94c9-eb8b2b44e2c6","html":"<p>散財.</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#echo-show-15\">Echo Show 15</a></li>\n</ul>\n</div>\n<h2 id=\"echo-show-15\" style=\"position:relative;\"><a href=\"#echo-show-15\" aria-label=\"echo show 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Echo Show 15</h2>\n<p>早速散財してしまいました...。</p>\n<p>購入したのは<a href=\"https://www.amazon.co.jp/gp/product/B08MQNJC9Z/ref=ppx_yo_dt_b_asin_title_o02_s00?ie=UTF8&#x26;psc=1\" target=\"_blank\" rel=\"noopener noreferrer\">Echo Show 15 (エコーショー15) - 15.6インチフルHDスマートディスプレイ with Alexa</a>です。</p>\n<p><img src=\"https://i.imgur.com/nIkhDlt.jpg\" alt=\"echoshow15\"></p>\n<p>賃貸なので壁に釘で穴あけして壁がけできませんが、リビングの収納ボックスの上に鎮座させてます。</p>\n<p>リビングで今日の予定が出てくるのはいいですね。</p>\n<p>ぶっちゃけそれだけですね...。まだ、専用のウィジェットが充実してないので、正直カレンダーwith写真くらいの代物です。</p>\n<p>何か使い道を考えなきゃです。</p>","fields":{"slug":"2022/04/11/echo-show-15"},"frontmatter":{"tags":["IoT","Echo Show","スマートディスプレイ","Alexa"],"templateKey":"blog-post","slug":"2022/04/11/echo-show-15","id":null,"title":"Echo Show 15を買ってみての感想","url":"2022/04/11/echo-show-15","date":"2022-04-11T13:37:53.510Z","description":"話題のスマートディスプレイ、Echo Show 15を買ってみました。","headerImage":"https://i.imgur.com/nIkhDlt.jpg","year":"2022","month":"04"}}},{"node":{"id":"c160d14e-a11e-5cca-b051-fd26c29ec845","html":"<p>花粉.</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#aws-lambda-function-urls\">AWS Lambda Function URLs</a></li>\n<li><a href=\"#%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\">使ってみる</a></li>\n<li><a href=\"#%E7%A2%BA%E3%81%8B%E3%81%AB%E4%BE%BF%E5%88%A9%E3%81%A7%E3%81%AF%E3%81%82%E3%82%8A%E3%81%BE%E3%81%99%E3%81%8C\">確かに便利ではありますが...</a></li>\n<li><a href=\"#%E8%AA%8D%E8%A8%BC\">認証</a></li>\n<li><a href=\"#%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%A2%E3%82%A6%E3%83%88\">タイムアウト</a></li>\n<li><a href=\"#%E7%B5%90%E8%AB%96\">結論</a></li>\n</ul>\n</div>\n<h2 id=\"aws-lambda-function-urls\" style=\"position:relative;\"><a href=\"#aws-lambda-function-urls\" aria-label=\"aws lambda function urls permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS Lambda Function URLs</h2>\n<p><a href=\"https://aws.amazon.com/jp/about-aws/whats-new/2022/04/aws-lambda-function-urls-built-in-https-endpoints/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Lambda Function URLs</a>がリリースされました!!</p>\n<p>今まではLambdaを使ってHTTPのエンドポイントを作る際は<a href=\"https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/services-apigateway.html\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon API Gateway</a>と組み合わせて作るか<a href=\"https://aws.amazon.com/jp/blogs/news/lambda-functions-as-targets-for-application-load-balancers/\" target=\"_blank\" rel=\"noopener noreferrer\">アプリケーションロードバランサー(ALB)のターゲットにAWS Lambdaを選ぶ</a>かいずれかが必要でした。</p>\n<p>今回のアップデートでAWS Lambdaサービスの組み込み機能として、HTTPSエンドポイントをLambda単体で作成できるのでLambdaでAPIを作ったりWebhookの連携先として機能させる際にAPI Gatewayなどをかませる必要がなくなり便利かと思います。</p>\n<h2 id=\"使ってみる\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\" aria-label=\"使ってみる permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使ってみる</h2>\n<p>使い方は超簡単でLambdaを作る際に関数を作る際に関数URLを有効化にしてあげるだけです。</p>\n<p><img src=\"https://i.imgur.com/tD6NepW.png\" alt=\"コンソール\"></p>\n<p>後々の検証のため次のようなコードをデプロイしてみます。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">time</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> _reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">handler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> sleepTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>queryStringParameters <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>queryStringParameters<span class=\"token punctuation\">.</span>sleep <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      sleepTime <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>queryStringParameters<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">statusCode</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello from Lambda and sleep </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sleepTime<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!!!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>sleepTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://i.imgur.com/Fe6zbrS.png\" alt=\"lambda概要\"></p>\n<p>デプロイできると関数URLが発行されます。</p>\n<p>https://{url-id}.lambda-url-region.on.awsという不思議なTLDのURLができました。</p>\n<p>こちらにアクセスしてみると、</p>\n<p><img src=\"https://i.imgur.com/OaIFZxx.png\" alt=\"ブラウザアクセス\"></p>\n<p>確かにちゃんと関数が実行されてレスポンスが返ってきました！</p>\n<p>また、handlerの引数で取得するeventの中身も、</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">version</span><span class=\"token operator\">:</span> <span class=\"token string\">'2.0'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">routeKey</span><span class=\"token operator\">:</span> <span class=\"token string\">'$default'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">rawPath</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">rawQueryString</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'sec-fetch-mode'</span><span class=\"token operator\">:</span> <span class=\"token string\">'navigate'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'sec-fetch-site'</span><span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'accept-language'</span><span class=\"token operator\">:</span> <span class=\"token string\">'ja'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'x-forwarded-proto'</span><span class=\"token operator\">:</span> <span class=\"token string\">'https'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'x-forwarded-port'</span><span class=\"token operator\">:</span> <span class=\"token string\">'443'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">dnt</span><span class=\"token operator\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'x-forwarded-for'</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxx.xxx.xxx.xxx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'sec-fetch-user'</span><span class=\"token operator\">:</span> <span class=\"token string\">'?1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> <span class=\"token string\">'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'sec-ch-ua'</span><span class=\"token operator\">:</span> <span class=\"token string\">'\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"100\", \"Google Chrome\";v=\"100\"'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'sec-ch-ua-mobile'</span><span class=\"token operator\">:</span> <span class=\"token string\">'?0'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'x-amzn-trace-id'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Root=1-62510b5b-xxxxxxxxxxxxxxxxxxxx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'sec-ch-ua-platform'</span><span class=\"token operator\">:</span> <span class=\"token string\">'\"Windows\"'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">host</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxxxxxxxxxxxxxxxxxxxxxxxx.lambda-url.ap-northeast-1.on.aws'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'upgrade-insecure-requests'</span><span class=\"token operator\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'accept-encoding'</span><span class=\"token operator\">:</span> <span class=\"token string\">'gzip, deflate, br'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'sec-fetch-dest'</span><span class=\"token operator\">:</span> <span class=\"token string\">'document'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'user-agent'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">requestContext</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">accountId</span><span class=\"token operator\">:</span> <span class=\"token string\">'anonymous'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">apiId</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">domainName</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxxxxxxxxxxxxxxxxxxxxxxxxx.lambda-url.ap-northeast-1.on.aws'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">domainPrefix</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">http</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">protocol</span><span class=\"token operator\">:</span> <span class=\"token string\">'HTTP/1.1'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">sourceIp</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxx.xxx.xxx.xxx'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">userAgent</span><span class=\"token operator\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">requestId</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">routeKey</span><span class=\"token operator\">:</span> <span class=\"token string\">'$default'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">stage</span><span class=\"token operator\">:</span> <span class=\"token string\">'$default'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">time</span><span class=\"token operator\">:</span> <span class=\"token string\">'09/Apr/2022:04:28:11 +0000'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">timeEpoch</span><span class=\"token operator\">:</span> <span class=\"token number\">1649478491452</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">isBase64Encoded</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>みたいな感じで<a href=\"https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/services-apigateway.html#apigateway-example-even\" target=\"_blank\" rel=\"noopener noreferrer\">API Gatewayのイベント形式</a>とよく似てます。</p>\n<p>なので、API Gatewayで動かしていたLambdaの置き換え、みたいなこともそこまで苦労しないかもしれませんね。</p>\n<h2 id=\"確かに便利ではありますが\" style=\"position:relative;\"><a href=\"#%E7%A2%BA%E3%81%8B%E3%81%AB%E4%BE%BF%E5%88%A9%E3%81%A7%E3%81%AF%E3%81%82%E3%82%8A%E3%81%BE%E3%81%99%E3%81%8C\" aria-label=\"確かに便利ではありますが permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>確かに便利ではありますが...</h2>\n<p>実際API Gatewayと組み合わせる構成と比べて、リソースを作るのが楽、以外何がうれしいの？という気はしますのでもう少しDeep Diveしてみたいと思います。</p>\n<h2 id=\"認証\" style=\"position:relative;\"><a href=\"#%E8%AA%8D%E8%A8%BC\" aria-label=\"認証 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>認証</h2>\n<p>認証的な設定は<a href=\"https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html\" target=\"_blank\" rel=\"noopener noreferrer\">今のところAWS IAM認証</a>がまずサポートされてます。</p>\n<p>クレデンシャルとかから署名バージョン4を作成してアクセス時にして認証させる方法です。</p>\n<p>独自のオーソライザーが挟めないので、あくまでも同じアカウントにアクセスできる開発者向けのAPIとして使うのがよさそうです。もっと込み入ったことがやりたいならAPI Gatewayをおとなしく使いましょう...。(もうちょっと色々試してみます。)</p>\n<p>IAM認証を設定したうえで、署名を付けず未認証の状態でアクセスすると、</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\"Message\":\"Forbidden\"}</code></pre></div>\n<p>が返ってきました。</p>\n<h2 id=\"タイムアウト\" style=\"position:relative;\"><a href=\"#%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%A2%E3%82%A6%E3%83%88\" aria-label=\"タイムアウト permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>タイムアウト</h2>\n<p>いよいよ本題です。API GatewayとLambdaの組み合わせを使っているとよく困る話がAPI Gatewayのタイムアウトだと思ってます。</p>\n<p>Lambdaのタイムアウトは15分まで拡張されてますが、API Gatewayの最大統合タイムアウトは30秒でそれを<a href=\"https://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/limits.html\" target=\"_blank\" rel=\"noopener noreferrer\">クオータで</a>引き上げることもできないのでAPI Gateway + Lambdaの構成の際はどう頑張ってもAPIが30秒でタイムアウトしないような設計が求められます。</p>\n<p>確かにHTTPで30秒以上かかるようなAPIは非同期APIにして完了をポーリングさせたり、pushさせたりしたほうが正しい設計だと思いますが思いのほか30秒タイムアウトが厳しい...。という経験は多いのではないでしょうか？</p>\n<p>この記事を見たとき私はLambdaにURLエンドポイントがビルトインされるならタイムアウトはLambdanのそれになるのでは？と思いました。実験してみます。</p>\n<p>さきほどデプロイしたコードをもう一度見てみましょう。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">time</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> _reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">handler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> sleepTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>queryStringParameters <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>queryStringParameters<span class=\"token punctuation\">.</span>sleep <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      sleepTime <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>queryStringParameters<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">statusCode</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello from Lambda and sleep </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sleepTime<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!!!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>sleepTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>returnの手前でsleep(setTimeout)を入れてます。そしてクエリパラメーターでsleepのミリ秒を指定できるようにしてます。</p>\n<p>まず、何も設定しないときはsleepはしないのですぐレスポンスが返ってきます。</p>\n<p>sleepを1000にすれば1秒待ってレスポンスが返ってきます。</p>\n<p><img src=\"https://i.imgur.com/V6AQ1kl.png\" alt=\"1秒\"></p>\n<p>では、API Gatewayのタイムアウトの30秒に設定してみましょう。(Lambdaのタイムアウトは2分にしてます)</p>\n<p><img src=\"https://i.imgur.com/Jh9cixG.png\" alt=\"30秒\"></p>\n<p>タイムアウトしませんでした!!ではLambdaのタイムアウトまで引き延ばしてみましょう！</p>\n<p><img src=\"https://i.imgur.com/UCbN8Df.png\" alt=\"タイムアウト\"></p>\n<p>Internal Server Errorしました。これは直感的でいいですね。</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>Lambdaライフを楽しみましょう！</p>","fields":{"slug":"2022/04/09/lambda-urls"},"frontmatter":{"tags":["AWS","Lambda"],"templateKey":"blog-post","slug":"2022/04/09/lambda-urls","id":"","title":"AWS Lambda Function URLsがリリースされたのでタイムアウトの挙動を確かめてみる","url":"2022/04/09/lambda-urls","date":"2022-04-09T02:50:46.360Z","description":"AWS Lambda Function URLsがリリースされ、ますますLambdaが便利になりますが、何に使おっか..という意見もちらほら？","headerImage":"https://i.imgur.com/alxzd7y.png","year":"2022","month":"04"}}},{"node":{"id":"7078487d-f1b4-507c-8a76-296dd5a290e0","html":"<p>暖かくなったと思ったら寒くなりましたね。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#k6%E3%81%A8%E3%81%AF\">k6とは？</a></p>\n</li>\n<li>\n<p><a href=\"#%E4%BD%BF%E3%81%84%E5%BF%83%E5%9C%B0\">使い心地</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%83%AD%E3%83%9E%E3%83%B3\">ロマン</a></p>\n<ul>\n<li><a href=\"#%E5%AE%8C%E5%85%A8docker%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E4%B8%8A%E3%81%A7%E5%AE%9F%E8%A1%8C\">完全Dockerコンテナ上で実行</a></li>\n<li><a href=\"#typescript%E3%81%A7%E3%83%86%E3%82%B9%E3%83%88%E3%82%B7%E3%83%8A%E3%83%AA%E3%82%AA%E3%82%92%E6%9B%B8%E3%81%91%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B\">TypeScriptでテストシナリオを書けるようにする</a></li>\n<li><a href=\"#%E5%AE%9F%E8%A1%8C%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B\">実行してみる</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#yarn-script%E3%81%AB%E4%BD%95%E3%81%A8%E3%81%8B%E3%81%97%E3%81%A6%E5%8F%96%E3%82%8A%E8%BE%BC%E3%82%80\">yarn scriptに何とかして取り込む</a></p>\n</li>\n<li>\n<p><a href=\"#github-actions%E3%81%AB%E7%B5%84%E3%81%BF%E8%BE%BC%E3%82%93%E3%81%A7%E3%81%BF%E3%82%8B\">GitHub Actionsに組み込んでみる</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%AE%8C%E6%88%90\">完成</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%8F%82%E8%80%83\">参考</a></p>\n</li>\n</ul>\n</div>\n<h2 id=\"k6とは\" style=\"position:relative;\"><a href=\"#k6%E3%81%A8%E3%81%AF\" aria-label=\"k6とは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>k6とは？</h2>\n<p><a href=\"https://k6.io/\" target=\"_blank\" rel=\"noopener noreferrer\">k6</a> は<a href=\"https://go.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">Go製</a>のOSS負荷テストツールで普通のHTTPの他、HTTP/2, gRPC, WebSocketなどにも対応した高機能なテストシナリオ作成がJavaScriptで実施できる手軽さと<a href=\"https://grafana.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Grafana</a>を使ったパフォーマンスレポートが魅力の製品です。</p>\n<p>以前はloadimpactと呼ばれていました。こちらのほうが馴染みある人が多いのではないでしょうか？また、K6のクラウド版を使ったことありますー！という方もいらっしゃるのではないでしょうか？</p>\n<p>私個人としては、この手の負荷試験ツールは長らく<a href=\"https://locust.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Locust</a>を愛用してきてそれなりに複雑なテストシナリオを作ってきた経験もあるのですが、時代の流れ的にこっちのほうがいいのではないかと思い浮気することにしました。</p>\n<h2 id=\"使い心地\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E3%81%84%E5%BF%83%E5%9C%B0\" aria-label=\"使い心地 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使い心地</h2>\n<p>K6をMacやEC2などで作ったLinux上に構築する方法はググればたくさん出てくるのでここでは割愛しますが、まず<strong>非常に簡単に環境が構築できる。</strong> この点はしっかり強調しておきたいです。</p>\n<p>MacならHomebrew入っていれば、</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install k6</code></pre></div>\n<p>で完了ですからね。環境構築は超簡単です。</p>\n<p>シナリオファイルの作成もJavaScript ES6対応&#x26;<a href=\"https://k6.io/docs/\" target=\"_blank\" rel=\"noopener noreferrer\">公式ドキュメント</a>比較的充実しているので、ある程度JavaScript触ったことのある人であればノーストレスで実装できそうです。</p>\n<p>また、細かいニーズのシナリオ作成については<a href=\"https://github.com/grafana/k6/tree/master/samples\" target=\"_blank\" rel=\"noopener noreferrer\">GitHubレポジトリのサンプルコード</a>がかなり参考になります。</p>\n<p>なので、正直普通に使う分にはこの記事で紹介することなんてあんまりないのです。ここまで読んでくれた皆さん、ごめんなさい。</p>\n<h2 id=\"ロマン\" style=\"position:relative;\"><a href=\"#%E3%83%AD%E3%83%9E%E3%83%B3\" aria-label=\"ロマン permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ロマン</h2>\n<h3 id=\"完全dockerコンテナ上で実行\" style=\"position:relative;\"><a href=\"#%E5%AE%8C%E5%85%A8docker%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E4%B8%8A%E3%81%A7%E5%AE%9F%E8%A1%8C\" aria-label=\"完全dockerコンテナ上で実行 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>完全Dockerコンテナ上で実行</h3>\n<p>とはいえ、これで終わりならわざわざブログを書くこともないので早速ちょっとした改良をしていきます。</p>\n<p>まず、完全Dockerコンテナ上での実行です。</p>\n<p>開発チームの皆さんがMacを使っている会社さんなら不要な気もしますが中にはWindowsやLinuxを使っている人が混在している開発現場もありそうで、そういった現場で「はい。K6入れておいてね」はちょっと不親切です。かといって、全OSのマニュアルを用意するのもつらいです。</p>\n<p>また、負荷テストはネットワークの安定したサーバー上で実行することもしばしばでMacで動くのに負荷テスト用サーバーで動きません！みたいになるのも悲しいです。そもそも専用のサーバーを立てるのもめんどくさいのでDocker Image化してDockerコンテナ管理サービスでサクッと実行させるのが賢そうです。なんならCIに組み込んで、パイプライン上で実行させるとかも面白そうです。</p>\n<p>もちろんK6公式もぬかりなく<a href=\"https://github.com/grafana/k6#docker\" target=\"_blank\" rel=\"noopener noreferrer\">Docker Image</a>を用意してます。ただ、あくまでもこちらのImageはk6単体のImageなのでパフォーマンス可視化をするには別途<a href=\"https://www.influxdata.com/\" target=\"_blank\" rel=\"noopener noreferrer\">InfluxDB</a>と<a href=\"https://grafana.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Grafana</a>を立ち上げる必要があります。</p>\n<p>なので、まとめて環境をDocker composeしてしまいましょう。</p>\n<p><del>もちろん、本来は結果をきちんと残しておくためにInfluxDBとGrafanaを永続化する必要がありますが、今回はテスト実行なのでInfluxDB永続化は行いません。</del> 永続化することにしました。代わりにInfluxDBのcleanコマンドを実装する形にしました。本格的に負荷テスト環境を作るならAWS ECSであればデータボリュームを<a href=\"https://docs.aws.amazon.com/ja_jp/AmazonECS/latest/developerguide/efs-volumes.html\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon EFS ボリューム</a>とかで管理すると幸せになれる気がします。</p>\n<p>次のような<strong>docker-compose.yml</strong>を作るだけで完成です。楽でいいですねdocker compose。</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.8'</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">influxdb</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> influxdb<span class=\"token punctuation\">:</span><span class=\"token number\">1.8</span>\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8086:8086\"</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> INFLUXDB_DB=k6\n    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> k6net\n      <span class=\"token punctuation\">-</span> grafanaNet\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./influxdb<span class=\"token punctuation\">:</span>/var/lib/influxdb\n\n  <span class=\"token key atrule\">k6</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> grafana/k6<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> k6net\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"6565:6565\"</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> K6_OUT=influxdb=http<span class=\"token punctuation\">:</span>//influxdb<span class=\"token punctuation\">:</span>8086/k6\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./tests/scripts<span class=\"token punctuation\">:</span>/scripts\n\n  <span class=\"token key atrule\">grafana</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> grafana/grafana<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"3000:3000\"</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> GF_AUTH_ANONYMOUS_ORG_ROLE=Admin\n      <span class=\"token punctuation\">-</span> GF_AUTH_ANONYMOUS_ENABLED=true\n      <span class=\"token punctuation\">-</span> GF_AUTH_BASIC_ENABLED=false\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./grafana<span class=\"token punctuation\">:</span>/etc/grafana/provisioning/\n    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> grafanaNet\n<span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">k6net</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">driver</span><span class=\"token punctuation\">:</span> bridge\n  <span class=\"token key atrule\">grafanaNet</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">driver</span><span class=\"token punctuation\">:</span> bridge</code></pre></div>\n<p>やっていることは超基本的なこととしてnetworkを切ってサービス名でInfluxDBにアクセスできるようにする点くらいなのですが、k6のenvironmentで、</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    environment:\n      - K6_OUT=influxdb=http://influxdb:8086/k6</code></pre></div>\n<p>とやってあげることで実行結果をInfluxDBに出力します。</p>\n<p><a href=\"https://k6.io/docs/results-visualization/influxdb-+-grafana/#run-the-test-and-upload-the-results-to-influxdb\" target=\"_blank\" rel=\"noopener noreferrer\">公式ドキュメント</a>のように環境変数でなく実行時の引数で設定できます。</p>\n<p>これで、<a href=\"https://localhost:3000\" target=\"_blank\" rel=\"noopener noreferrer\">https://localhost:3000</a>にアクセスすることで<strong>実行結果を可視化</strong>できるようになりました。</p>\n<p><img src=\"https://i.imgur.com/sX5HtCG.png\" alt=\"grafana\"></p>\n<h3 id=\"typescriptでテストシナリオを書けるようにする\" style=\"position:relative;\"><a href=\"#typescript%E3%81%A7%E3%83%86%E3%82%B9%E3%83%88%E3%82%B7%E3%83%8A%E3%83%AA%E3%82%AA%E3%82%92%E6%9B%B8%E3%81%91%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B\" aria-label=\"typescriptでテストシナリオを書けるようにする permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TypeScriptでテストシナリオを書けるようにする</h3>\n<p>加えて、シナリオファイルの<strong>TypeScript化</strong>を実施します。</p>\n<p><a href=\"https://k6.io/docs/using-k6/javascript-compatibility-mode/\" target=\"_blank\" rel=\"noopener noreferrer\">公式ドキュメント</a>によるとGoのJavaScript VMが<strong>ES5にしか対応してない</strong>のでES6で書いたテストシナリオはどうやらK6のなかでES5に変換してから実行しているらしいです。</p>\n<p>K6の<a href=\"https://github.com/grafana/k6/blob/master/go.mod\" target=\"_blank\" rel=\"noopener noreferrer\">go.mod</a>を見てみると使っているJavaScript VMは<a href=\"https://github.com/dop251/goja\" target=\"_blank\" rel=\"noopener noreferrer\">goja</a>みたいですね。</p>\n<p>逆に、<strong>compatibility-mode=base</strong>というオプションを使ってES5のテストファイルを渡してあげた場合、ES6への変換の手間がなくなるので実行時間とメモリの使用量が改善され、<strong>パフォーマンスが改善</strong>されるとのことです。</p>\n<p>じゃあせっかくなら<strong>TypeScript=>ES5のトランスパイル</strong>を実施して実行時はcompatibility-mode=baseオプションを指定すれば、テストシナリオをTypeScriptで実装しつつパフォーマンス面でも有利に働きそうです。</p>\n<p>とりあえず<a href=\"https://github.com/grafana/k6-hardware-benchmark\" target=\"_blank\" rel=\"noopener noreferrer\">公式に載っている例</a>を参考にwebpack.config.jsをゴリっと書くことにしました。</p>\n<p>babelってトランスパイルしてしまったのでこれ型チェックとかしないかもな...と思いつつ公式がそうやっているからそのまま真似していくつかplugin追加しただけです。</p>\n<p>あと、target webで出力してますがsourcemapを出してしまうとK6で読み込めないよエラーが出るので出力させないです。(ちょっとハマった)</p>\n<p>さらに、今回はおそらく使わないと思いましたが<a href=\"https://webpack.js.org/plugins/copy-webpack-plugin/\" target=\"_blank\" rel=\"noopener noreferrer\">copy-webpack-plugin</a>を使ってテスト用のassetをdistディレクトリにコピーする形にしてます。こうしておくことで、ファイルのアップロードみたいなテストケースも書けるようになりそうです。多分。</p>\n<p>と思って色々試行錯誤していたら公式に実装例があり、ほぼやりたいことがそれでできていたので結局それをパクることにしました..。</p>\n<p><a href=\"https://github.com/grafana/k6-template-typescript\" target=\"_blank\" rel=\"noopener noreferrer\">Template to use TypeScript with k6</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> CleanWebpackPlugin <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clean-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> CopyPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> GlobEntries <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack-glob-entries'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token function\">GlobEntries</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./tests/scripts/*.ts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">libraryTarget</span><span class=\"token operator\">:</span> <span class=\"token string\">'commonjs'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">'[name].js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">resolve</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">extensions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'.ts'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.js'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.ts$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">use</span><span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">exclude</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'web'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">externals</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(k6|https?\\:\\/\\/)(\\/.*)?</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">stats</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">colors</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CleanWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CopyPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">patterns</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'tests/assets'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">noErrorOnMissing</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">optimization</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">minimize</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>tsconfig.jsonも特に特徴はないですが、targetはes5にしてます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"moduleResolution\": \"node\",\n    \"module\": \"commonjs\",\n    .....\n  }\n}</code></pre></div>\n<p>これで<strong>webpackコマンド</strong>を実行することできちんとES5に変換されたテストシナリオのJavaScriptファイルがdist配下に出力されるようになりました。</p>\n<h3 id=\"実行してみる\" style=\"position:relative;\"><a href=\"#%E5%AE%9F%E8%A1%8C%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B\" aria-label=\"実行してみる permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>実行してみる</h3>\n<p>Docker composeにしてますので、必要なコンテナをupで立ち上げたのち、k6だけ個別にrunします。runするときにdist配下のテストファイルを標準入力として指定すればOKです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ddocker compose up -f\ndocker compose run k6 run --compatibility-mode=base - &lt; ./dist/httpGet.js</code></pre></div>\n<p>無事実行できました！</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">asset cookieAuthServerSession.js 5.3 KiB [emitted] (name: cookieAuthServerSession)\nasset httpGet.js 2.63 KiB [emitted] (name: httpGet)\nruntime modules 1.83 KiB 8 modules\norphan modules 451 bytes [orphan] 4 modules\nbuilt modules 2.52 KiB [built]\n  ./tests/scripts/cookieAuthServerSession.ts + 4 modules 2.38 KiB [not cacheable] [built] [code generated]\n  ./tests/scripts/httpGet.ts + 1 modules 141 bytes [not cacheable] [built] [code generated]\nwebpack 5.35.1 compiled successfully in 619 ms\nfailed to get console mode for stdin: The handle is invalid.\nfailed to get console mode for stdin: The handle is invalid.\nfailed to get console mode for stdin: The handle is invalid.\n\n          /\\      |‾‾| /‾‾/   /‾‾/\n     /\\  /  \\     |  |/  /   /  /\n    /  \\/    \\    |     (   /   ‾‾\\\n   /          \\   |  |\\  \\ |  (‾)  |\n  / __________ \\  |__| \\__\\ \\_____/ .io\n\n  execution: local\n     script: -\n     output: InfluxDBv1 (http://influxdb:8086)\n\n  scenarios: (100.00%) 1 scenario, 1 max VUs, 10m30s max duration (incl. graceful stop):\n           * default: 1 iterations for each of 1 VUs (maxDuration: 10m0s, gracefulStop: 30s)\n\n\nrunning (00m00.9s), 0/1 VUs, 1 complete and 0 interrupted iterations\ndefault ✓ [ 100% ] 1 VUs  00m00.9s/10m0s  1/1 iters, 1 per VU\n\n     data_received..................: 21 kB 24 kB/s\n     data_sent......................: 519 B 574 B/s\n     http_req_blocked...............: avg=734.31ms min=734.31ms med=734.31ms max=734.31ms p(90)=734.31ms p(95)=734.31ms\n     http_req_connecting............: avg=161.49ms min=161.49ms med=161.49ms max=161.49ms p(90)=161.49ms p(95)=161.49ms\n     http_req_duration..............: avg=169.36ms min=169.36ms med=169.36ms max=169.36ms p(90)=169.36ms p(95)=169.36ms\n       { expected_response:true }...: avg=169.36ms min=169.36ms med=169.36ms max=169.36ms p(90)=169.36ms p(95)=169.36ms\n     http_req_failed................: 0.00% ✓ 0        ✗ 1\n     http_req_receiving.............: avg=2.71ms   min=2.71ms   med=2.71ms   max=2.71ms   p(90)=2.71ms   p(95)=2.71ms\n     http_req_sending...............: avg=49µs     min=49µs     med=49µs     max=49µs     p(90)=49µs     p(95)=49µs\n     http_req_tls_handshaking.......: avg=381.41ms min=381.41ms med=381.41ms max=381.41ms p(90)=381.41ms p(95)=381.41ms\n     http_req_waiting...............: avg=166.6ms  min=166.6ms  med=166.6ms  max=166.6ms  p(90)=166.6ms  p(95)=166.6ms\n     http_reqs......................: 1     1.105208/s\n     iteration_duration.............: avg=903.84ms min=903.84ms med=903.84ms max=903.84ms p(90)=903.84ms p(95)=903.84ms\n     iterations.....................: 1     1.105208/s\n\nDone in 6.27s.</code></pre></div>\n<p>Locustに勝るとも劣らないかなりしっかりとしたレポートが出ますね！</p>\n<h2 id=\"yarn-scriptに何とかして取り込む\" style=\"position:relative;\"><a href=\"#yarn-script%E3%81%AB%E4%BD%95%E3%81%A8%E3%81%8B%E3%81%97%E3%81%A6%E5%8F%96%E3%82%8A%E8%BE%BC%E3%82%80\" aria-label=\"yarn scriptに何とかして取り込む permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>yarn scriptに何とかして取り込む</h2>\n<p>まぁこれで完成なのですが、ちょっとまだ不満点があります。 docker compose runコマンドを打つ前にwebpackコマンドを実行しないといけない点です。</p>\n<p>どうせならテスト実行一発でトランスパイル=>実行と移ってほしいのでyarn scriptを書いていきます。</p>\n<p>今回実装するまで知らなかったのですが、yarn scriptに引数を渡すときコマンドの途中に引数の文字列を入れたいとき、ちょっと難しかったです。サクッとできるかなと思ったのですが。</p>\n<p>結局、次のようにshellから0番目の引数を取って実行するという無茶苦茶実装にしました。こうすれば、 <strong>yarn start testFile</strong> で実行できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">start\": \"sh -c \\\"webpack &amp;&amp; docker compose run k6 run --compatibility-mode=base - &lt; ./dist/${0}.js\\\"\",</code></pre></div>\n<h2 id=\"github-actionsに組み込んでみる\" style=\"position:relative;\"><a href=\"#github-actions%E3%81%AB%E7%B5%84%E3%81%BF%E8%BE%BC%E3%82%93%E3%81%A7%E3%81%BF%E3%82%8B\" aria-label=\"github actionsに組み込んでみる permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Actionsに組み込んでみる</h2>\n<p>最後にGitHub Actionsに組み込んでみることにします。</p>\n<p>とはいってもGitHub Actionsは普通にdocker composeできるのであまり気にするところはなさそうです。</p>\n<p>強いて言えば、docker compose runする際に-Tオプションをつけないと、コンソールが戻ってこないので無限に動いてしまいます。ちょっとだけ詰まりました。</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Test Scenario\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n  <span class=\"token key atrule\">pull_request</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Use Node.js 14.x\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> 14.x\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> setup config\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> mv tests/config/configExample.ts tests/config/config.ts\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup test Env\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          yarn install\n          docker-compose up -d\n          yarn build</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> run\n        <span class=\"token comment\"># In GitHub Actions, if pseudo-tty is assigned in case of docker compose run,</span>\n        <span class=\"token comment\"># container execution will continue and step will not be completed, so disable it with -T option.</span>\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> docker compose run <span class=\"token punctuation\">-</span>T k6 run <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>compatibility<span class=\"token punctuation\">-</span>mode=base <span class=\"token punctuation\">-</span> &lt; ./dist/httpGet.js</code></pre></div>\n<h2 id=\"完成\" style=\"position:relative;\"><a href=\"#%E5%AE%8C%E6%88%90\" aria-label=\"完成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>完成</h2>\n<p>というわけでこちらが完成したテンプレートです。</p>\n<p><a href=\"https://github.com/tubone24/k6_template_with_typescript_on_docker\" target=\"_blank\" rel=\"noopener noreferrer\">K6 with TypeScript on Docker</a></p>\n<p>これからK6をプロジェクトで導入したいなと思っている人は上記をテンプレートとしてご活用いただければ幸いです。</p>\n<h2 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h2>\n<ul>\n<li><a href=\"https://k6.io/docs/\" target=\"_blank\" rel=\"noopener noreferrer\">k6 documentation</a></li>\n<li><a href=\"https://github.com/grafana/k6-hardware-benchmark\" target=\"_blank\" rel=\"noopener noreferrer\">k6-hardware-benchmark</a></li>\n<li><a href=\"https://github.com/grafana/k6-template-typescript\" target=\"_blank\" rel=\"noopener noreferrer\">Template to use TypeScript with k6</a></li>\n</ul>","fields":{"slug":"2022/03/20/k6-with-typescript"},"frontmatter":{"tags":["k6","負荷試験","Docker","TypeScript"],"templateKey":"blog-post","slug":"2022/03/20/k6-with-typescript","id":null,"title":"負荷テストツールK6をTypeScript+Dockerで動かすためのテンプレートを作る","url":"2022/03/20/k6-with-typescript","date":"2022-03-20T08:33:17.597Z","description":"高機能なgo製負荷テストツールK6を使って負荷テストを実施する際に環境づくりがめんどくさいのでDocker compose化し、さらにシナリオファイルをTypeScriptで実装できるようにすることでテストシナリオを簡単に実装できるようにしたよ、というお話です。","headerImage":"https://i.imgur.com/YUFdeQr.png","year":"2022","month":"03"}}},{"node":{"id":"67663391-f17d-564d-bde2-f79fc9920540","html":"<p>いよいよよくわからないデスクトップ周りになってきました。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#%E3%82%B3%E3%83%B3%E3%82%BB%E3%83%97%E3%83%88\">コンセプト</a></li>\n</ul>\n</div>\n<h2 id=\"コンセプト\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%B3%E3%82%BB%E3%83%97%E3%83%88\" aria-label=\"コンセプト permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コンセプト</h2>\n<p>クリエイティブな空間をイメージしましたが仕事効率化ツールの類やら諸々詰め込んだらよくわからないコンセプトになりましたとさ。</p>\n<p><img src=\"https://i.imgur.com/r0PM7E7.jpg\" alt=\"desktop\"></p>","fields":{"slug":"2022/03/20/desktop"},"frontmatter":{"tags":["desktop"],"templateKey":"blog-post","slug":"2022/03/20/desktop","id":null,"title":"もう何がしたいかわからないデスクトップ周り","url":"2022/03/20/desktop","date":"2022-03-20T08:28:54.325Z","description":"タイトル通りです","headerImage":"https://i.imgur.com/r0PM7E7.jpg","year":"2022","month":"03"}}},{"node":{"id":"d7092f23-e01a-519b-9706-ea2e340988d6","html":"<p>暖かくなってきましたね。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#%E6%98%A5%E3%81%AF%E8%87%AA%E5%B7%B1%E7%B4%B9%E4%BB%8B%E3%81%AE%E5%AD%A3%E7%AF%80\">春は自己紹介の季節</a></li>\n</ul>\n</div>\n<h2 id=\"春は自己紹介の季節\" style=\"position:relative;\"><a href=\"#%E6%98%A5%E3%81%AF%E8%87%AA%E5%B7%B1%E7%B4%B9%E4%BB%8B%E3%81%AE%E5%AD%A3%E7%AF%80\" aria-label=\"春は自己紹介の季節 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>春は自己紹介の季節</h2>\n<p>何かと自己紹介してくださいと言われるこの時期なので、あらかじめ自己紹介を用意しておくことが重要です。</p>\n<p>たまたま、<a href=\"https://dev.to/\" target=\"_blank\" rel=\"noopener noreferrer\">dev.to</a>で面白そうな記事を見つけました。</p>\n<p><a href=\"https://dev.to/wuz/setting-up-a-npx-username-card-1pip\" target=\"_blank\" rel=\"noopener noreferrer\">Setting up a <code class=\"language-text\">npx username</code> card!</a></p>\n<p>これは面白いですね。npxを使って自己紹介ができるということなので早速作ってみました。</p>\n<p><a href=\"https://github.com/tubone24/npm_profile_card\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/tubone24/npm_profile_card</a></p>\n<p>ほとんど記事を参考に作ったまでですがちょっとだけ変更したのは、</p>\n<ul>\n<li>TypeScript化</li>\n<li>linterをstandard=>eslintに</li>\n<li>npmへのpublishをCI化</li>\n</ul>\n<p>です。</p>\n<p><img src=\"https://i.imgur.com/KcjLilg.png\" alt=\"npx profile\"></p>\n<p>こんな感じで、</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npx tubone24</code></pre></div>\n<p>と実行するだけでカラフルな自己紹介(というよりURLリンク集)する感じです。</p>\n<p>作ったはいいけど、こんなものいつ使うのかわからなくなりましたが、名刺に <strong>npx tubone24</strong> とだけ書いておくとおしゃれでよさそうですね。</p>","fields":{"slug":"2022/03/05/npx"},"frontmatter":{"tags":["JavaScript","npx","自己紹介"],"templateKey":"blog-post","slug":"2022/03/05/npx","id":null,"title":"自己紹介をnpxでやってみたい","url":"2022/03/05/npx","date":"2022-03-05T10:03:47.244Z","description":"たまたま見つけた記事を参考にnpxで自己紹介してみます。\n","headerImage":"https://i.imgur.com/KcjLilg.png","year":"2022","month":"03"}}},{"node":{"id":"37024474-c984-54ec-a1d9-c478faca0863","html":"<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<p>びっくり。</p>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#colorsjs\">colors.js</a></li>\n<li><a href=\"#%E5%AF%BE%E5%87%A6%E6%B3%95\">対処法</a></li>\n<li><a href=\"#oss%E3%81%AE%E3%81%82%E3%82%8A%E6%96%B9%E3%81%A8%E3%81%AF\">OSSのあり方とは</a></li>\n</ul>\n</div>\n<h2 id=\"colorsjs\" style=\"position:relative;\"><a href=\"#colorsjs\" aria-label=\"colorsjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>colors.js</h2>\n<p>@babel/coreのバージョンアップでCIを動かしていたところ謎のアスキーアート的なログが出たままヒープメモリを食いつぶして落ちてしまう事象が昨日の夜中に発生しました。</p>\n<p><a href=\"https://github.com/tubone24/portfolio/runs/4755929687?check_suite_focus=true\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/tubone24/portfolio/runs/4755929687?check_suite_focus=true</a></p>\n<p><img src=\"https://i.imgur.com/QjbL6ih.png\" alt=\"img\"></p>\n<p>CIのジョブ的にはUIcheckのpercyを動かすところでクリティカルではなく、更新内容的にも急いで更新するような重要なアップデートではなかったので機能時点ではスルーしてましたが、今朝colors.jsの問題で本事象が発生することを下記の記事から気が付きました。</p>\n<p><a href=\"https://www.bleepingcomputer.com/news/security/dev-corrupts-npm-libs-colors-and-faker-breaking-thousands-of-apps/\" target=\"_blank\" rel=\"noopener noreferrer\">Dev corrupts npm libs 'colors' and 'faker' breaking thousands of apps</a></p>\n<p>記事を追っていくと実際のコミットも見つけることができ、作者が意図的に星条旗おじさん(名前は<a href=\"https://astrobiology.nasa.gov/nai/directory/pilcher-carl/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">Carl Pilcher</a>ですかね...?ちょっとわからなかったです。)を表示させ、無限ループを発生させるようなコードを仕込んでいることがわかります。</p>\n<p><a href=\"https://github.com/Marak/colors.js/commit/074a0f8ed0c31c35d13d28632bd8a049ff136fb6?diff=unified\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Marak/colors.js/commit/074a0f8ed0c31c35d13d28632bd8a049ff136fb6?diff=unified</a></p>\n<p>この汚染が仕込まれたのが <a href=\"mailto:colors@1.4.44-liberty-2\" target=\"_blank\" rel=\"noopener noreferrer\">colors@1.4.44-liberty-2</a>のバージョンであることから^1.4.0を利用していたライブラリはsemantic versioningでpatchアップデートにかかってしまったため、思いがけずアップデートされてしまったものと思われます。</p>\n<p>また、ローカルで動かしてみたものの同様に事象が発生してしまっております。すごいMacのファンが回ってしまって怖いです。</p>\n<p><img src=\"https://i.imgur.com/d6EyJpJ.gif\" alt=\"img\"></p>\n<h2 id=\"対処法\" style=\"position:relative;\"><a href=\"#%E5%AF%BE%E5%87%A6%E6%B3%95\" aria-label=\"対処法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>対処法</h2>\n<p>取り急ぎpackage.jsonのresoltionsに安全な<a href=\"mailto:colors@1.4.0\" target=\"_blank\" rel=\"noopener noreferrer\">colors@1.4.0</a>を設定してを実施して事象の回復ができました。</p>\n<p><a href=\"https://github.com/tubone24/portfolio/pull/351/files\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/tubone24/portfolio/pull/351/files</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  \"resolutions\": {\n    \"@graphql-codegen/visitor-plugin-common\": \"1.22.0\",\n    \"colors\": \"1.4.0\"\n  }</code></pre></div>\n<h2 id=\"ossのあり方とは\" style=\"position:relative;\"><a href=\"#oss%E3%81%AE%E3%81%82%E3%82%8A%E6%96%B9%E3%81%A8%E3%81%AF\" aria-label=\"ossのあり方とは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OSSのあり方とは</h2>\n<p>こればっかりは難しい問題なので今回結論を出すことはないですが、イチ開発者としては素敵なOSS活動を続けている皆さんを少しでもサポートしたい気持ちではいます。どんな形での貢献ができるかは不明ですが。</p>\n<p>原因のコミットには多くのコントリビューターから賛否両論のコメントが投稿されてました。</p>\n<blockquote>\n<p>oh man. whatever is going on. i will not judge, since iam a very average dev, the sense of this, nor your reasons. but: take a step back. have some holydays. this is clearly not going anywhere good. stay strong and healthy my dear. best regards from far europe.</p>\n<p>私はごく普通の開発者なので、その感覚や理由を判断することはできませんが、しかし、一歩下がって、休日を過ごしてください。これは明らかに良い方向には向かっていません。遠く離れたヨーロッパから、よろしくお願いします。</p>\n<p>引用 <a href=\"https://github.com/Marak/colors.js/commit/074a0f8ed0c31c35d13d28632bd8a049ff136fb6?diff=unified#commitcomment-63144380\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Marak/colors.js/commit/074a0f8ed0c31c35d13d28632bd8a049ff136fb6?diff=unified#commitcomment-63144380</a></p>\n</blockquote>\n<p>もちろん、開発者のMarak氏の言い分もわかりますしOSS活動を続けていくモチベーションが落ちるようなことはあってはならないとは思いつつも、彼が犯した行動がすべて容認されうるものではないこともまた事実です。</p>\n<p>なのでまず休んで。一息ついて考えて！というメッセージは痛いほどわかります。</p>\n<blockquote>\n<p>F500 companies that care about security already patched out all Marak's stuff months ago. He's been a malicious supply chain issue for a while.</p>\n<p>At this point the main people he's hurting are small folks who don't check their packages as much as big company appsec teams do.</p>\n<p>セキュリティに気を配るF500企業は、数ヶ月前にすでにマラクのものをすべてパッチで除去しています。彼はしばらくの間、悪意のあるサプライチェーンの問題だった。</p>\n<p>この時点で、彼が傷つけているのは、大企業のセキュリティチームほどには自分のパッケージをチェックしない、小さな人々なのです。</p>\n<p>引用 <a href=\"https://github.com/Marak/colors.js/commit/074a0f8ed0c31c35d13d28632bd8a049ff136fb6?diff=unified#commitcomment-63196620\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Marak/colors.js/commit/074a0f8ed0c31c35d13d28632bd8a049ff136fb6?diff=unified#commitcomment-63196620</a></p>\n</blockquote>\n<p>これもその通りだなぁと思います。誰も得しない...。とはいえ彼がもっとひどい不具合、たとえばOS自体を破壊しまくるものを仕込んでいたら。。被害は考えるだけでも恐ろしいですね。</p>\n<p>これからもOSSが発展するように自分にできることは何か模索していきたいと思います。</p>","fields":{"slug":"2022/01/10/colorjs"},"frontmatter":{"tags":["color.js","oss"],"templateKey":"blog-post","slug":"2022/01/10/colorjs","id":null,"title":"CI回してたら変な星条旗おじさんが出てきて動かなくなってしまったので直しつつOSSのあり方を考える","url":"2022/01/10/colorjs","date":"2022-01-10T06:40:48.381Z","description":"Ci回してたら急に変な星条旗おじさんが出てきてヒープメモリを消費しまくって止まってしまっていました。","headerImage":"https://i.imgur.com/QjbL6ih.png","year":"2022","month":"01"}}},{"node":{"id":"d7123820-58c1-50e1-9662-e7eb7c5bda63","html":"<p>あけましておめでとうございます。</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<div class=\"toc\">\n<ul>\n<li>\n<p><a href=\"#todo%E6%9B%B8%E3%81%84%E3%81%A6%E7%94%9F%E7%94%A3%E7%9A%84%E3%81%AA%E7%94%9F%E6%B4%BB%E3%81%AB%E3%81%AA%E3%82%8D%E3%81%86\">ToDo書いて生産的な生活になろう</a></p>\n</li>\n<li>\n<p><a href=\"#%E6%9C%80%E5%BC%B7%E3%81%AEtodo%E3%83%AA%E3%82%B9%E3%83%88%E3%81%A8%E3%81%AF\">最強のToDoリストとは？</a></p>\n</li>\n<li>\n<p><a href=\"#%E9%81%B8%E3%81%B0%E3%82%8C%E3%81%9F%E3%81%AE%E3%81%AFgithub-project%E3%81%A7%E3%81%97%E3%81%9F\">選ばれたのはGitHub Projectでした。</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA1-issue%E3%81%A8project%E3%82%92%E8%87%AA%E5%8B%95%E3%81%A7%E7%B4%90%E3%81%A5%E3%81%91%E3%82%8B\">カスタマイズ1 IssueとProjectを自動で紐づける</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA2-%E3%83%A9%E3%83%99%E3%83%AB%E3%82%92%E6%B4%BB%E7%94%A8%E3%81%99%E3%82%8B\">カスタマイズ2 ラベルを活用する</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA3-%E6%9C%9F%E6%97%A5%E3%82%92%E7%AE%A1%E7%90%86%E3%81%97%E3%81%9F%E3%81%84\">カスタマイズ3 期日を管理したい</a></p>\n<ul>\n<li><a href=\"#%E4%BD%99%E8%AB%87\">余談</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA4-%E6%BA%9C%E3%81%BE%E3%81%A3%E3%81%A6%E3%81%97%E3%81%BE%E3%81%A3%E3%81%9Fmilestone%E3%82%92%E5%AE%9A%E6%9C%9F%E7%9A%84%E3%81%ABclose%E3%81%99%E3%82%8B\">カスタマイズ4 溜まってしまったMilestoneを定期的にCloseする</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA5-%E6%97%A5%E5%A0%B1%E3%83%AA%E3%83%9E%E3%82%A4%E3%83%B3%E3%83%80%E3%83%BC%E6%A9%9F%E8%83%BD%E3%81%AE%E4%BD%9C%E6%88%90\">カスタマイズ5 日報&#x26;リマインダー機能の作成</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\">まとめ</a></p>\n</li>\n</ul>\n</div>\n<h2 id=\"todo書いて生産的な生活になろう\" style=\"position:relative;\"><a href=\"#todo%E6%9B%B8%E3%81%84%E3%81%A6%E7%94%9F%E7%94%A3%E7%9A%84%E3%81%AA%E7%94%9F%E6%B4%BB%E3%81%AB%E3%81%AA%E3%82%8D%E3%81%86\" aria-label=\"todo書いて生産的な生活になろう permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ToDo書いて生産的な生活になろう</h2>\n<p>あけましておめでとうございますー。昨年は色々な人にお世話になりましたので今年は人に貢献していきたいと思っている筆者です。</p>\n<p>そのためにも時間の捻出が重要になってくるかと思いますが、より生産性の高い日常を送るためにはやはり<strong>ToDoリスト</strong>なのではないでしょうか？</p>\n<p>みなさん、<strong>ToDoリスト</strong>、使ってますか？</p>\n<p>かれこれ筆者は、何度もToDoリストを作って生産的な生活を送ろうとしてますが、うまくいった試しがありません。</p>\n<p>そんな筆者がなぜToDoリストが続かないのかを分析し自分にぴったりのToDoアプリを作り、運用します。</p>\n<p>このままだと<strong>胡散臭いビジネス書みたいな</strong>宣伝文句になってしまってますが、安心してください。そんなに胡散臭い内容は出てこないはずです。(ほぼGitHub ActionsのTipsみたいな記事です。)</p>\n<h2 id=\"最強のtodoリストとは\" style=\"position:relative;\"><a href=\"#%E6%9C%80%E5%BC%B7%E3%81%AEtodo%E3%83%AA%E3%82%B9%E3%83%88%E3%81%A8%E3%81%AF\" aria-label=\"最強のtodoリストとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最強のToDoリストとは？</h2>\n<p>まずは、世の中のToDoリストアプリについて分析していきましょう。</p>\n<p>世の中には玉石混交のToDoリストアプリで溢れかえってますが、筆者が思うに<strong>ネイティブアプリ専用のToDoリスト</strong>はまず開かなくなります。</p>\n<p>そもそもパソコンで仕事してるケースが多いのでパソコンでもスマホでも操作できないと使わなくなります。それにスマホ開いたらTwitter見ちゃうでしょ。</p>\n<p>また、タスク期日や依存関係、カテゴリ、タグなど、一つのToDoを書くためにやたら記載欄が多いToDoアプリも適当になりがちなでおすすめできません。後々の振り返り分析なんかにはいいんですが、めんどくさいですよね。</p>\n<p>またタスクの期日に応じたリマインダー機能があると続ける気になりそうです。ただ、リマインドはSlackに送らないと意味がありません。Gmailはまず見ません。</p>\n<p>まとめると、</p>\n<ol>\n<li>パソコンでもスマホでも使える</li>\n<li>入力欄がシンプル(わかりきっていることは自動で入力してほしい)</li>\n<li>リマインダーがある(Slack)</li>\n</ol>\n<p>となります。</p>\n<h2 id=\"選ばれたのはgithub-projectでした\" style=\"position:relative;\"><a href=\"#%E9%81%B8%E3%81%B0%E3%82%8C%E3%81%9F%E3%81%AE%E3%81%AFgithub-project%E3%81%A7%E3%81%97%E3%81%9F\" aria-label=\"選ばれたのはgithub projectでした permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>選ばれたのはGitHub Projectでした。</h2>\n<p>ということで今回私に選ばれたのは<a href=\"https://docs.github.com/ja/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Project</a>でした。</p>\n<p>え？　それって<strong>カンバンでプロジェクト管理するソフトウェア開発のタスク管理ツール</strong>でしょ？コードを書かないような個人のToDoに使えるの？と思ったあなた。</p>\n<p><strong>その通りです。使えません。</strong></p>\n<p><strong>そのままでは使い勝手が悪すぎます。</strong></p>\n<p>が、GitHub Projectには<strong>GitHub Actions</strong>という最強のCIがついてますのでこちらを使うことで劇的に使いやすいToDoアプリになります。</p>\n<p>まず、GitHub Projectはパソコンでもスマホでも利用可能なので、何も実装しなくても <strong>1. パソコンでもスマホでも使える</strong> はクリアとなります。ありがたい。</p>\n<p>今回はGitHub Issueを基軸に運用したいのでProjectのテンプレートは<a href=\"https://docs.github.com/ja/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards#templates-for-project-boards\" target=\"_blank\" rel=\"noopener noreferrer\">Automated Kanban</a>を選択しました。これで、<strong>Issueがクローズされた際にProject側でもタスクを勝手にDone</strong>にしてくれます。</p>\n<p><img src=\"https://i.imgur.com/fWMy7hV.png\" alt=\"img\"></p>\n<h2 id=\"カスタマイズ1-issueとprojectを自動で紐づける\" style=\"position:relative;\"><a href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA1-issue%E3%81%A8project%E3%82%92%E8%87%AA%E5%8B%95%E3%81%A7%E7%B4%90%E3%81%A5%E3%81%91%E3%82%8B\" aria-label=\"カスタマイズ1 issueとprojectを自動で紐づける permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>カスタマイズ1 IssueとProjectを自動で紐づける</h2>\n<p>GitHub ProjectはGitHub IssueおよびPull Requestと紐づけして運用できるのですが、<strong>Issueを切った際にProjectのToDoに自動紐づけされません。</strong> (Automated KanbanではIssue CloseでDoneにしてくれるのに逆のことはしてくれないんだ...)</p>\n<p>Issueを切った際<strong>手動</strong>で、指定したProjectに紐づけを行なう必要があります。一つのRepositoryに対して複数のProjectが存在するケースがあるのである意味ソフトウェア開発的には正当な動きと思いますが、個人ToDoには荷が重すぎます。わざわざ毎回手動で紐づけるのはつらすぎます。</p>\n<p>そこで僕はGitHub Actions。 (もこみち風)</p>\n<p>ちょっとWeb上で探したところ、なんとすでに<a href=\"https://github.com/marketplace/actions/github-project-automation\" target=\"_blank\" rel=\"noopener noreferrer\">alex-page/github-project-automation-plus</a>という便利なActionsが用意されているので、こちらをGitHub Actionsで使えばかんたんに実現できます。ありがとうございます。</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Move new issues into MyToDo\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">issues</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>opened<span class=\"token punctuation\">]</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">automate-project-columns</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> alex<span class=\"token punctuation\">-</span>page/github<span class=\"token punctuation\">-</span>project<span class=\"token punctuation\">-</span>automation<span class=\"token punctuation\">-</span>plus@v0.3.0\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">project</span><span class=\"token punctuation\">:</span> MyToDo\n          <span class=\"token key atrule\">column</span><span class=\"token punctuation\">:</span> To do\n          <span class=\"token key atrule\">repo-token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GH_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>使い方は公式のREADMEを見てもらえればと思いますが、ポイントとしては、on句にはIssueのOpenを指定することとrepo-tokenはGitHub Actionsでデフォルトで使える<strong>secrets.GITHUB_TOKEN</strong>だとProjectの操作権限がないので<strong>admin:orgのR/W権限</strong>をつける必要があります。</p>\n<p>(専用に<a href=\"https://docs.github.com/ja/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token\" target=\"_blank\" rel=\"noopener noreferrer\">PAT</a>を再発行してsecretsに設定する必要があります。)</p>\n<p>これで、New IssueからIssueを切るだけで、Project管理ができるようになりました！</p>\n<h2 id=\"カスタマイズ2-ラベルを活用する\" style=\"position:relative;\"><a href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA2-%E3%83%A9%E3%83%99%E3%83%AB%E3%82%92%E6%B4%BB%E7%94%A8%E3%81%99%E3%82%8B\" aria-label=\"カスタマイズ2 ラベルを活用する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>カスタマイズ2 ラベルを活用する</h2>\n<p>GitHub Issues, Projectには<a href=\"https://docs.github.com/ja/issues/using-labels-and-milestones-to-track-work/managing-labels\" target=\"_blank\" rel=\"noopener noreferrer\">Label</a>という概念があります。</p>\n<p>よく、BugとかFeatureとかついているあれです。</p>\n<p><img src=\"https://i.imgur.com/zeWmlIk.png\" alt=\"label\"></p>\n<p>これをToDoに活用することでToDo管理をやりやすくします。</p>\n<p><img src=\"https://i.imgur.com/RsOQAlV.png\" alt=\"img\"></p>\n<p>このようにLabel管理することで、タスクの優先度や作業場所のカテゴライズを行いやすくできました！</p>\n<h2 id=\"カスタマイズ3-期日を管理したい\" style=\"position:relative;\"><a href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA3-%E6%9C%9F%E6%97%A5%E3%82%92%E7%AE%A1%E7%90%86%E3%81%97%E3%81%9F%E3%81%84\" aria-label=\"カスタマイズ3 期日を管理したい permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>カスタマイズ3 期日を管理したい</h2>\n<p>ある意味GitHub Project ToDoアプリ利用最大の欠点だとおもいますが、<strong>期日の管理</strong>がやりにくいです。</p>\n<p>一応Milestoneという機能を使ってリリース日を設定し、そちらにIssueを紐づけることでプロジェクト管理ができるようになっておりますが、<strong>Milestoneを毎回作って紐づける</strong>のはとても大変です。(やはりGitHub ActionsでToDo管理は無理があったと感じざるを得ません。)</p>\n<p><img src=\"https://i.imgur.com/ZXzTyx3.png\" alt=\"img\"></p>\n<p>Milestoneを設定さえすれば、期日表示ができますし後々実施しようと思っているリマインダーにも活用できそうです。</p>\n<p>今回はカスタマイズ2で専用の期限Labelを作ったのでこちらを活用していきます。</p>\n<p>次のようなワークフローを考えます。</p>\n<ol>\n<li>期限Labelをつける</li>\n<li>Labelをつけた時刻からラベルの対象期限を算出し、Milestoneを作る</li>\n<li>作ったMilestoneをIssueにつける</li>\n</ol>\n<p>で、これもGitHub Actionsで作ることができます。</p>\n<p>今回はちょっと勉強のために<a href=\"https://github.com/marketplace/actions/github-script\" target=\"_blank\" rel=\"noopener noreferrer\">actions/github-script</a>を使って実装しました。</p>\n<p>GitHub ScriptはデフォルトでGitHubのContextやEventを取得、IssueやMilestoneを更新できる<a href=\"https://octokit.github.io/rest.js/v18\" target=\"_blank\" rel=\"noopener noreferrer\">Octokit</a>がimport不要でそのまま使えるのでかなり便利なのですが、GitHub ActionsのYAML上でコードを書くことになり、YAML上ではGitHub Script(JavaScript)の<strong>エディターの補完</strong>が効かず開発体験が悪すぎて発狂仕掛けたので複雑な実装をするときはまじで利用をおすすめしません!!!普通にスクリプト書いてcheckoutしたほうがマシです。</p>\n<p>あと、GitHub Scriptのドキュメントが少なすぎです。</p>\n<p>なんのAPIがあるのかまるでわかりません。<a href=\"https://octokit.github.io/rest.js/v18\" target=\"_blank\" rel=\"noopener noreferrer\">Octokit</a>のAPIと同じだろうと思って使おうとするとそんなメソッドありませんエラー出るしいちいちインスタンスをconsole.logして実装されているメソッドを確認する作業で時間を浪費しました...。</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Create Milestone For Labeled\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">issues</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">types</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> labeled\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">create_milestone</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> create milestone\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/github<span class=\"token punctuation\">-</span>script@v3\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">github-token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GH_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n            const label = context.payload.label.name\n            const date = new Date(Date.now() + ((new Date().getTimezoneOffset() + (9 * 60)) * 60 * 1000));\n            const nextDayOffset = 7 - date.getDay()\n            let due_on\n            let endDate\n            if(label.indexOf('Today') !== -1) {\n              due_on = date.toISOString()\n              endDate = (date.getFullYear()) + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate()\n            } else if(label.indexOf('Tommorrow') !== -1) {\n              date.setDate(date.getDate() + 1)\n              due_on = date.toISOString()\n              endDate = (date.getFullYear()) + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate()\n            } else if(label.indexOf('NextWeekend') !== -1) {\n              date.setDate(date.getDate() + 7 + nextDayOffset)\n              due_on = date.toISOString()\n              endDate = (date.getFullYear()) + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate()\n            } else if(label.indexOf('Weekend') !== -1) {\n                date.setDate(date.getDate() + nextDayOffset)\n                due_on = date.toISOString()\n                endDate = (date.getFullYear()) + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate()\n            } else if(label.indexOf('NextMonth') !== -1) {\n              date.setDate(date.getDate() + 30)\n              due_on = date.toISOString()\n              endDate = (date.getFullYear()) + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate()\n            } else {\n              // nothing to do\n              return\n            }\n            let milestoneNumber\n            try {\n              const result = await github.issues.createMilestone({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              title: endDate,\n              due_on: due_on,\n              description: endDate + 'までに片付ける'\n              })\n              milestoneNumber = result.data.number\n            } catch(e) {\n              console.log(e)\n              if (e &amp;&amp; e.errors &amp;&amp; e.errors[0].resource === 'Milestone' &amp;&amp; e.errors[0].code === 'already_exists') {\n                console.log('skip create milestone')\n                const resp = await github.issues.listMilestones({\n                  owner: context.repo.owner,\n                  repo: context.repo.repo,\n                  sort: 'due_on',\n                  direction: 'desc',\n                  per_page: 100,\n                })\n                if (resp.data.filter(m => m.title === endDate).length !== 0) {\n                  milestoneNumber = resp.data.filter(m => m.title === endDate)[0].number\n                } else {\n                  console.log(resp)\n                }\n              } else {\n                console.log(e)\n                throw(e)\n              }\n            }\n            await github.issues.update({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              issue_number: context.issue.number,\n              milestone: milestoneNumber,\n            })</span></code></pre></div>\n<p>かなり愚直ですが、on句でIssueがlabeledの際にLabel名を取得し、ToDayとかNextWeekendとかキーワードを拾い上げ現在時刻からMilestone期限を算出します。</p>\n<p>その後作成したMilestoneをIssueに紐づけるわけですが、すでに同名のMilestoneを作成しているとき、つまり同一日の期限タスクをすでに作っている場合もあるのでそこらへんのハンドリングがややこしい感じになっています。</p>\n<p>繰り返しになりますが、<strong>10行以上の処理を記載するときはGitHub Script使わず、きっちり実装したほうが色々幸せになれます。</strong></p>\n<p>ともかく、このGitHub Actionsのおかげで期限ラベルを設定するだけで、Milestoneも設定されるようになりました！</p>\n<h3 id=\"余談\" style=\"position:relative;\"><a href=\"#%E4%BD%99%E8%AB%87\" aria-label=\"余談 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>余談</h3>\n<p>余談ですが、上記のコード、elseに何もしないってコメントしているのにreturnしてますね。💦💦💦💦</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// nothing to do</span>\n  <span class=\"token keyword\">return</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">なんだこれ <a href=\"https://t.co/SyHgBW3VAp\">pic.twitter.com/SyHgBW3VAp</a></p>&mdash; K.Saito (@SightSeekerTw) <a href=\"https://twitter.com/SightSeekerTw/status/1479362069422292992?ref_src=twsrc%5Etfw\">January 7, 2022</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p>というTweetも話題になりましたが、結構自分は何もしないelse書いたりします。がそこらへんの議論は宗教戦争なのでなんとも穏やかにいきたいものです。</p>\n<p>今回の私の実装はreturnしているのでコメントからしてだめですけどね..。</p>\n<h2 id=\"カスタマイズ4-溜まってしまったmilestoneを定期的にcloseする\" style=\"position:relative;\"><a href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA4-%E6%BA%9C%E3%81%BE%E3%81%A3%E3%81%A6%E3%81%97%E3%81%BE%E3%81%A3%E3%81%9Fmilestone%E3%82%92%E5%AE%9A%E6%9C%9F%E7%9A%84%E3%81%ABclose%E3%81%99%E3%82%8B\" aria-label=\"カスタマイズ4 溜まってしまったmilestoneを定期的にcloseする permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>カスタマイズ4 溜まってしまったMilestoneを定期的にCloseする</h2>\n<p>カスタマイズ3で期限タスクが発生するたびにMilestoneを作る運用にしてしまったことで、Milestoneに過去の不要な日付のものがOpenし続ける状態になってしまいました。</p>\n<p>視認性も悪く精神衛生上も悪いので、期日を過ぎていてかつ、紐づくタスクすべてDoneになっているMilestoneは自動的にCloseするようにします。</p>\n<p>こちらもGitHub Actionsで実装します。ただし、今回は前回の反省を活かし<a href=\"https://github.com/marketplace/actions/github-script\" target=\"_blank\" rel=\"noopener noreferrer\">actions/github-script</a>は使いません。Pythonで作りました。</p>\n<p>まずはPythonのコードですが、GitHubへのアクセスは<a href=\"https://github.com/PyGithub/PyGithub\" target=\"_blank\" rel=\"noopener noreferrer\">PyGithub</a>を使いました。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime<span class=\"token punctuation\">,</span> timedelta\n<span class=\"token keyword\">from</span> github <span class=\"token keyword\">import</span> Github\n\nACCESS_TOKEN <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">\"GITHUB_TOKEN\"</span><span class=\"token punctuation\">)</span>\nREPO <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">\"GITHUB_REPOSITORY\"</span><span class=\"token punctuation\">)</span>\ng <span class=\"token operator\">=</span> Github<span class=\"token punctuation\">(</span>ACCESS_TOKEN<span class=\"token punctuation\">)</span>\n\nrepo <span class=\"token operator\">=</span> g<span class=\"token punctuation\">.</span>get_repo<span class=\"token punctuation\">(</span>REPO<span class=\"token punctuation\">)</span>\nopen_milestones <span class=\"token operator\">=</span> repo<span class=\"token punctuation\">.</span>get_milestones<span class=\"token punctuation\">(</span>state<span class=\"token operator\">=</span><span class=\"token string\">\"open\"</span><span class=\"token punctuation\">)</span>\nyesterday <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> timedelta<span class=\"token punctuation\">(</span>days<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\nshould_close_milestone <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> milestone <span class=\"token keyword\">in</span> open_milestones<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>milestone<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> milestone<span class=\"token punctuation\">.</span>due_on <span class=\"token operator\">&lt;</span> yesterday <span class=\"token keyword\">and</span> milestone<span class=\"token punctuation\">.</span>open_issues <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        should_close_milestone<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>milestone<span class=\"token punctuation\">)</span>\n        milestone<span class=\"token punctuation\">.</span>edit<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span>milestone<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span> state<span class=\"token operator\">=</span><span class=\"token string\">\"closed\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>should_close_milestone<span class=\"token punctuation\">)</span></code></pre></div>\n<p>といった感じでopenしているmilestoneを取得して、昨日までの期日のMilestoneでopenしているIssueが0件のものをclosedにしていくシンプルスクリプトです。</p>\n<p>GitHub Scriptに比べて、IDEで型アノテーションが効いており、開発体験よかったです。</p>\n<p>次にGitHub Actionsですがただon scheduleでこちらのPythonを実行しているだけなので貼り付けは割愛します。</p>\n<h2 id=\"カスタマイズ5-日報リマインダー機能の作成\" style=\"position:relative;\"><a href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA5-%E6%97%A5%E5%A0%B1%E3%83%AA%E3%83%9E%E3%82%A4%E3%83%B3%E3%83%80%E3%83%BC%E6%A9%9F%E8%83%BD%E3%81%AE%E4%BD%9C%E6%88%90\" aria-label=\"カスタマイズ5 日報リマインダー機能の作成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>カスタマイズ5 日報&#x26;リマインダー機能の作成</h2>\n<p>さて、ラストになりましたがリマインダー機能を作っていきます。</p>\n<p>こちらちょっと趣向を凝らして<strong>日報&#x26;リマインダー</strong>にすることにしました。</p>\n<p>一日一回、Markdown形式で日報を作りレポジトリにpushすると同時にSlack通知し日報の中に明日期限のタスクも合わせて記載する、という方法を採用しました。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime<span class=\"token punctuation\">,</span> timedelta\n<span class=\"token keyword\">import</span> string\n<span class=\"token keyword\">from</span> github <span class=\"token keyword\">import</span> Github\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> json\n\nTEMPLATE <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"# ${date} の日報\n## やったこと\n${today_closed_issues_string}\n## 今日やろうと思ったこと\n${today_open_issues_string}\n## 明日までにやらないといけないこと\n${tommorrow_due_to_issues_string}\n\"\"\"</span>\n\nTEMPLATE_SLACK <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"*${date} の日報*\n*やったこと*\n${today_closed_issues_mrkdwn_string}\n*今日やろうと思ったこと*\n${today_open_issues__mrkdwn_string}\n*明日までにやらないといけないこと*\n${tommorrow_due_to_issues__mrkdwn_string}\n\"\"\"</span>\n\nACCESS_TOKEN <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">\"GITHUB_TOKEN\"</span><span class=\"token punctuation\">)</span>\nREPO <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">\"GITHUB_REPOSITORY\"</span><span class=\"token punctuation\">)</span>\nSLACK_WEB_HOOK <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"SLACK_WEB_HOOK\"</span><span class=\"token punctuation\">)</span>\ng <span class=\"token operator\">=</span> Github<span class=\"token punctuation\">(</span>ACCESS_TOKEN<span class=\"token punctuation\">)</span>\n\nrepo <span class=\"token operator\">=</span> g<span class=\"token punctuation\">.</span>get_repo<span class=\"token punctuation\">(</span>REPO<span class=\"token punctuation\">)</span>\nopen_issues <span class=\"token operator\">=</span> repo<span class=\"token punctuation\">.</span>get_issues<span class=\"token punctuation\">(</span>state<span class=\"token operator\">=</span><span class=\"token string\">\"open\"</span><span class=\"token punctuation\">)</span>\nclosed_issues <span class=\"token operator\">=</span> repo<span class=\"token punctuation\">.</span>get_issues<span class=\"token punctuation\">(</span>state<span class=\"token operator\">=</span><span class=\"token string\">\"closed\"</span><span class=\"token punctuation\">)</span>\ntoday <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntommorrow <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span>hour<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> minute<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> second<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> microsecond<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>days<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\ntoday_closed_issues <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ntoday_open_issues <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ndue_to_issues <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ntoday_closed_mrkdwn_issues <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ntoday_open_mrkdwn_issues <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ndue_to_mrkdwn_issues <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> issue <span class=\"token keyword\">in</span> closed_issues<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> issue<span class=\"token punctuation\">.</span>closed_at<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> today<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        today_closed_issues<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>issue<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span></span><span class=\"token string\">](</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>issue<span class=\"token punctuation\">.</span>html_url<span class=\"token punctuation\">}</span></span><span class=\"token string\">)\"</span></span><span class=\"token punctuation\">)</span>\n        today_closed_mrkdwn_issues<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"&lt;</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>issue<span class=\"token punctuation\">.</span>html_url<span class=\"token punctuation\">}</span></span><span class=\"token string\">|</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>issue<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span></span><span class=\"token string\">>\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> issue <span class=\"token keyword\">in</span> open_issues<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>issue<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> issue<span class=\"token punctuation\">.</span>created_at<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> today<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        today_open_issues<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>issue<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span></span><span class=\"token string\">](</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>issue<span class=\"token punctuation\">.</span>html_url<span class=\"token punctuation\">}</span></span><span class=\"token string\">)\"</span></span><span class=\"token punctuation\">)</span>\n        today_open_mrkdwn_issues<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"&lt;</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>issue<span class=\"token punctuation\">.</span>html_url<span class=\"token punctuation\">}</span></span><span class=\"token string\">|</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>issue<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span></span><span class=\"token string\">>\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> issue<span class=\"token punctuation\">.</span>milestone <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> issue<span class=\"token punctuation\">.</span>milestone<span class=\"token punctuation\">.</span>due_on <span class=\"token operator\">&lt;</span> tommorrow<span class=\"token punctuation\">:</span>\n            due_to_issues<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>issue<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span></span><span class=\"token string\">](</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>issue<span class=\"token punctuation\">.</span>html_url<span class=\"token punctuation\">}</span></span><span class=\"token string\">)\"</span></span><span class=\"token punctuation\">)</span>\n            due_to_mrkdwn_issues<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"&lt;</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>issue<span class=\"token punctuation\">.</span>html_url<span class=\"token punctuation\">}</span></span><span class=\"token string\">|</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>issue<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span></span><span class=\"token string\">>\"</span></span><span class=\"token punctuation\">)</span>\ntemplate_text <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>Template<span class=\"token punctuation\">(</span>TEMPLATE<span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> template_text<span class=\"token punctuation\">.</span>safe_substitute<span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">:</span> today<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">\"today_closed_issues_string\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"- \"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n- \"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>today_closed_issues<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">\"today_open_issues_string\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"- \"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n- \"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>today_open_issues<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">\"tommorrow_due_to_issues_string\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"- \"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n- \"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>due_to_issues<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n     <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n\ntemplate_slack_text <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>Template<span class=\"token punctuation\">(</span>TEMPLATE_SLACK<span class=\"token punctuation\">)</span>\nresult_slack <span class=\"token operator\">=</span> template_slack_text<span class=\"token punctuation\">.</span>safe_substitute<span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">:</span> today<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">\"today_closed_issues_mrkdwn_string\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"* \"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n* \"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>today_closed_mrkdwn_issues<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">\"today_open_issues__mrkdwn_string\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"* \"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n* \"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>today_open_mrkdwn_issues<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">\"tommorrow_due_to_issues__mrkdwn_string\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"* \"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n* \"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>due_to_mrkdwn_issues<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n     <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n\nos<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"daily_report/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>today<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%Y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>today<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%m'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> exist_ok<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"daily_report/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>today<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%Y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>today<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%m'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>today<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">.md\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> result_slack<span class=\"token punctuation\">}</span>\nrequests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>SLACK_WEB_HOOK<span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>大したことをやっていないスクリプトなのですが、GitHubのMarkdownと<a href=\"https://slack.com/intl/ja-jp/help/articles/202288908-%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%AE%E6%9B%B8%E5%BC%8F%E8%A8%AD%E5%AE%9A\" target=\"_blank\" rel=\"noopener noreferrer\">SlackのMarkdown</a>が異なっており、妙な分岐を入れる必要がありました。</p>\n<p>GitHubにpushすることでMarkdownとして日報を管理します。</p>\n<p><img src=\"https://i.imgur.com/KXALJYW.png\" alt=\"img\"></p>\n<p>また、Slackへのリマインダーも実施します。</p>\n<p><img src=\"https://i.imgur.com/4petOz9.png\" alt=\"img\"></p>\n<p>これで日報&#x26;リマインダー機能もできました。</p>\n<h2 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p><img src=\"https://i.imgur.com/LnpjYNN.png\" alt=\"img\"></p>\n<p>これで快適にToDoを記載できるようになったのですが、肝心なToDoがあまりないのでこの仕組みをいつまで使い続けるのか不安になってきました。</p>","fields":{"slug":"2022/01/08/personal-task"},"frontmatter":{"tags":["GitHub","GitHubActions","ToDo"],"templateKey":"blog-post","slug":"2022/01/08/personal-task","id":null,"title":"2022年はもっと生産的に過ごすためにGitHub Projectを使ったToDo管理やります!!!","url":"2022/01/08/personal-task","date":"2022-01-08T09:06:06.213Z","description":"GitHub Projectを使ったToDo管理でちょっとカスタマイズすることで大幅に使いやすくなったのでそのご紹介。","headerImage":"https://i.imgur.com/LnpjYNN.png","year":"2022","month":"01"}}}],"pathPrefix":"pages","first":true,"last":false,"index":1,"pageCount":11,"additionalContext":{"totalCount":110}}},"staticQueryHashes":["2959249232"]}