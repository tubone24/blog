name: DeployToNetlifyPRD
on:
  push:
    branches:
      - master
env:
  cache-version: v1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          registry-url: https://npm.pkg.github.com/
          scope: '@tubone24'
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
            ~/.npm
            node_modules
            .cache
            public
          key: ${{ runner.os }}-build-${{ env.cache-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-version }}-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-build-${{ env.cache-version }}-
            ${{ runner.os }}-
      - name: npm install
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: npm install
      - name: Typecheck
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: npm run typecheck
      - name: Test E2E
        env:
          GATSBY_GITHUB_CLIENT_SECRET: ${{secrets.GATSBY_GITHUB_CLIENT_SECRET}}
          GATSBY_GITHUB_CLIENT_ID: ${{secrets.GATSBY_GITHUB_CLIENT_ID}}
          GATSBY_ALGOLIA_SEARCH_API_KEY: ${{secrets.GATSBY_ALGOLIA_SEARCH_API_KEY}}
          GATSBY_ALGOLIA_INDEX_NAME: ${{secrets.GATSBY_ALGOLIA_INDEX_NAME}}
          GATSBY_ALGOLIA_APP_ID: ${{secrets.GATSBY_ALGOLIA_APP_ID}}
          GATSBY_ALGOLIA_ADMIN_API_KEY: ${{secrets.GATSBY_ALGOLIA_ADMIN_API_KEY}}
          GATSBY_GITHUB_SHA: ${{ github.sha }}
          FAUNADB_SERVER_SECRET: ${{secrets.FAUNADB_SERVER_SECRET}}
          NETLIFY_ENV: deploy-preview
        run: npm run test:e2e:ci
      - uses: actions/upload-artifact@v2
        with:
          name: main.spec.js.mp4
          path: ./cypress/videos/e2e/main.spec.js.mp4
  build:
    runs-on: ubuntu-latest
    needs: ['test']
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          registry-url: https://npm.pkg.github.com/
          scope: '@tubone24'
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
            ~/.npm
            node_modules
            .cache
            public
          key: ${{ runner.os }}-build-${{ env.cache-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-version }}-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: npm install
        env:
          GATSBY_GITHUB_CLIENT_SECRET: ${{secrets.GATSBY_GITHUB_CLIENT_SECRET}}
          GATSBY_GITHUB_CLIENT_ID: ${{secrets.GATSBY_GITHUB_CLIENT_ID}}
          GATSBY_ALGOLIA_SEARCH_API_KEY: ${{secrets.GATSBY_ALGOLIA_SEARCH_API_KEY}}
          GATSBY_ALGOLIA_INDEX_NAME: ${{secrets.GATSBY_ALGOLIA_INDEX_NAME}}
          GATSBY_ALGOLIA_APP_ID: ${{secrets.GATSBY_ALGOLIA_APP_ID}}
          GATSBY_ALGOLIA_ADMIN_API_KEY: ${{secrets.GATSBY_ALGOLIA_ADMIN_API_KEY}}
          GATSBY_GITHUB_SHA: ${{ github.sha }}
          FAUNADB_SERVER_SECRET: ${{secrets.FAUNADB_SERVER_SECRET}}
          NETLIFY_ENV: production
          PERCY_TOKEN: ${{secrets.PERCY_TOKEN}}
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: npm install
      - name: npm build
        env:
          GATSBY_GITHUB_CLIENT_SECRET: ${{secrets.GATSBY_GITHUB_CLIENT_SECRET}}
          GATSBY_GITHUB_CLIENT_ID: ${{secrets.GATSBY_GITHUB_CLIENT_ID}}
          GATSBY_ALGOLIA_SEARCH_API_KEY: ${{secrets.GATSBY_ALGOLIA_SEARCH_API_KEY}}
          GATSBY_ALGOLIA_INDEX_NAME: ${{secrets.GATSBY_ALGOLIA_INDEX_NAME}}
          GATSBY_ALGOLIA_APP_ID: ${{secrets.GATSBY_ALGOLIA_APP_ID}}
          GATSBY_ALGOLIA_ADMIN_API_KEY: ${{secrets.GATSBY_ALGOLIA_ADMIN_API_KEY}}
          GATSBY_GITHUB_SHA: ${{ github.sha }}
          FAUNADB_SERVER_SECRET: ${{secrets.FAUNADB_SERVER_SECRET}}
          NETLIFY_ENV: production
          PERCY_TOKEN: ${{secrets.PERCY_TOKEN}}
        run: npm run build:nocache
      - name: Push Bundle Analyze
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public/bundle-report.html
          keep_files: true
      - name: Remove Bundle Analyze
        run: rm ./public/bundle-report.html
      - name: Deploy to netlify
        run: npx netlify-cli deploy --prod --dir=./public
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  lighthouse:
    runs-on: macos-latest
    needs: ['build']
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          registry-url: https://npm.pkg.github.com/
          scope: '@tubone24'
      - name: Install lighthouse
        run: sudo npm i -g lighthouse
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Run lighthouse
        run: |
          lighthouse \
            --chrome-flags="--headless" \
            --output html --output-path /tmp/report.html \
            'https://blog.tubone-project24.xyz'
          mkdir ./public
          cp /tmp/report.html ./public/report.html
      - name: Set up Python 3.x
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Dependencies
        working-directory: ./scripts/wordcloud
        run:
          pip install -r requirements.txt
      - name: Download Neologd Dictionary
        working-directory: ./scripts/wordcloud
        run:
          sh scripts/download_neologd_dict.sh
      - name: Generate Word Cloud
        working-directory: ./scripts/wordcloud
        run: python3 src/main.py
      - name: copy wordcloud
        working-directory: ./scripts/wordcloud
        run: mv word_cloud_blog_large.png word_cloud_blog.webp word_cloud_blog.png ../../public
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          keep_files: true
